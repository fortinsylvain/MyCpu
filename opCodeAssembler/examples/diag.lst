                ; -----------------------------------------------------------------
                ; Homebrew MyCPU diagnostic program
                ; Author: Sylvain Fortin
                ; Date : 21 march 2025
                ; Documentation : diag.asm is used to test the assembler
                ;                 instructions of MyCPU.
                ; Memory map of the computer
                ; 0000H - 17FFH Total RAM space
                ; 0000H - 00FFH Stack
                ; 0100H - 17EF  Free for application
                ; E000H - F000H EEPROM for application program
                ; -----------------------------------------------------------------

                ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |    ?w5      ?w4   |   ?w3     ?w2   |   ?w1     ?w0   | 16 bits
                ;         ?l3         |         ?l2       |       ?l1       |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                ?b15     EQU 0x1000
                ?b14     EQU 0x1001
                ?b13     EQU 0x1002
                ?b12     EQU 0x1003
                ?b11     EQU 0x1004
                ?b10     EQU 0x1005
                ?b9      EQU 0x1006
                ?b8      EQU 0x1007
                ?b7      EQU 0x1008
                ?b6      EQU 0x1009
                ?b5      EQU 0x100A
                ?b4      EQU 0x100B
                ?b3      EQU 0x100C
                ?b2      EQU 0x100D
                ?b1      EQU 0x100E
                ?b0      EQU 0x100F

                ?w7      EQU 0x1000  ; ?b15:?b14
                ?w6      EQU 0x1002  ; ?b13:?b12
                ?w5      EQU 0x1004  ; ?b11:?b10
                ?w4      EQU 0x1006  ; ?b9:?b8
                ?w3      EQU 0x1008  ; ?b7:?b6
                ?w2      EQU 0x100A  ; ?b5:?b4
                ?w1      EQU 0x100C  ; ?b3:?b2
                ?w0      EQU 0x100E  ; ?b1:?b0

                ?l3      EQU 0x1000  ; ?b15,?b14,?b13,?b12
                ?l2      EQU 0x1004  ; ?b11,?b10,?b9,?b8
                ?l1      EQU 0x1008  ; ?b7,?b6,?b5,?b4
                ?l0      EQU 0x100C  ; ?b3,?b2,?b1,?b0

                ; RAM Reserved location
                SP       EQU 0x1FF0  ; SP      Stack Pointer 8 bit
                JSH      EQU 0x1FF1  ; JSH     Temporary storage for JSR MSB address
                JSL      EQU 0x1FF2  ; JSL          "       "     "   "  LSB    "
                XH       EQU 0x1FF3  ; X MSB   X Register MSB
                XL       EQU 0x1FF4  ; X LSB   X Register LSB
                EQUAL    EQU 0x1FFA  ; E       bit<0> Equal Status bit
                CARRY    EQU 0x1FFB  ; C       bit<0> Carry Status bit
                REG_A    EQU 0x1FFC  ; A       A Register
                IPH      EQU 0x1FFE  ; IPH	    Instruction Pointer MSB
                IPL      EQU 0x1FFF  ; IPL          "         "    LSB

                ; Peripheral
                LEDPORT  EQU 0xC000  ; PORT for the LED

                ; Program start
                         ORG/0xE000  ; EEPROM Start        
E000 30 00      START    LDA #0x00   ; Clear LED
E002 36                  NOTA
E003 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; Test Carry Status bit integrity
                         ; --------------------------------------------------------------------
E006 30 01      TST01    LDA #0x01
E008 36                  NOTA
E009 31 C0 00            STA LEDPORT ; Output to LED port
E00C 30 00               LDA #0x00
E00E 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E011 2A 1F FB            LDA CARRY   ; Read Carry Status
E014 2D 00               CMPA #0x00
E016 2B F8 00            JNE FAIL
E019 30 01               LDA #0x01
E01B 31 1F FB            STA CARRY   ; Write 1 to carry bit <0>
E01E 2A 1F FB            LDA CARRY   ; Read Carry Status
E021 2D 01               CMPA #0x01
E023 2B F8 00            JNE FAIL
E026 30 00               LDA #0x00
E028 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E02B 2A 1F FB            LDA CARRY   ; Read Carry Status
E02E 2D 00               CMPA #0x00
E030 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; Test Equal Status bit integrity
                         ; --------------------------------------------------------------------
E033 30 02      TST02    LDA #0x02
E035 36                  NOTA
E036 31 C0 00            STA LEDPORT ; Output to LED port
E039 30 00               LDA #0x00
E03B 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E03E 2A 1F FA            LDA EQUAL   ; Read Equal Status
E041 2D 00               CMPA #0x00
E043 2B F8 00            JNE FAIL
E046 30 01               LDA #0x01
E048 31 1F FA            STA EQUAL   ; Write 1 to Equal Status bit <0>
E04B 2A 1F FA            LDA EQUAL   ; Read Equal Status
E04E 2D 01               CMPA #0x01
E050 2B F8 00            JNE FAIL
E053 30 00               LDA #0x00
E055 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E058 2A 1F FA            LDA EQUAL   ; Read Equal Status
E05B 2D 00               CMPA #0x00
E05D 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.06 JSR    Jump to SubRoutine
                         ; --------------------------------------------------------------------
E060 30 06      TSTOP06  LDA #0x06
E062 36                  NOTA
E063 31 C0 00            STA LEDPORT ; Output to LED port
E066 06 FF C0            JSR TJSR1   ; 1 layer
E069 06 FF C3            JSR TJSR2   ; 2
E06C 06 FF C9            JSR TJSR3   ; 3
E06F 06 FF CF            JSR TJSR4   ; 4
E072 06 FF D5            JSR TJSR5   ; 5
E075 06 FF DB            JSR TJSR6   ; 6
E078 06 FF E1            JSR TJSR7   ; 7
E07B 06 FF E7            JSR TJSR8   ; 8
E07E 06 FF ED            JSR TJSR9   ; 9
E081 06 FF F3            JSR TJSR10  ; 10
                         ; --------------------------------------------------------------------
                         ; OP.07 RTS    ReTurn from Subroutine
                         ; Tested in OP.06 JSR
                         ; --------------------------------------------------------------------
                         ;LDA #07H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.08 STOP
                         ; STOP EXECUTING
                         ; Cannot test here it will stop execution...
                         ; A diagnostic test failure is expected to call this instruction ending 
                         ; program exectution.
                         ; --------------------------------------------------------------------
                         ;LDA #08H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ;STOP
                         ; --------------------------------------------------------------------
                         ; OP.09 NOP   NO OPERATION
                         ; --------------------------------------------------------------------
E084 30 09      TSTOP09  LDA #0x09
E086 36                  NOTA
E087 31 C0 00            STA LEDPORT ; Output to LED port
E08A 09                  NOP
E08B 09                  NOP
E08C 09                  NOP
                         ; --------------------------------------------------------------------
                         ; OP.0A LDA (X) Load Reg A Indexed
                         ; --------------------------------------------------------------------
E08D 30 0A      TSTOP0A  LDA #0x0A
E08F 36                  NOTA
E090 31 C0 00            STA LEDPORT ; Output to LED port
E093 30 55               LDA #0x55   ; Store some value in RAM
E095 31 01 00            STA 0x0100
E098 30 AA               LDA #0xAA
E09A 31 01 01            STA 0x0101
E09D 30 DE               LDA #0xDE
E09F 31 01 F0            STA 0x01F0
E0A2 30 CA               LDA #0xCA
E0A4 31 01 FF            STA 0x01FF
E0A7 38 01 00            LDX #0x0100 ; Verify each locations
E0AA 0A                  LDA (X)
E0AB 2D 55               CMPA #0x55
E0AD 2B F8 00            JNE FAIL    ; Jump if result not good
E0B0 38 01 01            LDX #0x0101
E0B3 0A                  LDA (X)
E0B4 2D AA               CMPA #0xAA
E0B6 2B F8 00            JNE FAIL
E0B9 38 01 F0            LDX #0x01F0
E0BC 0A                  LDA (X)
E0BD 2D DE               CMPA #0xDE
E0BF 2B F8 00            JNE FAIL
E0C2 38 01 FF            LDX #0x01FF
E0C5 0A                  LDA (X)
E0C6 2D CA               CMPA #0xCA
E0C8 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.0B STA (X) Store Reg A Indexed
                         ; --------------------------------------------------------------------
E0CB 30 0B      TSTOP0B  LDA #0x0B
E0CD 36                  NOTA
E0CE 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.0C JRA 0x** Unconditional relative jump
                         ; --------------------------------------------------------------------
                         ; Testing using hexadecimal value after the mnemonic
E0D1 30 0C               LDA #0x0C
E0D3 36                  NOTA
E0D4 31 C0 00            STA LEDPORT ; Output to LED port
E0D7 0C 00               JRA 0x00    ; Test jump foward, Execute next instruction
E0D9 0C 01               JRA 0x01    ; Skip next instruction
E0DB 09                  NOP         ; 1
E0DC 0C 02               JRA 0x02    ; Skip next 2 instructions
E0DE 09                  NOP         ; 1
E0DF 09                  NOP         ; 2
E0E0 0C 03               JRA 0x03    ; Skip next 3 instructions
E0E2 09                  NOP         ; 1 
E0E3 09                  NOP         ; 2
E0E4 09                  NOP         ; 3
E0E5 0C 05               JRA 0x05    ; Skip next 5 instructions
E0E7 09                  NOP         ; 1
E0E8 09                  NOP         ; 2
E0E9 09                  NOP         ; 3
E0EA 09                  NOP         ; 4
E0EB 09                  NOP         ; 5
E0EC 0C 10               JRA 0x10    ; Skip next 16 instructions
E0EE 09                  NOP         ; 1
E0EF 09                  NOP         ; 2
E0F0 09                  NOP         ; 3
E0F1 09                  NOP         ; 4
E0F2 09                  NOP         ; 5
E0F3 09                  NOP         ; 6
E0F4 09                  NOP         ; 7
E0F5 09                  NOP         ; 8
E0F6 09                  NOP         ; 9
E0F7 09                  NOP         ; 10
E0F8 09                  NOP         ; 11
E0F9 09                  NOP         ; 12
E0FA 09                  NOP         ; 13
E0FB 09                  NOP         ; 14
E0FC 09                  NOP         ; 15
E0FD 09                  NOP         ; 16
E0FE 0C 22               JRA 0x22    ; Skip next 34 bytes
E100 09                  NOP         ; 1
E101 09                  NOP         ; 2
E102 09                  NOP         ; 3
E103 0C 1F               JRA 0x1F   ; 4-5   Final jump to the end of thest
E105 09                  NOP         ; 6
E106 09                  NOP         ; 7
E107 09                  NOP         ; 8
E108 09                  NOP         ; 9
E109 09                  NOP         ; 10
E10A 09                  NOP         ; 11
E10B 09                  NOP         ; 12
E10C 09                  NOP         ; 13
E10D 09                  NOP         ; 14
E10E 09                  NOP         ; 15
E10F 09                  NOP         ; 16
E110 09                  NOP         ; 17
E111 09                  NOP         ; 18
E112 09                  NOP         ; 19
E113 09                  NOP         ; 20
E114 09                  NOP         ; 21
E115 09                  NOP         ; 22
E116 09                  NOP         ; 23
E117 09                  NOP         ; 24
E118 09                  NOP         ; 25
E119 0C E8               JRA 0xE8    ; 26-27 Third Backward jump
E11B 09                  NOP         ; 28
E11C 09                  NOP         ; 29
E11D 09                  NOP         ; 30
E11E 09                  NOP         ; 31
E11F 09                  NOP         ; 32
E120 0C F7               JRA 0xF7    ; 33-34 Second Backward jump
E122 0C FC               JRA 0xFC    ; First Backward jump
E124 09                  NOP         ; Arrival of the last jump to end the test
                         ; Testing using symbolic address after the mnemonic
E125 0C 00               JRA TST0B_0 ; Test jump foward, Execute next instruction
E127 0C 01      TST0B_0  JRA TST0B_1 ; Skip next instruction
E129 09                  NOP         ; 1
E12A 0C 02      TST0B_1  JRA TST0B_2 ; Skip next 2 instructions
E12C 09                  NOP         ; 1
E12D 09                  NOP         ; 2
E12E 0C 03      TST0B_2  JRA TST0B_3 ; Skip next 3 instructions
E130 09                  NOP         ; 1 
E131 09                  NOP         ; 2
E132 09                  NOP         ; 3
E133 0C 05      TST0B_3  JRA TST0B_4 ; Skip next 5 instructions
E135 09                  NOP         ; 1
E136 09                  NOP         ; 2
E137 09                  NOP         ; 3
E138 09                  NOP         ; 4
E139 09                  NOP         ; 5
E13A 0C 10      TST0B_4  JRA TST0B_5 ; Skip next 16 instructions
E13C 09                  NOP         ; 1
E13D 09                  NOP         ; 2
E13E 09                  NOP         ; 3
E13F 09                  NOP         ; 4
E140 09                  NOP         ; 5
E141 09                  NOP         ; 6
E142 09                  NOP         ; 7
E143 09                  NOP         ; 8
E144 09                  NOP         ; 9
E145 09                  NOP         ; 10
E146 09                  NOP         ; 11
E147 09                  NOP         ; 12
E148 09                  NOP         ; 13
E149 09                  NOP         ; 14
E14A 09                  NOP         ; 15
E14B 09                  NOP         ; 16
E14C 0C 22      TST0B_5  JRA TST0B_9 ; Skip next 34 bytes
E14E 09                  NOP         ; 1
E14F 09                  NOP         ; 2
E150 09                  NOP         ; 3
E151 0C 1F      TST0B_6  JRA TST0B_10 ; 4-5   Final jump to the end of test
E153 09                  NOP         ; 6
E154 09                  NOP         ; 7
E155 09                  NOP         ; 8
E156 09                  NOP         ; 9
E157 09                  NOP         ; 10
E158 09                  NOP         ; 11
E159 09                  NOP         ; 12
E15A 09                  NOP         ; 13
E15B 09                  NOP         ; 14
E15C 09                  NOP         ; 15
E15D 09                  NOP         ; 16
E15E 09                  NOP         ; 17
E15F 09                  NOP         ; 18
E160 09                  NOP         ; 19
E161 09                  NOP         ; 20
E162 09                  NOP         ; 21
E163 09                  NOP         ; 22
E164 09                  NOP         ; 23
E165 09                  NOP         ; 24
E166 09                  NOP         ; 25
E167 0C E8      TST0B_7  JRA TST0B_6 ; 26-27 Third Backward jump
E169 09                  NOP         ; 28
E16A 09                  NOP         ; 29
E16B 09                  NOP         ; 30
E16C 09                  NOP         ; 31
E16D 09                  NOP         ; 32
E16E 0C F7      TST0B_8  JRA TST0B_7 ; 33-34 Second Backward jump
E170 0C FC      TST0B_9  JRA TST0B_8 ; First Backward jump
E172 09         TST0B_10 NOP         ; Arrival of the last jump to end the test
                ;         ; Higher range testing using symbolic address after the mnemonic
E173 09                  NOP         ; These NOP make relative jump to exercise carry on MSB address boundary
E174 09                  NOP
E175 09                  NOP
E176 09                  NOP
E177 09                  NOP
E178 09                  NOP
E179 09                  NOP
E17A 09                  NOP
E17B 09                  NOP
E17C 09                  NOP
E17D 09                  NOP
E17E 09                  NOP
E17F 09                  NOP
E180 09                  NOP
E181 09                  NOP
E182 09                  NOP
E183 0C 7F               JRA TST0B_12
E185 09                  NOP         ; 1     1     
E186 09                  NOP
                ;         NOP
                ;         NOP
E187 0C 7E      TST0B_11 JRA TST0B_13
E189 09                  NOP
E18A 09                  NOP
E18B 09                  NOP
E18C 09                  NOP
E18D 09                  NOP
E18E 09                  NOP         
E18F 09                  NOP
E190 09                  NOP
E191 09                  NOP
E192 09                  NOP
E193 09                  NOP
E194 09                  NOP         ; 16
E195 09                  NOP         ; 1     2   
E196 09                  NOP
E197 09                  NOP
E198 09                  NOP
E199 09                  NOP
E19A 09                  NOP
E19B 09                  NOP
E19C 09                  NOP
E19D 09                  NOP
E19E 09                  NOP         
E19F 09                  NOP
E1A0 09                  NOP
E1A1 09                  NOP
E1A2 09                  NOP
E1A3 09                  NOP
E1A4 09                  NOP         ; 16
E1A5 09                  NOP         ; 1   3
E1A6 09                  NOP
E1A7 09                  NOP
E1A8 09                  NOP
E1A9 09                  NOP
E1AA 09                  NOP
E1AB 09                  NOP
E1AC 09                  NOP
E1AD 09                  NOP
E1AE 09                  NOP         
E1AF 09                  NOP
E1B0 09                  NOP
E1B1 09                  NOP
E1B2 09                  NOP
E1B3 09                  NOP
E1B4 09                  NOP         ; 16
E1B5 09                  NOP         ; 1   4
E1B6 09                  NOP
E1B7 09                  NOP
E1B8 09                  NOP
E1B9 09                  NOP
E1BA 09                  NOP
E1BB 09                  NOP
E1BC 09                  NOP
E1BD 09                  NOP
E1BE 09                  NOP         
E1BF 09                  NOP
E1C0 09                  NOP
E1C1 09                  NOP
E1C2 09                  NOP
E1C3 09                  NOP
E1C4 09                  NOP         ; 16
E1C5 09                  NOP         ; 1   5
E1C6 09                  NOP
E1C7 09                  NOP
E1C8 09                  NOP
E1C9 09                  NOP
E1CA 09                  NOP
E1CB 09                  NOP
E1CC 09                  NOP
E1CD 09                  NOP
E1CE 09                  NOP         
E1CF 09                  NOP
E1D0 09                  NOP
E1D1 09                  NOP
E1D2 09                  NOP
E1D3 09                  NOP
E1D4 09                  NOP         ; 16
E1D5 09                  NOP         ; 1   5
E1D6 09                  NOP
E1D7 09                  NOP
E1D8 09                  NOP
E1D9 09                  NOP
E1DA 09                  NOP
E1DB 09                  NOP
E1DC 09                  NOP
E1DD 09                  NOP
E1DE 09                  NOP         
E1DF 09                  NOP
E1E0 09                  NOP
E1E1 09                  NOP
E1E2 09                  NOP
E1E3 09                  NOP
E1E4 09                  NOP         ; 16
E1E5 09                  NOP         ; 1   6
E1E6 09                  NOP
E1E7 09                  NOP
E1E8 09                  NOP
E1E9 09                  NOP
E1EA 09                  NOP
E1EB 09                  NOP
E1EC 09                  NOP
E1ED 09                  NOP
E1EE 09                  NOP         
E1EF 09                  NOP
E1F0 09                  NOP
E1F1 09                  NOP
E1F2 09                  NOP
E1F3 09                  NOP
E1F4 09                  NOP         ; 16
E1F5 09                  NOP         ; 1   7
E1F6 09                  NOP
E1F7 09                  NOP
E1F8 09                  NOP
E1F9 09                  NOP
E1FA 09                  NOP
E1FB 09                  NOP
E1FC 09                  NOP
E1FD 09                  NOP
E1FE 09                  NOP         
E1FF 09                  NOP
E200 09                  NOP
E201 09                  NOP
E202 09                  NOP
E203 09                  NOP
                ;         NOP        ; 16
E204 09         TST0B_12 NOP
E205 0C 80               JRA TST0B_11
E207 09         TST0B_13 NOP         ; final foward jump destination     
                         ; --------------------------------------------------------------------
                         ; OP.0D SRLA Shift Right Logical on Reg A
                         ;            0 -> b7 b6 b5 b4 b3 b2 b1 b0 -> C
                         ; --------------------------------------------------------------------
E208 30 0D      TSTOP0D  LDA #0x0D
E20A 36                  NOTA
E20B 31 C0 00            STA LEDPORT ; Output to LED port
E20E 30 A5               LDA #0xA5
E210 0D                  SRLA
E211 2D 52               CMPA #0x52
E213 2B F8 00            JNE FAIL    ; Jump if result not good
E216 2A 1F FB            LDA CARRY   ; Read the Carry Status
E219 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E21B 2B F8 00            JNE FAIL    ; Error if different
E21E 30 A5               LDA #0xA5
E220 0D                  SRLA
E221 0D                  SRLA
E222 2D 29               CMPA #0x29
E224 2B F8 00            JNE FAIL    ; Jump if result not good
E227 2A 1F FB            LDA CARRY   ; Read the Carry Status
E22A 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E22C 2B F8 00            JNE FAIL    ; Error if different
E22F 30 A5               LDA #0xA5
E231 0D                  SRLA
E232 0D                  SRLA
E233 0D                  SRLA
E234 2D 14               CMPA #0x14
E236 2B F8 00            JNE FAIL    ; Jump if result not good
E239 2A 1F FB            LDA CARRY   ; Read the Carry Status
E23C 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E23E 2B F8 00            JNE FAIL    ; Error if different
E241 30 A5               LDA #0xA5
E243 0D                  SRLA
E244 0D                  SRLA
E245 0D                  SRLA
E246 0D                  SRLA
E247 2D 0A               CMPA #0x0A
E249 2B F8 00            JNE FAIL    ; Jump if result not good
E24C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E24F 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E251 2B F8 00            JNE FAIL    ; Error if different
E254 30 A5               LDA #0xA5
E256 0D                  SRLA
E257 0D                  SRLA
E258 0D                  SRLA
E259 0D                  SRLA
E25A 0D                  SRLA
E25B 2D 05               CMPA #0x05
E25D 2B F8 00            JNE FAIL    ; Jump if result not good
E260 2A 1F FB            LDA CARRY   ; Read the Carry Status
E263 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E265 2B F8 00            JNE FAIL    ; Error if different
E268 30 A5               LDA #0xA5
E26A 0D                  SRLA
E26B 0D                  SRLA
E26C 0D                  SRLA
E26D 0D                  SRLA
E26E 0D                  SRLA
E26F 0D                  SRLA
E270 2D 02               CMPA #0x02
E272 2B F8 00            JNE FAIL    ; Jump if result not good
E275 2A 1F FB            LDA CARRY   ; Read the Carry Status
E278 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E27A 2B F8 00            JNE FAIL    ; Error if different
E27D 30 A5               LDA #0xA5
E27F 0D                  SRLA
E280 0D                  SRLA
E281 0D                  SRLA
E282 0D                  SRLA
E283 0D                  SRLA
E284 0D                  SRLA
E285 0D                  SRLA
E286 2D 01               CMPA #0x01
E288 2B F8 00            JNE FAIL    ; Jump if result not good
E28B 2A 1F FB            LDA CARRY   ; Read the Carry Status
E28E 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E290 2B F8 00            JNE FAIL    ; Error if different
E293 30 A5               LDA #0xA5
E295 0D                  SRLA
E296 0D                  SRLA
E297 0D                  SRLA
E298 0D                  SRLA
E299 0D                  SRLA
E29A 0D                  SRLA
E29B 0D                  SRLA
E29C 0D                  SRLA
E29D 2D 00               CMPA #0x00
E29F 2B F8 00            JNE FAIL    ; Jump if result not good
E2A2 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2A5 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2A7 2B F8 00            JNE FAIL    ; Error if different
E2AA 30 A5               LDA #0xA5
E2AC 0D                  SRLA
E2AD 0D                  SRLA
E2AE 0D                  SRLA
E2AF 0D                  SRLA
E2B0 0D                  SRLA
E2B1 0D                  SRLA
E2B2 0D                  SRLA
E2B3 0D                  SRLA
E2B4 0D                  SRLA
E2B5 2D 00               CMPA #0x00
E2B7 2B F8 00            JNE FAIL    ; Jump if result not good
E2BA 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2BD 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E2BF 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.0E SLLA Shift Left Logical on Reg A
                         ;       SLAA Shift Left Arithmetic on Reg A (SLAA same as SLLA)
                         ;            C <- b7 b6 b5 b4 b3 b2 b1 b0 <- 0
                         ; --------------------------------------------------------------------
E2C2 30 0E      TSTOP0E  LDA #0x0E
E2C4 36                  NOTA
E2C5 31 C0 00            STA LEDPORT ; Output to LED port
E2C8 30 A5               LDA #0xA5
E2CA 0E                  SLLA
E2CB 2D 4A               CMPA #0x4A
E2CD 2B F8 00            JNE FAIL    ; Jump if result not good
E2D0 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2D3 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2D5 2B F8 00            JNE FAIL    ; Error if different
E2D8 30 A5               LDA #0xA5
E2DA 0E                  SLLA
E2DB 0E                  SLLA
E2DC 2D 94               CMPA #0x94
E2DE 2B F8 00            JNE FAIL    ; Jump if result not good
E2E1 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2E4 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E2E6 2B F8 00            JNE FAIL    ; Error if different
E2E9 30 A5               LDA #0xA5
E2EB 0E                  SLLA
E2EC 0E                  SLLA
E2ED 0E                  SLLA
E2EE 2D 28               CMPA #0x28
E2F0 2B F8 00            JNE FAIL    ; Jump if result not good
E2F3 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2F6 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2F8 2B F8 00            JNE FAIL    ; Error if different
E2FB 30 A5               LDA #0xA5
E2FD 0E                  SLLA
E2FE 0E                  SLLA
E2FF 0E                  SLLA
E300 0E                  SLLA
E301 2D 50               CMPA #0x50
E303 2B F8 00            JNE FAIL    ; Jump if result not good
E306 2A 1F FB            LDA CARRY   ; Read the Carry Status
E309 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E30B 2B F8 00            JNE FAIL    ; Error if different
E30E 30 A5               LDA #0xA5
E310 0E                  SLLA
E311 0E                  SLLA
E312 0E                  SLLA
E313 0E                  SLLA
E314 0E                  SLLA
E315 2D A0               CMPA #0xA0
E317 2B F8 00            JNE FAIL    ; Jump if result not good
E31A 2A 1F FB            LDA CARRY   ; Read the Carry Status
E31D 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E31F 2B F8 00            JNE FAIL    ; Error if different
E322 30 A5               LDA #0xA5
E324 0E                  SLLA
E325 0E                  SLLA
E326 0E                  SLLA
E327 0E                  SLLA
E328 0E                  SLLA
E329 0E                  SLAA
E32A 2D 40               CMPA #0x40
E32C 2B F8 00            JNE FAIL    ; Jump if result not good
E32F 2A 1F FB            LDA CARRY   ; Read the Carry Status
E332 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E334 2B F8 00            JNE FAIL    ; Error if different
E337 30 A5               LDA #0xA5
E339 0E                  SLLA
E33A 0E                  SLLA
E33B 0E                  SLLA
E33C 0E                  SLLA
E33D 0E                  SLLA
E33E 0E                  SLAA
E33F 0E                  SLAA
E340 2D 80               CMPA #0x80
E342 2B F8 00            JNE FAIL    ; Jump if result not good
E345 2A 1F FB            LDA CARRY   ; Read the Carry Status
E348 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E34A 2B F8 00            JNE FAIL    ; Error if different
E34D 30 A5               LDA #0xA5
E34F 0E                  SLLA
E350 0E                  SLLA
E351 0E                  SLLA
E352 0E                  SLLA
E353 0E                  SLLA
E354 0E                  SLAA
E355 0E                  SLAA
E356 0E                  SLAA
E357 2D 00               CMPA #0x00
E359 2B F8 00            JNE FAIL    ; Jump if result not good
E35C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E35F 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E361 2B F8 00            JNE FAIL    ; Error if different
E364 30 A5               LDA #0xA5
E366 0E                  SLLA
E367 0E                  SLLA
E368 0E                  SLLA
E369 0E                  SLLA
E36A 0E                  SLLA
E36B 0E                  SLAA
E36C 0E                  SLAA
E36D 0E                  SLAA
E36E 0E                  SLAA
E36F 2D 00               CMPA #0x00
E371 2B F8 00            JNE FAIL    ; Jump if result not good
E374 2A 1F FB            LDA CARRY   ; Read the Carry Status
E377 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E379 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.0F 
                         ; JRNC Jump Relatif if Not Carry
                         ; --------------------------------------------------------------------
E37C 30 0F      TSTOP0F  LDA #0x0F
E37E 36                  NOTA
E37F 31 C0 00            STA LEDPORT ; Output to LED port
E382 30 00               LDA #0x00   ; Clear carry
E384 31 1F FB            STA CARRY
E387 0F 03               JRNC TST0F_0
E389 32 F8 00            JMP FAIL
E38C 30 01      TST0F_0  LDA #0x01   ; Set carry
E38E 31 1F FB            STA CARRY
E391 0F 03               JRNC TST0F_1
E393 32 E3 99            JMP TST0F_2
E396 32 F8 00   TST0F_1  JMP FAIL
E399 09         TST0F_2  NOP
                         ; --------------------------------------------------------------------
                         ; OP.10  RRCA   Rotate Right Logical Reg A through Carry 
                         ;               C -> b7 b6 b5 b4 b3 b2 b1 b0 -> C  
                         ; --------------------------------------------------------------------
E39A 30 10      TSTOP29  LDA #0x10
E39C 36                  NOTA
E39D 31 C0 00            STA LEDPORT ; Output to LED port
E3A0 30 00               LDA #0x00   ; Clear Carry
E3A2 31 1F FB            STA CARRY
E3A5 10                  RRCA
E3A6 2D 00               CMPA #0x00
E3A8 2B F8 00            JNE FAIL
E3AB 30 00               LDA #0x00   ; Clear Carry
E3AD 31 1F FB            STA CARRY
E3B0 10                  RRCA
E3B1 2A 1F FB            LDA CARRY
E3B4 2D 00               CMPA #0x00
E3B6 2B F8 00            JNE FAIL
E3B9 30 AA               LDA #0xAA   ; Test shifting
E3BB 10                  RRCA
E3BC 2D 55               CMPA #0x55
E3BE 2B F8 00            JNE FAIL
E3C1 30 01               LDA #0x01   ; Test carry setting
E3C3 10                  RRCA
E3C4 2A 1F FB            LDA CARRY
E3C7 2D 01               CMPA #0x01
E3C9 2B F8 00            JNE FAIL
E3CC 30 01               LDA #0x01   ; Test carry injection
E3CE 31 1F FB            STA CARRY   ; Set carry
E3D1 10                  RRCA
E3D2 2D 00               CMPA #0x00
E3D4 2B F8 00            JNE FAIL
E3D7 10                  RRCA
E3D8 2D 80               CMPA #0x80
E3DA 2B F8 00            JNE FAIL
E3DD 10                  RRCA
E3DE 2D 40               CMPA #0x40
E3E0 2B F8 00            JNE FAIL
E3E3 10                  RRCA
E3E4 2D 20               CMPA #0x20
E3E6 2B F8 00            JNE FAIL
E3E9 10                  RRCA
E3EA 2D 10               CMPA #0x10
E3EC 2B F8 00            JNE FAIL
E3EF 10                  RRCA
E3F0 2D 08               CMPA #0x08
E3F2 2B F8 00            JNE FAIL
E3F5 10                  RRCA
E3F6 2D 04               CMPA #0x04
E3F8 2B F8 00            JNE FAIL
E3FB 10                  RRCA
E3FC 2D 02               CMPA #0x02
E3FE 2B F8 00            JNE FAIL
E401 10                  RRCA
E402 2D 01               CMPA #0x01
E404 2B F8 00            JNE FAIL
E407 10                  RRCA
E408 2D 00               CMPA #0x00
E40A 2B F8 00            JNE FAIL
E40D 10                  RRCA
E40E 2D 80               CMPA #0x80
E410 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.29 ADDA 0x****  
                         ; ADD A WITH BYTE AT ADDRESS, C UPDATE
                         ; --------------------------------------------------------------------
E413 30 29      TSTOP29  LDA #0x29
E415 36                  NOTA
E416 31 C0 00            STA LEDPORT ; Output to LED port
E419 30 5F               LDA #0x5F   ; Store a value in RAM
E41B 31 01 23            STA 0x0123   
E41E 30 63               LDA #0x63
E420 29 01 23            ADDA 0x0123 ; Add to A the byte at address location
E423 2D C2               CMPA #0xC2  ; Check the sum
E425 2B F8 00            JNE FAIL    ; Jump if result not good
E428 2A 1F FB            LDA CARRY   ; Read the Carry Status
E42B 2D 00               CMPA #0x00  ; No carry expected then C should be '0'
E42D 2B F8 00            JNE FAIL    ; Error if carry is set

E430 30 AC               LDA #0xAC   ; Store another value in RAM
E432 31 10 56            STA 0x1056   
E435 30 D9               LDA #0xD9
E437 29 10 56            ADDA 0x1056 ; Add to A the byte at address location
E43A 2D 85               CMPA #0x85  ; Check the sum LSB
E43C 2B F8 00            JNE FAIL    ; Jump if result not as expected
E43F 2A 1F FB            LDA CARRY   ; Read the Carry Status
E442 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E444 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.2A LDA 0x****  
                         ; LOAD A WITH BYTE AT ADDRESS Test LDA #0x** instruction 
                         ; --------------------------------------------------------------------
E447 30 2A      TSTOP2A  LDA #0x2A
E449 36                  NOTA
E44A 31 C0 00            STA LEDPORT ; Output to LED port
E44D 30 AA               LDA #0xAA   ; Load immediate in register A
E44F 2D AA               CMPA #0xAA
E451 2B F8 00            JNE FAIL
E454 30 01               LDA #0x01
E456 2D 01               CMPA #0x01
E458 2B F8 00            JNE FAIL
E45B 30 02               LDA #0x02
E45D 2D 02               CMPA #0x02
E45F 2B F8 00            JNE FAIL
E462 30 04               LDA #0x04
E464 2D 04               CMPA #0x04
E466 2B F8 00            JNE FAIL
E469 30 08               LDA #0x08
E46B 2D 08               CMPA #0x08
E46D 2B F8 00            JNE FAIL
E470 30 10               LDA #0x10
E472 2D 10               CMPA #0x10
E474 2B F8 00            JNE FAIL
E477 30 20               LDA #0x20
E479 2D 20               CMPA #0x20
E47B 2B F8 00            JNE FAIL
E47E 30 40               LDA #0x40
E480 2D 40               CMPA #0x40
E482 2B F8 00            JNE FAIL
E485 30 80               LDA #0x80
E487 2D 80               CMPA #0x80
E489 2B F8 00            JNE FAIL
E48C 30 55               LDA #0x55
E48E 2D 55               CMPA #0x55
E490 2B F8 00            JNE FAIL
E493 30 FF               LDA #0xFF
E495 2D FF               CMPA #0xFF
E497 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2B JNE 0x****  
                         ; JUMP IF E=0
                         ; Only a partial validation because i do not have symbolic address
                         ; processing in the assembler program.
                         ; --------------------------------------------------------------------
E49A 30 2B      TSTOP2B  LDA #0x2B
E49C 36                  NOTA
E49D 31 C0 00            STA LEDPORT ; Output to LED port
E4A0 30 6D               LDA #0x6D   ; Load a value in A
E4A2 2D 6D               CMPA #0x6D  ; Compare with the same value
E4A4 2B F8 00            JNE FAIL    ; Error if values are different
E4A7 30 10               LDA #0x10
E4A9 2D 10               CMPA #0x10
E4AB 2B F8 00            JNE FAIL
E4AE 30 01               LDA #0x01
E4B0 2D 01               CMPA #0x01
E4B2 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2C JEQ 0x****
                         ; JUMP IF E=1
                         ; --------------------------------------------------------------------
E4B5 30 2C      TST2C    LDA #0x2C
E4B7 36                  NOTA
E4B8 31 C0 00            STA LEDPORT ; Output to LED port
E4BB 30 7A               LDA #0x7A   ; Load a value in A
E4BD 2D 28               CMPA #0x28  ; Compare with a different value
E4BF 2C F8 00            JEQ FAIL    ; If appear identical then it's and error
E4C2 30 FE               LDA #0xFE   ; Again with adifference 
E4C4 2D FF               CMPA #0xFF
E4C6 2C F8 00            JEQ FAIL 
E4C9 30 01               LDA #0x01   ; Another with difference
E4CB 2D 10               CMPA #0x10
E4CD 2C F8 00            JEQ FAIL
E4D0 30 AB               LDA #0xAB   ; Now compare when values are identical
E4D2 2D AB               CMPA #0xAB
E4D4 2C E4 DA            JEQ TST2C_1 ; Testing if equal?
E4D7 32 F8 00            JMP FAIL    ; Result say both are not equal then it's a failure
E4DA 30 00      TST2C_1  LDA #0x00   ; Result say the values are identical so we are passing
E4DC 2D 00               CMPA #0x00
E4DE 2C E4 E4            JEQ TST2C_2 ; Testing if equal?
E4E1 32 F8 00            JMP FAIL    ; if different then it's a failure
E4E4 30 01      TST2C_2  LDA #0x01
E4E6 2D 01               CMPA #0x01
E4E8 2C E4 EE            JEQ TST2C_3 ; Testing if equal?
E4EB 32 F8 00            JMP FAIL    ; if different then it's a failure
E4EE 30 02      TST2C_3  LDA #0x02
E4F0 2D 02               CMPA #0x02
E4F2 2C E4 F8            JEQ TST2C_4 ; Testing if equal?
E4F5 32 F8 00            JMP FAIL    ; if different then it's a failure
E4F8 30 04      TST2C_4  LDA #0x04
E4FA 2D 04               CMPA #0x04
E4FC 2C E5 02            JEQ TST2C_5 ; Testing if equal?
E4FF 32 F8 00            JMP FAIL    ; if different then it's a failure
E502 30 08      TST2C_5  LDA #0x08
E504 2D 08               CMPA #0x08
E506 2C E5 0C            JEQ TST2C_6 ; Testing if equal?
E509 32 F8 00            JMP FAIL    ; if different then it's a failure
E50C 30 10      TST2C_6  LDA #0x10
E50E 2D 10               CMPA #0x10
E510 2C E5 16            JEQ TST2C_7 ; Testing if equal?
E513 32 F8 00            JMP FAIL    ; if different then it's a failure
E516 30 20      TST2C_7  LDA #0x20
E518 2D 20               CMPA #0x20
E51A 2C E5 20            JEQ TST2C_8 ; Testing if equal?
E51D 32 F8 00            JMP FAIL    ; if different then it's a failure         
E520 30 40      TST2C_8  LDA #0x40
E522 2D 40               CMPA #0x40
E524 2C E5 2A            JEQ TST2C_9 ; Testing if equal?
E527 32 F8 00            JMP FAIL    ; if different then it's a failure         
E52A 30 80      TST2C_9  LDA #0x80
E52C 2D 80               CMPA #0x80
E52E 2C E5 34            JEQ TST2C_10 ; Testing if equal?
E531 32 F8 00            JMP FAIL    ; if different then it's a failure         
E534 09         TST2C_10 NOP
                         ; --------------------------------------------------------------------
                         ; OP.2D CMPA #0x**
                         ; COMPARE A WITH IMMEDIATE VALUE    EQUAL STATUS BIT (E) UPDATED
                         ; --------------------------------------------------------------------
E535 30 2D      TSTOP2D  LDA #0x2D
E537 36                  NOTA
E538 31 C0 00            STA LEDPORT ; Output to LED port
E53B 30 12               LDA #0x12   ; Load a value in A
E53D 2D 12               CMPA #0x12  ; Compare with identical value
E53F 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS 
E542 2D 01               CMPA #0x01  ; Verify bit<0> E = '1' and all others bits <7:1> are '0'    
E544 2B F8 00            JNE FAIL    ; If different then it's and error
E547 30 AA               LDA #0xAA
E549 2D 55               CMPA #0x55  ; Compare with a different value
E54B 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS
E54E 2D 00               CMPA #0x00  ; Verify bit<0> E = '0' and all others bits <7:1> are '0'    
E550 2B F8 00            JNE FAIL    ; If different then it's and error
                         ; --------------------------------------------------------------------
                         ; OP.2E ADCA #0x**
                         ; REG A = REG A + IMMEDIATE BYTE + CARRY (C)   
                         ; CARRY STATUS (C) IS UPDATED
                         ; --------------------------------------------------------------------
E553 30 2E      TSTOP2E  LDA #0x2E
E555 36                  NOTA
E556 31 C0 00            STA LEDPORT ; Output to LED port
E559 30 00               LDA #0x00   ; Clear CARRY (C)
E55B 31 1F FB            STA CARRY      
E55E 30 45               LDA #0x45
E560 2E 5B               ADCA #0x5B
E562 2D A0               CMPA #0xA0  ; Verify summ
E564 2B F8 00            JNE FAIL
E567 2A 1F FB            LDA CARRY   ; Check carry
E56A 2D 00               CMPA #0x00  ; Should be clear
E56C 2B F8 00            JNE FAIL

E56F 30 01               LDA #0x01   ; Set CARRY (C)
E571 31 1F FB            STA CARRY
E574 30 56               LDA #0x56
E576 2E 6D               ADCA #0x6D
E578 2D C4               CMPA #0xC4   ; Verify summ
E57A 2B F8 00            JNE FAIL
E57D 2A 1F FB            LDA CARRY   ; Check carry
E580 2D 00               CMPA #0x00  ; Should be clear
E582 2B F8 00            JNE FAIL

E585 30 00               LDA #0x00   ; Clear CARRY (C)
E587 31 1F FB            STA CARRY
E58A 30 7F               LDA #0x7F
E58C 2E DE               ADCA #0xDE
E58E 2D 5D               CMPA #0x5D  ; Verify summ
E590 2B F8 00            JNE FAIL
E593 2A 1F FB            LDA CARRY   ; Check carry
E596 2D 01               CMPA #0x01  ; Should be set
E598 2B F8 00            JNE FAIL

E59B 30 01               LDA #0x01H  ; Set CARRY (C)
E59D 31 1F FB            STA CARRY
E5A0 30 FF               LDA #0xFF
E5A2 2E FF               ADCA #0xFF
E5A4 2D FF               CMPA #0xFF  ; Verify summ
E5A6 2B F8 00            JNE FAIL
E5A9 2A 1F FB            LDA CARRY   ; Check carry
E5AC 2D 01               CMPA #0x01  ; Should be set
E5AE 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2F ADDA #0x**
                         ; ACCA+M>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
E5B1 30 2F      TSTOP2F  LDA #0x2F
E5B3 36                  NOTA
E5B4 31 C0 00            STA LEDPORT ; Output to LED port
E5B7 30 23               LDA #0x23
E5B9 2F 45               ADDA #0x45
E5BB 2D 68               CMPA #0x68
E5BD 2B F8 00            JNE FAIL
E5C0 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E5C3 2D 00               CMPA #0x00  ; Expecting C=0
E5C5 2B F8 00            JNE FAIL
E5C8 30 8A               LDA #0x8A
E5CA 2F BD               ADDA #0xBD
E5CC 2D 47               CMPA #0x47   
E5CE 2B F8 00            JNE FAIL
E5D1 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E5D4 2D 01               CMPA #0x01  ; Expecting C=1
E5D6 2B F8 00            JNE FAIL
E5D9 30 01               LDA #0x01
E5DB 2F 02               ADDA #0x02
E5DD 2D 03               CMPA #0x03
E5DF 2B F8 00            JNE FAIL
E5E2 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E5E5 2D 00               CMPA #0x00  ; Expecting C=0
E5E7 2B F8 00            JNE FAIL
E5EA 30 FF               LDA #0xFF
E5EC 2F FF               ADDA #0xFF
E5EE 2D FE               CMPA #0xFE
E5F0 2B F8 00            JNE FAIL
E5F3 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E5F6 2D 01               CMPA #0x01   ; Expecting C=1
E5F8 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.30 LDA #0x**  
                         ; LOAD IMMEDIATE VALUE IN REGISTER A
                         ; --------------------------------------------------------------------
E5FB 30 30      TSTOP30  LDA #0x30
E5FD 36                  NOTA
E5FE 31 C0 00            STA LEDPORT ; Output to LED port
E601 30 00               LDA #0x00
E603 2D 00               CMPA #0x00
E605 2B F8 00            JNE FAIL
E608 30 01               LDA #0x01
E60A 2D 01               CMPA #0x01
E60C 2B F8 00            JNE FAIL
E60F 30 02               LDA #0x02
E611 2D 02               CMPA #0x02
E613 2B F8 00            JNE FAIL
E616 30 04               LDA #0x04
E618 2D 04               CMPA #0x04
E61A 2B F8 00            JNE FAIL
E61D 30 08               LDA #0x08
E61F 2D 08               CMPA #0x08
E621 2B F8 00            JNE FAIL
E624 30 10               LDA #0x10
E626 2D 10               CMPA #0x10
E628 2B F8 00            JNE FAIL
E62B 30 20               LDA #0x20
E62D 2D 20               CMPA #0x20
E62F 2B F8 00            JNE FAIL
E632 30 40               LDA #0x40
E634 2D 40               CMPA #0x40
E636 2B F8 00            JNE FAIL
E639 30 80               LDA #0x80
E63B 2D 80               CMPA #0x80
E63D 2B F8 00            JNE FAIL
E640 30 55               LDA #0x55
E642 2D 55               CMPA #0x55
E644 2B F8 00            JNE FAIL
E647 30 AA               LDA #0xAA
E649 2D AA               CMPA #0xAA
E64B 2B F8 00            JNE FAIL
E64E 30 FF               LDA #0xFF
E650 2D FF               CMPA #0xFF
E652 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.31 STA 0x**** 
                         ; STORE REG.A TO ADDRESSE
                         ; --------------------------------------------------------------------
E655 30 31      TSTOP31  LDA #0x31
E657 36                  NOTA
E658 31 C0 00            STA LEDPORT ; Output to LED port
E65B 30 12               LDA #0x12   ; Write to RAM
E65D 31 00 00            STA 0x0000
E660 30 23               LDA #0x23
E662 31 00 01            STA 0x0001
E665 30 34               LDA #0x34
E667 31 00 02            STA 0x0002
E66A 30 45               LDA #0x45
E66C 31 00 04            STA 0x0004
E66F 30 56               LDA #0x56
E671 31 00 08            STA 0x0008
E674 30 67               LDA #0x67
E676 31 00 10            STA 0x0010
E679 30 78               LDA #0x78
E67B 31 00 20            STA 0x0020
E67E 30 89               LDA #0x89
E680 31 00 40            STA 0x0040
E683 30 AB               LDA #0xAB
E685 31 00 80            STA 0x0080
E688 30 BC               LDA #0xBC
E68A 31 01 00            STA 0x0100
E68D 30 CD               LDA #0xCD
E68F 31 02 00            STA 0x0200
E692 30 DE               LDA #0xDE
E694 31 04 00            STA 0x0400
E697 30 22               LDA #0x22
E699 31 08 00            STA 0x0800
E69C 30 33               LDA #0x33
E69E 31 10 00            STA 0x1000
E6A1 30 44               LDA #0x44
E6A3 31 17 00            STA 0x1700
E6A6 2A 00 00            LDA 0x0000  ; Read from RAM and compare
E6A9 2D 12               CMPA #0x12
E6AB 2B F8 00            JNE FAIL
E6AE 2A 00 01            LDA 0x0001
E6B1 2D 23               CMPA #0x23
E6B3 2B F8 00            JNE FAIL
E6B6 2A 00 02            LDA 0x0002
E6B9 2D 34               CMPA #0x34
E6BB 2B F8 00            JNE FAIL
E6BE 2A 00 04            LDA 0x0004
E6C1 2D 45               CMPA #0x45
E6C3 2B F8 00            JNE FAIL
E6C6 2A 00 08            LDA 0x0008
E6C9 2D 56               CMPA #0x56
E6CB 2B F8 00            JNE FAIL
E6CE 2A 00 10            LDA 0x0010
E6D1 2D 67               CMPA #0x67
E6D3 2B F8 00            JNE FAIL
E6D6 2A 00 20            LDA 0x0020
E6D9 2D 78               CMPA #0x78
E6DB 2B F8 00            JNE FAIL
E6DE 2A 00 40            LDA 0x0040
E6E1 2D 89               CMPA #0x89
E6E3 2B F8 00            JNE FAIL
E6E6 2A 00 80            LDA 0x0080
E6E9 2D AB               CMPA #0xAB
E6EB 2B F8 00            JNE FAIL
E6EE 2A 01 00            LDA 0x0100
E6F1 2D BC               CMPA #0xBC
E6F3 2B F8 00            JNE FAIL
E6F6 2A 02 00            LDA 0x0200
E6F9 2D CD               CMPA #0xCD
E6FB 2B F8 00            JNE FAIL
E6FE 2A 04 00            LDA 0x0400
E701 2D DE               CMPA #0xDE
E703 2B F8 00            JNE FAIL
E706 2A 08 00            LDA 0x0800
E709 2D 22               CMPA #0x22
E70B 2B F8 00            JNE FAIL
E70E 2A 10 00            LDA 0x1000
E711 2D 33               CMPA #0x33
E713 2B F8 00            JNE FAIL
E716 2A 17 00            LDA 0x1700
E719 2D 44               CMPA #0x44
E71B 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.32 JMP 0x**** 
                         ; JUMP INCONDITIONAL TO ADDRESS
                         ; --------------------------------------------------------------------
                         ;LDA #0x32
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.33 ANDA #0x**  REGISTER A AND LOGICAL IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E71E 30 33      TSTOP33  LDA #0x33
E720 36                  NOTA
E721 31 C0 00            STA LEDPORT ; Output to LED port
E724 30 FF               LDA #0xFF
E726 33 52               ANDA #0x52
E728 2D 52               CMPA #0x52
E72A 2B F8 00            JNE FAIL
E72D 30 E7               LDA #0xE7
E72F 33 3C               ANDA #0x3C
E731 2D 24               CMPA #0x24
E733 2B F8 00            JNE FAIL
E736 30 00               LDA #0x00
E738 33 00               ANDA #0x00
E73A 2D 00               CMPA #0x00
E73C 2B F8 00            JNE FAIL
E73F 30 FF               LDA #0xFF
E741 33 FF               ANDA #0xFF
E743 2D FF               CMPA #0xFF
E745 2B F8 00            JNE FAIL
E748 30 FF               LDA #0xFF
E74A 33 55               ANDA #0x55
E74C 2D 55               CMPA #0x55
E74E 2B F8 00            JNE FAIL
E751 30 FF               LDA #0xFF
E753 33 00               ANDA #0x00
E755 2D 00               CMPA #0x00
E757 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.34 ORA #0x**   LOGICAL OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E75A 30 34      TSTOP34  LDA #0x34
E75C 36                  NOTA
E75D 31 C0 00            STA LEDPORT ; Output to LED port
E760 30 FF               LDA #0xFF
E762 34 FF               ORA #0xFF
E764 2D FF               CMPA #0xFF
E766 2B F8 00            JNE FAIL
E769 30 00               LDA #0x00
E76B 34 00               ORA #0x00
E76D 2D 00               CMPA #0x00
E76F 2B F8 00            JNE FAIL
E772 30 25               LDA #0x25
E774 34 D3               ORA #0xD3
E776 2D F7               CMPA #0xF7
E778 2B F8 00            JNE FAIL
E77B 30 00               LDA #0x00
E77D 34 FF               ORA #0xFF
E77F 2D FF               CMPA #0xFF
E781 2B F8 00            JNE FAIL
E784 30 FF               LDA #0xFF
E786 34 00               ORA #0x00
E788 2D FF               CMPA #0xFF
E78A 2B F8 00            JNE FAIL
E78D 30 14               LDA #0x14
E78F 34 C1               ORA #0xC1
E791 2D D5               CMPA #0xD5
E793 2B F8 00            JNE FAIL
E796 30 AA               LDA #0xAA
E798 34 55               ORA #0x55
E79A 2D FF               CMPA #0xFF
E79C 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.35 XORA #0x**  EXCLUSIVE OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E79F 30 35      TSTOP35  LDA #0x35
E7A1 36                  NOTA
E7A2 31 C0 00            STA LEDPORT ; Output to LED port
E7A5 30 00               LDA #0x00
E7A7 35 00               XORA #0x00
E7A9 2D 00               CMPA #0x00
E7AB 2B F8 00            JNE FAIL
E7AE 30 00               LDA #0x00
E7B0 35 FF               XORA #0xFF
E7B2 2D FF               CMPA #0xFF
E7B4 2B F8 00            JNE FAIL
E7B7 30 FF               LDA #0xFF
E7B9 35 FF               XORA #0xFF
E7BB 2D 00               CMPA #0x00
E7BD 2B F8 00            JNE FAIL
E7C0 30 FF               LDA #0xFF
E7C2 35 55               XORA #0x55
E7C4 2D AA               CMPA #0xAA
E7C6 2B F8 00            JNE FAIL
E7C9 30 CE               LDA #0xCE
E7CB 35 5A               XORA #0x5A
E7CD 2D 94               CMPA #0x94
E7CF 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.36 NOTA  LOGIC NOT ON REG A
                         ; --------------------------------------------------------------------
E7D2 30 36      TSTOP36  LDA #0x36
E7D4 36                  NOTA
E7D5 31 C0 00            STA LEDPORT ; Output to LED port
E7D8 30 00               LDA #0x00
E7DA 36                  NOTA
E7DB 2D FF               CMPA #0xFF
E7DD 2B F8 00            JNE FAIL
E7E0 36                  NOTA
E7E1 2D 00               CMPA #0x00
E7E3 2B F8 00            JNE FAIL
E7E6 30 55               LDA #0x55
E7E8 36                  NOTA
E7E9 2D AA               CMPA #0xAA
E7EB 2B F8 00            JNE FAIL
E7EE 36                  NOTA
E7EF 2D 55               CMPA #0x55
E7F1 2B F8 00            JNE FAIL
E7F4 36                  NOTA
E7F5 2D AA               CMPA #0xAA
E7F7 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.37 INCA  A = A + 1  INCREMENT REGISTRE A
                         ; E UPDATE, C unchanged
                         ; --------------------------------------------------------------------
E7FA 30 37      TSTOP37  LDA #0x37
E7FC 36                  NOTA
E7FD 31 C0 00            STA LEDPORT ; Output to LED port
E800 30 00               LDA #0x00
E802 37                  INCA
E803 2D 01               CMPA #0x01
E805 2B F8 00            JNE FAIL
E808 30 01               LDA #0x01
E80A 37                  INCA
E80B 2D 02               CMPA #0x02
E80D 2B F8 00            JNE FAIL
E810 30 7C               LDA #0x7C
E812 37                  INCA
E813 37                  INCA
E814 37                  INCA
E815 37                  INCA
E816 37                  INCA
E817 37                  INCA
E818 37                  INCA
E819 37                  INCA
E81A 37                  INCA
E81B 37                  INCA
E81C 2D 86               CMPA #0x86
E81E 2B F8 00            JNE FAIL
E821 30 FE               LDA #0xFE
E823 37                  INCA
E824 2D FF               CMPA #0xFF
E826 2B F8 00            JNE FAIL
E829 30 FF               LDA #0xFF
E82B 37                  INCA
E82C 2D 00               CMPA #0x00
E82E 2B F8 00            JNE FAIL
E831 30 FF               LDA #0xFF
E833 37                  INCA
E834 37                  INCA
E835 2D 01               CMPA #0x01
E837 2B F8 00            JNE FAIL
E83A 37                  INCA
E83B 37                  INCA
E83C 37                  INCA
E83D 37                  INCA
E83E 2D 05               CMPA #0x05
E840 2B F8 00            JNE FAIL
E843 37                  INCA
E844 37                  INCA
E845 37                  INCA
E846 37                  INCA
E847 37                  INCA
E848 37                  INCA
E849 37                  INCA
E84A 37                  INCA
E84B 2D 0D               CMPA #0x0D
E84D 2B F8 00            JNE FAIL
E850 30 00               LDA #0x00   ; Test Carry unchanged
E852 31 1F FB            STA CARRY   ; Clear Carry 
E855 30 FF               LDA #0xFF
E857 37                  INCA
E858 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E85B 2D 00               CMPA #0x00  ; Expecting C=0 and <7:1> = 0
E85D 2B F8 00            JNE FAIL
E860 30 01               LDA #0x01   ; Set Carry 
E862 31 1F FB            STA CARRY   
E865 30 EB               LDA #0xEB
E867 37                  INCA
E868 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E86B 2D 01               CMPA #0x01  ; Expecting C=1 and <7:1> = 0
E86D 2B F8 00            JNE FAIL
E870 30 FE               LDA #0xFE   ; Test Equal (Set when result is 0)
E872 37                  INCA
E873 2A 1F FA            LDA EQUAL   ; Read Equal status
E876 2D 00               CMPA #0x00  ; Expecting E=0 and <7:1> = 0
E878 2B F8 00            JNE FAIL
E87B 30 FF               LDA #0xFF
E87D 37                  INCA
E87E 2A 1F FA            LDA EQUAL   ; Read Equal status
E881 2D 01               CMPA #0x01  ; Expecting E=1 and <7:1> = 0
E883 2B F8 00            JNE FAIL
E886 30 00               LDA #0x00
E888 37                  INCA
E889 2A 1F FA            LDA EQUAL
E88C 2D 00               CMPA #0x00  ; Expecting E=0 and <7:1> = 0
E88E 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.38  LDX #0x****   Load X Register with 16 bits immediate value
                         ; --------------------------------------------------------------------
E891 30 38      TSTOP38  LDA #0x38
E893 36                  NOTA
E894 31 C0 00            STA LEDPORT ; Output to LED port
E897 38 12 34            LDX #0x1234
E89A 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E89D 2D 12               CMPA #0x12
E89F 2B F8 00            JNE FAIL
E8A2 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E8A5 2D 34               CMPA #0x34
E8A7 2B F8 00            JNE FAIL
E8AA 38 AB CD            LDX #0xABCD
E8AD 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E8B0 2D AB               CMPA #0xAB
E8B2 2B F8 00            JNE FAIL
E8B5 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E8B8 2D CD               CMPA #0xCD
E8BA 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.39  INCX   Increment Register X,  Carry Not Updated
                         ; --------------------------------------------------------------------
E8BD 30 39      TSTOP39  LDA #0x39
E8BF 36                  NOTA
E8C0 31 C0 00            STA LEDPORT ; Output to LED port
E8C3 38 00 00            LDX #0x0000 ; Clear X register
E8C6 39                  INCX        ; Increment X
E8C7 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E8CA 2D 01               CMPA #0x01
E8CC 2B F8 00            JNE FAIL
E8CF 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E8D2 2D 00               CMPA #0x00
E8D4 2B F8 00            JNE FAIL
E8D7 39                  INCX
E8D8 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E8DB 2D 02               CMPA #0x02
E8DD 2B F8 00            JNE FAIL
E8E0 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E8E3 2D 00               CMPA #0x00
E8E5 2B F8 00            JNE FAIL

E8E8 38 00 FF            LDX #0x00FF ; Test a carry set
E8EB 39                  INCX        ; Increment X
E8EC 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E8EF 2D 00               CMPA #0x00
E8F1 2B F8 00            JNE FAIL
E8F4 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E8F7 2D 01               CMPA #0x01
E8F9 2B F8 00            JNE FAIL
E8FC 39                  INCX        ; Increment X
E8FD 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E900 2D 01               CMPA #0x01
E902 2B F8 00            JNE FAIL
E905 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E908 2D 01               CMPA #0x01
E90A 2B F8 00            JNE FAIL

E90D 38 1E FF            LDX #0x1EFF
E910 39                  INCX        ; Increment X
E911 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E914 2D 00               CMPA #0x00
E916 2B F8 00            JNE FAIL
E919 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E91C 2D 1F               CMPA #0x1F
E91E 2B F8 00            JNE FAIL

E921 38 FF FF            LDX #0xFFFF
E924 39                  INCX        ; Increment X
E925 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E928 2D 00               CMPA #0x00
E92A 2B F8 00            JNE FAIL
E92D 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E930 2D 00               CMPA #0x00
E932 2B F8 00            JNE FAIL

                         ; --------------------------------------------------------------------
                         ; FIBONACCI TEST
                         ; --------------------------------------------------------------------         
E935 30 80      TSTFIBON LDA #0x80
E937 36                  NOTA
E938 31 C0 00            STA LEDPORT ; Output to LED port
                                     ;
E93B 30 00               LDA #0x00   ; Init first number with 00H
E93D 31 10 00            STA 0x1000
E940 30 01               LDA #0x01   ; Init second number with 01H
E942 31 10 01            STA 0x1001
E945 2A 10 00            LDA 0x1000  ; Load first number in A
E948 29 10 01            ADDA 0x1001 ; Add second number to A
E94B 31 10 02            STA 0x1002  ; Store the summ
E94E 2D 01               CMPA #0x01  ; HEX   Decimal  Real Value (in 8 bit storage only)
E950 2B F8 00            JNE FAIL    ; x01   1        1

E953 2A 10 01            LDA 0x1001  ; Move second number to the first number
E956 31 10 00            STA 0x1000
E959 2A 10 02            LDA 0x1002  ; Move summ to the second number
E95C 31 10 01            STA 0x1001
E95F 2A 10 00            LDA 0x1000  ; Load first number in A
E962 29 10 01            ADDA 0x1001 ; Add second number to A
E965 31 10 02            STA 0x1002  ; Store the summ
E968 2D 02               CMPA #0x02  ; HEX   Decimal  Real Value
E96A 2B F8 00            JNE FAIL    ; x02   2        2

E96D 2A 10 01            LDA 0x1001  ; Move second number to the first number
E970 31 10 00            STA 0x1000
E973 2A 10 02            LDA 0x1002   ; Move summ to the second number
E976 31 10 01            STA 0x1001
E979 2A 10 00            LDA 0x1000  ; Load first number in A
E97C 29 10 01            ADDA 0x1001 ; Add second number to A
E97F 31 10 02            STA 0x1002  ; Store the summ
E982 2D 03               CMPA #0x03  ; HEX   Decimal  Real Value
E984 2B F8 00            JNE FAIL    ; x03   3        3

E987 2A 10 01            LDA 0x1001  ; Move second number to the first number
E98A 31 10 00            STA 0x1000
E98D 2A 10 02            LDA 0x1002  ; Move summ to the second number
E990 31 10 01            STA 0x1001
E993 2A 10 00            LDA 0x1000  ; Load first number in A
E996 29 10 01            ADDA 0x1001 ; Add second number to A
E999 31 10 02            STA 0x1002  ; Store the summ
E99C 2D 05               CMPA #0x05  ; HEX   Decimal  Real Value
E99E 2B F8 00            JNE FAIL    ; x05   5        5

E9A1 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9A4 31 10 00            STA 0x1000
E9A7 2A 10 02            LDA 0x1002  ; Move summ to the second number
E9AA 31 10 01            STA 0x1001
E9AD 2A 10 00            LDA 0x1000  ; Load first number in A
E9B0 29 10 01            ADDA 0x1001 ; Add second number to A
E9B3 31 10 02            STA 0x1002  ; Store the summ
E9B6 2D 08               CMPA #0x08  ; HEX   Decimal  Real Value
E9B8 2B F8 00            JNE FAIL    ; x08   8        8

E9BB 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9BE 31 10 00            STA 0x1000
E9C1 2A 10 02            LDA 0x1002  ; Move summ to the second number
E9C4 31 10 01            STA 0x1001
E9C7 2A 10 00            LDA 0x1000  ; Load first number in A
E9CA 29 10 01            ADDA 0x1001 ; Add second number to A
E9CD 31 10 02            STA 0x1002  ; Store the summ
E9D0 2D 0D               CMPA #0x0D  ; HEX   Decimal  Real Value
E9D2 2B F8 00            JNE FAIL    ; x0D   13       13

E9D5 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9D8 31 10 00            STA 0x1000
E9DB 2A 10 02            LDA 0x1002  ; Move summ to the second number
E9DE 31 10 01            STA 0x1001
E9E1 2A 10 00            LDA 0x1000  ; Load first number in A
E9E4 29 10 01            ADDA 0x1001 ; Add second number to A
E9E7 31 10 02            STA 0x1002  ; Store the summ
E9EA 2D 15               CMPA #0x15  ; HEX   Decimal  Real Value
E9EC 2B F8 00            JNE FAIL    ; x15   21       21

E9EF 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9F2 31 10 00            STA 0x1000
E9F5 2A 10 02            LDA 0x1002  ; Move summ to the second number
E9F8 31 10 01            STA 0x1001
E9FB 2A 10 00            LDA 0x1000  ; Load first number in A
E9FE 29 10 01            ADDA 0x1001 ; Add second number to A
EA01 31 10 02            STA 0x1002  ; Store the summ
EA04 2D 22               CMPA #0x22  ; HEX   Decimal  Real Value
EA06 2B F8 00            JNE FAIL    ; x22   34       34

EA09 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA0C 31 10 00            STA 0x1000
EA0F 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA12 31 10 01            STA 0x1001
EA15 2A 10 00            LDA 0x1000  ; Load first number in A
EA18 29 10 01            ADDA 0x1001 ; Add second number to A
EA1B 31 10 02            STA 0x1002  ; Store the summ
EA1E 2D 37               CMPA #0x37  ; HEX   Decimal  Real Value
EA20 2B F8 00            JNE FAIL    ; x37   55       55

EA23 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA26 31 10 00            STA 0x1000
EA29 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA2C 31 10 01            STA 0x1001
EA2F 2A 10 00            LDA 0x1000  ; Load first number in A
EA32 29 10 01            ADDA 0x1001 ; Add second number to A
EA35 31 10 02            STA 0x1002  ; Store the summ
EA38 2D 59               CMPA #0x59  ; HEX   Decimal  Real Value
EA3A 2B F8 00            JNE FAIL    ; x59   89       89

EA3D 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA40 31 10 00            STA 0x1000
EA43 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA46 31 10 01            STA 0x1001
EA49 2A 10 00            LDA 0x1000  ; Load first number in A
EA4C 29 10 01            ADDA 0x1001 ; Add second number to A
EA4F 31 10 02            STA 0x1002  ; Store the summ
EA52 2D 90               CMPA #0x90  ; HEX   Decimal  Real Value
EA54 2B F8 00            JNE FAIL    ; x90   144      144

EA57 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA5A 31 10 00            STA 0x1000
EA5D 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA60 31 10 01            STA 0x1001
EA63 2A 10 00            LDA 0x1000  ; Load first number in A
EA66 29 10 01            ADDA 0x1001 ; Add second number to A
EA69 31 10 02            STA 0x1002  ; Store the summ
EA6C 2D E9               CMPA #0xE9  ; HEX   Decimal  Real Value
EA6E 2B F8 00            JNE FAIL    ; xE9   233      233

EA71 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA74 31 10 00            STA 0x1000
EA77 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA7A 31 10 01            STA 0x1001
EA7D 2A 10 00            LDA 0x1000  ; Load first number in A
EA80 29 10 01            ADDA 0x1001 ; Add second number to A
EA83 31 10 02            STA 0x1002  ; Store the summ
EA86 2D 79               CMPA #0x79  ; HEX   Decimal  Real Value
EA88 2B F8 00            JNE FAIL    ; x79   121      377 - (256*1) = 121

EA8B 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA8E 31 10 00            STA 0x1000
EA91 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA94 31 10 01            STA 0x1001
EA97 2A 10 00            LDA 0x1000  ; Load first number in A
EA9A 29 10 01            ADDA 0x1001 ; Add second number to A
EA9D 31 10 02            STA 0x1002  ; Store the summ
EAA0 2D 62               CMPA #0x62  ; HEX   Decimal  Real Value
EAA2 2B F8 00            JNE FAIL    ; x62   98       610 - (256*2) = 98

EAA5 2A 10 01            LDA 0x1001  ; Move second number to the first number
EAA8 31 10 00            STA 0x1000
EAAB 2A 10 02            LDA 0x1002  ; Move summ to the second number
EAAE 31 10 01            STA 0x1001
EAB1 2A 10 00            LDA 0x1000  ; Load first number in A
EAB4 29 10 01            ADDA 0x1001 ; Add second number to A
EAB7 31 10 02            STA 0x1002  ; Store the summ
EABA 2D DB               CMPA #0xDB  ; HEX   Decimal  Real Value
EABC 2B F8 00            JNE FAIL    ; xDB   219      987 - (256*3) = 219         

                         ; --------------------------------------------------------------------      
                         ; END OF FIBONACCI TEST
                         ; --------------------------------------------------------------------      

                         ; ---------
                         ; Loop test
                         ; ---------
EABF 30 81      LOOPTST  LDA #0x81
EAC1 36                  NOTA
EAC2 31 C0 00            STA LEDPORT    ; Output to LED port
EAC5 30 05               LDA #0x05      ; Init a counter of iterations
EAC7 31 10 0F            STA ?b0
EACA 2A 10 0F   LOOPTST1 LDA ?b0        ; Read counter
EACD 2D 00               CMPA #0x00     ; Is it 0?
EACF 2C EA D9            JEQ LOOPTST2   ; Yes then it's the end fo the test
EAD2 2F FF               ADDA #0xFF     ; Add -1 in complement 2 (equivalent to decrement)
EAD4 31 10 0F            STA ?b0        ; Save decremented count
EAD7 0C F1               JRA LOOPTST1
EAD9 09         LOOPTST2 NOP            ; End of decrement loop         

                         ; -----------------
                         ; Math Library Test
                         ; -----------------
                         ; Test add16_w0_w0_w1  w0 <= w0 + w1
EADA 30 82               LDA #0x82
EADC 36                  NOTA
EADD 31 C0 00            STA LEDPORT ; Output to LED port
EAE0 30 BE               LDA #0xBE   ; w0 = 0xBEEF
EAE2 31 10 0E            STA ?b1
EAE5 30 EF               LDA #0xEF
EAE7 31 10 0F            STA ?b0
EAEA 30 DE               LDA #0xDE   ; w1 = 0xDEAD
EAEC 31 10 0C            STA ?b3
EAEF 30 AD               LDA #0xAD
EAF1 31 10 0D            STA ?b2
EAF4 06 EC 1E            JSR ?add16_w0_w0_w1  ; w0 <= w0 + w1
EAF7 2A 10 0E            LDA ?b1              ; Expected w0 = 9D9C + C set
EAFA 2D 9D               CMPA #0x9D
EAFC 2B F8 00            JNE FAIL
EAFF 2A 10 0F            LDA ?b0
EB02 2D 9C               CMPA #0x9C
EB04 2B F8 00            JNE FAIL
EB07 2A 1F FB            LDA CARRY
EB0A 2D 01               CMPA #0x01
EB0C 2B F8 00            JNE FAIL

                         ; Test add32_l0_l0_l1  l0 <= l0 + l1
EB0F 30 83               LDA #0x83
EB11 36                  NOTA
EB12 31 C0 00            STA LEDPORT ; Output to LED port
EB15 30 89               LDA #0x89   ; l0 = 0x89ABCDEF
EB17 31 10 0C            STA ?b3
EB1A 30 AB               LDA #0xAB
EB1C 31 10 0D            STA ?b2
EB1F 30 CD               LDA #0xCD
EB21 31 10 0E            STA ?b1
EB24 30 EF               LDA #0xEF
EB26 31 10 0F            STA ?b0
EB29 30 DE               LDA #0xDE   ; l1 = DEADBEEF
EB2B 31 10 08            STA ?b7
EB2E 30 AD               LDA #0xAD
EB30 31 10 09            STA ?b6
EB33 30 BE               LDA #0xBE
EB35 31 10 0A            STA ?b5
EB38 30 EF               LDA #0xEF
EB3A 31 10 0B            STA ?b4
EB3D 06 EC 31            JSR ?add32_l0_l0_l1  ; l0 <= l0 + l1
EB40 2A 10 0C            LDA ?b3              ; Expected l0 = 0x68598CDE + C set
EB43 2D 68               CMPA #0x68
EB45 2B F8 00            JNE FAIL
EB48 2A 10 0D            LDA ?b2
EB4B 2D 59               CMPA #0x59
EB4D 2B F8 00            JNE FAIL
EB50 2A 10 0E            LDA ?b1
EB53 2D 8C               CMPA #0x8C
EB55 2B F8 00            JNE FAIL
EB58 2A 10 0F            LDA ?b0
EB5B 2D DE               CMPA #0xDE
EB5D 2B F8 00            JNE FAIL
EB60 2A 1F FB            LDA CARRY
EB63 2D 01               CMPA #0x01
EB65 2B F8 00            JNE FAIL

                         ; Test ?inc32_l0_l0   l0 <= l0 + 1
EB68 30 84               LDA #0x84
EB6A 36                  NOTA
EB6B 31 C0 00            STA LEDPORT ; Output to LED port
EB6E 30 FF               LDA #0xFF   ; l0 = 0xFFFFFFFF
EB70 31 10 0C            STA ?b3
EB73 30 FF               LDA #0xFF
EB75 31 10 0D            STA ?b2
EB78 30 FF               LDA #0xFF
EB7A 31 10 0E            STA ?b1
EB7D 30 FF               LDA #0xFF
EB7F 31 10 0F            STA ?b0
EB82 06 EC 56            JSR ?inc32_l0_l0  ; l0 <= l0 + 1
                         ; Expected l0 = 0x00000000
EB85 2A 10 0C            LDA ?b3     ; Expected l0 = 0x00000000
EB88 2D 00               CMPA #0x00
EB8A 2B F8 00            JNE FAIL
EB8D 2A 10 0D            LDA ?b2
EB90 2D 00               CMPA #0x00
EB92 2B F8 00            JNE FAIL
EB95 2A 10 0E            LDA ?b1
EB98 2D 00               CMPA #0x00
EB9A 2B F8 00            JNE FAIL
EB9D 2A 10 0F            LDA ?b0
EBA0 2D 00               CMPA #0x00
EBA2 2B F8 00            JNE FAIL
EBA5 06 EC 56            JSR ?inc32_l0_l0  ; l0 <= l0 + 1
EBA8 2A 10 0C            LDA ?b3
EBAB 2D 00               CMPA #0x00
EBAD 2B F8 00            JNE FAIL
EBB0 2A 10 0D            LDA ?b2
EBB3 2D 00               CMPA #0x00
EBB5 2B F8 00            JNE FAIL
EBB8 2A 10 0E            LDA ?b1
EBBB 2D 00               CMPA #0x00
EBBD 2B F8 00            JNE FAIL
EBC0 2A 10 0F            LDA ?b0
EBC3 2D 01               CMPA #0x01
EBC5 2B F8 00            JNE FAIL
EBC8 06 EC 56            JSR ?inc32_l0_l0
EBCB 06 EC 56            JSR ?inc32_l0_l0
EBCE 06 EC 56            JSR ?inc32_l0_l0
EBD1 06 EC 56            JSR ?inc32_l0_l0
EBD4 06 EC 56            JSR ?inc32_l0_l0
EBD7 06 EC 56            JSR ?inc32_l0_l0
EBDA 06 EC 56            JSR ?inc32_l0_l0
EBDD 06 EC 56            JSR ?inc32_l0_l0
EBE0 06 EC 56            JSR ?inc32_l0_l0
EBE3 06 EC 56            JSR ?inc32_l0_l0
EBE6 06 EC 56            JSR ?inc32_l0_l0
EBE9 06 EC 56            JSR ?inc32_l0_l0
EBEC 06 EC 56            JSR ?inc32_l0_l0
EBEF 06 EC 56            JSR ?inc32_l0_l0
EBF2 06 EC 56            JSR ?inc32_l0_l0
EBF5 06 EC 56            JSR ?inc32_l0_l0
EBF8 06 EC 56            JSR ?inc32_l0_l0
EBFB 2A 10 0C            LDA ?b3
EBFE 2D 00               CMPA #0x00
EC00 2B F8 00            JNE FAIL
EC03 2A 10 0D            LDA ?b2
EC06 2D 00               CMPA #0x00
EC08 2B F8 00            JNE FAIL
EC0B 2A 10 0E            LDA ?b1
EC0E 2D 00               CMPA #0x00
EC10 2B F8 00            JNE FAIL
EC13 2A 10 0F            LDA ?b0
EC16 2D 12               CMPA #0x12
EC18 2B F8 00            JNE FAIL

                         ; ---------------------
                         ; END Math Library Test
                         ; ---------------------

EC1B 32 E0 00            JMP 0xE000  ; Loop from start of diag test

                         ; ---------------------
                         ; Math library routines
                         ; ---------------------
                         ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |    ?w5      ?w4   |   ?w3     ?w2   |   ?w1     ?w0   | 16 bits
                ;         ?l3         |         ?l2       |       ?l1       |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                                  ; Addition on 16 bits  
                                  ; w0 <= w0 + w1
EC1E 2A 10 0F   ?add16_w0_w0_w1   LDA ?b0  
EC21 29 10 0D                     ADDA ?b2
EC24 31 10 0F                     STA ?b0
EC27 2A 10 0E                     LDA ?b1
EC2A 28 10 0C                     ADCA ?b3
EC2D 31 10 0E                     STA ?b1
EC30 07                           RTS

                                  ; Addition on 32 bits
                                  ; l0 <= l0 + l1
EC31 2A 10 0F   ?add32_l0_l0_l1   LDA ?b0  
EC34 29 10 0B                     ADDA ?b4
EC37 31 10 0F                     STA ?b0
EC3A 2A 10 0E                     LDA ?b1
EC3D 28 10 0A                     ADCA ?b5
EC40 31 10 0E                     STA ?b1
EC43 2A 10 0D                     LDA ?b2
EC46 28 10 09                     ADCA ?b6
EC49 31 10 0D                     STA ?b2
EC4C 2A 10 0C                     LDA ?b3
EC4F 28 10 08                     ADCA ?b7
EC52 31 10 0C                     STA ?b3
EC55 07                           RTS

                                  ; INC 32 bit
                                  ; l0 <= l0 + 1
EC56 2A 10 0F   ?inc32_l0_l0      LDA ?b0
EC59 37                           INCA
EC5A 31 10 0F                     STA ?b0
EC5D 2B EC 7B                     JNE ?inc32_0x_0x_JP
EC60 2A 10 0E                     LDA ?b1
EC63 37                           INCA
EC64 31 10 0E                     STA ?b1
EC67 2B EC 7B                     JNE ?inc32_0x_0x_JP
EC6A 2A 10 0D                     LDA ?b2
EC6D 37                           INCA
EC6E 31 10 0D                     STA ?b2
EC71 2B EC 7B                     JNE ?inc32_0x_0x_JP
EC74 2A 10 0C                     LDA ?b3
EC77 37                           INCA
EC78 31 10 0C                     STA ?b3
EC7B 07         ?inc32_0x_0x_JP   RTS

                                  ; MUL 8-bit
                                  ; w1 (b3,b2) <= b1 * b0
EC7C 30 00      ?mul8_w1_b1_b0    LDA #0x00   ; Clear ?w1
EC7E 31 10 0D                     STA ?b2
EC81 31 10 0C                     STA ?b3
EC84 38 00 08                     LDX #0x0008 ; Loop counter (8 bits)
EC87 2A 10 0F   ?mul8_w1_loop     LDA ?b0     ; Shift right ?b0 (check LSB)
EC8A 0D                           SRLA
EC8B 31 10 0F                     STA ?b0
EC8E 0F 00                        JRNC ?skip_add  ; Conditional relative jump if not Carry
                ;    BCC skip_add ; If LSB was 0, skip addition

                ;    LDA ?w1     ; Load lower half of result
                ;    ADDA ?b1    ; Add multiplicand
                ;    STA ?w1     ; Store back

                ;    LDA ?w1+1   ; Load upper half of result
                ;    ADCA #0x00  ; Add carry if necessary
                ;    STA ?w1+1   ; Store back

EC90 2A 10 0C   ?skip_add         LDA ?b3 ; Shift right ?b3 ?b2
EC93 0D                           SRLA     ; 0 -> b7 b6 b5 b4 b3 b2 b1 b0 -> C
EC94 31 10 0C                     STA ?b3
EC97 2A 10 0D                     LDA ?b2

                ;    DEX         ; Decrement loop counter
                ;    BNE mul_loop

                    ; Copy result from ?w1 to ?w0
                ;    LDA ?w1
                ;    STA ?w0
                ;    LDA ?w1+1
                ;    STA ?w0+1

EC9A 07             RTS         ; Return (Result in ?w0)


                         ; --------------------------------------------------------------------
                         ; Error routine
                         ; --------------------------------------------------------------------
                         ORG/0xF800  ; Diagnostic Error routine   
                         ;STOP        ; Stop execution
F800 32 F8 00   FAIL     JMP FAIL    ; Infinite Loop on error

                         ; --------------------------------------------------------------------
                         ; JSR and RTS Test subroutine
                         ; --------------------------------------------------------------------
                         ORG/0xFFC0
FFC0 30 11      TJSR1    LDA #0x11
FFC2 07                  RTS
                         ORG/0xFFC3
FFC3 30 22      TJSR2    LDA #0x22
FFC5 06 FF C0            JSR TJSR1
FFC8 07                  RTS
                         ORG/0xFFC9
FFC9 30 33      TJSR3    LDA #0x33
FFCB 06 FF C3            JSR TJSR2
FFCE 07                  RTS
                         ORG/0xFFCF
FFCF 30 44      TJSR4    LDA #0x44
FFD1 06 FF C9            JSR TJSR3
FFD4 07                  RTS
                         ORG/0xFFD5
FFD5 30 44      TJSR5    LDA #0x44
FFD7 06 FF CF            JSR TJSR4
FFDA 07                  RTS
                         ORG/0xFFDB
FFDB 30 55      TJSR6    LDA #0x55
FFDD 06 FF D5            JSR TJSR5
FFE0 07                  RTS
                         ORG/0xFFE1
FFE1 30 66      TJSR7    LDA #0x66
FFE3 06 FF DB            JSR TJSR6
FFE6 07                  RTS
                         ORG/0xFFE7
FFE7 30 77      TJSR8    LDA #0x77
FFE9 06 FF E1            JSR TJSR7
FFEC 07                  RTS
                         ORG/0xFFED
FFED 30 88      TJSR9    LDA #0x88
FFEF 06 FF E7            JSR TJSR8
FFF2 07                  RTS
                         ORG/0xFFF3
FFF3 30 99      TJSR10   LDA #0x99
FFF5 06 FF ED            JSR TJSR9
FFF8 07                  RTS
                         ; --------------------------------------------------------------------
                         ; Reset Vector
                         ; --------------------------------------------------------------------
                         ORG/0xFFFE  ; Set the Reset vector
FFFE E0                  DB 0xE0     ; MSB Reset Vector
FFFF 00                  DB 0x00     ; LSB Reset Vector


Symbol Table:
?b15                1000
?b14                1001
?b13                1002
?b12                1003
?b11                1004
?b10                1005
?b9                 1006
?b8                 1007
?b7                 1008
?b6                 1009
?b5                 100A
?b4                 100B
?b3                 100C
?b2                 100D
?b1                 100E
?b0                 100F
?w7                 1000
?w6                 1002
?w5                 1004
?w4                 1006
?w3                 1008
?w2                 100A
?w1                 100C
?w0                 100E
?l3                 1000
?l2                 1004
?l1                 1008
?l0                 100C
SP                  1FF0
JSH                 1FF1
JSL                 1FF2
XH                  1FF3
XL                  1FF4
EQUAL               1FFA
CARRY               1FFB
REG_A               1FFC
IPH                 1FFE
IPL                 1FFF
LEDPORT             C000
START               E000
TST01               E006
TST02               E033
TSTOP06             E060
TSTOP09             E084
TSTOP0A             E08D
TSTOP0B             E0CB
TST0B_0             E127
TST0B_1             E12A
TST0B_2             E12E
TST0B_3             E133
TST0B_4             E13A
TST0B_5             E14C
TST0B_6             E151
TST0B_7             E167
TST0B_8             E16E
TST0B_9             E170
TST0B_10            E172
TST0B_11            E187
TST0B_12            E204
TST0B_13            E207
TSTOP0D             E208
TSTOP0E             E2C2
TSTOP0F             E37C
TST0F_0             E38C
TST0F_1             E396
TST0F_2             E399
TSTOP29             E39A
TSTOP2A             E447
TSTOP2B             E49A
TST2C               E4B5
TST2C_1             E4DA
TST2C_2             E4E4
TST2C_3             E4EE
TST2C_4             E4F8
TST2C_5             E502
TST2C_6             E50C
TST2C_7             E516
TST2C_8             E520
TST2C_9             E52A
TST2C_10            E534
TSTOP2D             E535
TSTOP2E             E553
TSTOP2F             E5B1
TSTOP30             E5FB
TSTOP31             E655
TSTOP33             E71E
TSTOP34             E75A
TSTOP35             E79F
TSTOP36             E7D2
TSTOP37             E7FA
TSTOP38             E891
TSTOP39             E8BD
TSTFIBON            E935
LOOPTST             EABF
LOOPTST1            EACA
LOOPTST2            EAD9
?add16_w0_w0_w1     EC1E
?add32_l0_l0_l1     EC31
?inc32_l0_l0        EC56
?inc32_0x_0x_JP     EC7B
?mul8_w1_b1_b0      EC7C
?mul8_w1_loop       EC87
?skip_add           EC90
FAIL                F800
TJSR1               FFC0
TJSR2               FFC3
TJSR3               FFC9
TJSR4               FFCF
TJSR5               FFD5
TJSR6               FFDB
TJSR7               FFE1
TJSR8               FFE7
TJSR9               FFED
TJSR10              FFF3
Assembly complete
