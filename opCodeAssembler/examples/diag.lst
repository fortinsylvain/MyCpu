                ; -----------------------------------------------------------------
                ; Homebrew MyCPU diagnostic program
                ; Author: Sylvain Fortin sylfortin71@hotmail.com
                ; Date : 21 april 2025
                ; Documentation : diag.asm is a test program that verifying every 
                ;                 assembler instructions of MyCPU.
                ; Memory map of the computer
                ; 0000H - 17FFH Total RAM space
                ; 00A0H - 00FFH Stack
                ; E000H - F000H EEPROM for application program
                ; -----------------------------------------------------------------

                ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |    ?w5      ?w4   |   ?w3     ?w2   |   ?w1     ?w0   | 16 bits
                ;         ?l3         |         ?l2       |       ?l1       |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                ?b15     EQU 0x0000
                ?b14     EQU 0x0001
                ?b13     EQU 0x0002
                ?b12     EQU 0x0003
                ?b11     EQU 0x0004
                ?b10     EQU 0x0005
                ?b9      EQU 0x0006
                ?b8      EQU 0x0007
                ?b7      EQU 0x0008
                ?b6      EQU 0x0009
                ?b5      EQU 0x000A
                ?b4      EQU 0x000B
                ?b3      EQU 0x000C
                ?b2      EQU 0x000D
                ?b1      EQU 0x000E
                ?b0      EQU 0x000F

                ?w7      EQU 0x0000  ; ?b15:?b14
                ?w6      EQU 0x0002  ; ?b13:?b12
                ?w5      EQU 0x0004  ; ?b11:?b10
                ?w4      EQU 0x0006  ; ?b9:?b8
                ?w3      EQU 0x0008  ; ?b7:?b6
                ?w2      EQU 0x000A  ; ?b5:?b4
                ?w1      EQU 0x000C  ; ?b3:?b2
                ?w0      EQU 0x000E  ; ?b1:?b0

                ?l3      EQU 0x0000  ; ?b15,?b14,?b13,?b12
                ?l2      EQU 0x0004  ; ?b11,?b10,?b9,?b8
                ?l1      EQU 0x0008  ; ?b7,?b6,?b5,?b4
                ?l0      EQU 0x000C  ; ?b3,?b2,?b1,?b0

                ; RAM Reserved location
                SP       EQU 0x1FF0  ; SP      Stack Pointer 8 bit
                JSH      EQU 0x1FF1  ; JSH     Temporary storage for JSR MSB address
                JSL      EQU 0x1FF2  ; JSL          "       "     "   "  LSB    "
                XH       EQU 0x1FF3  ; X MSB   X Register MSB
                XL       EQU 0x1FF4  ; X LSB   X Register LSB
                EQUAL    EQU 0x1FFA  ; E       bit<0> Equal Status bit
                CARRY    EQU 0x1FFB  ; C       bit<0> Carry Status bit
                REG_A    EQU 0x1FFC  ; A       A Register
                IPH      EQU 0x1FFE  ; IPH	    Instruction Pointer MSB
                IPL      EQU 0x1FFF  ; IPL          "         "    LSB

                ; Peripheral
                LEDPORT  EQU 0xC000  ; PORT for the LED

                ; Program start
                         ORG/0xE000  ; EEPROM Start        
E000 30 00      START    LDA #0x00   ; Clear LED
E002 19                  NOTA
E003 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; Test Carry Status bit integrity
                         ; --------------------------------------------------------------------
E006 30 01      TST01    LDA #0x01
E008 19                  NOTA
E009 31 C0 00            STA LEDPORT ; Output to LED port
E00C 30 00               LDA #0x00
E00E 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E011 2A 1F FB            LDA CARRY   ; Read Carry Status
E014 2D 00               CMPA #0x00
E016 2B F8 00            JNE FAIL
E019 30 01               LDA #0x01
E01B 31 1F FB            STA CARRY   ; Write 1 to carry bit <0>
E01E 2A 1F FB            LDA CARRY   ; Read Carry Status
E021 2D 01               CMPA #0x01
E023 2B F8 00            JNE FAIL
E026 30 00               LDA #0x00
E028 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E02B 2A 1F FB            LDA CARRY   ; Read Carry Status
E02E 2D 00               CMPA #0x00
E030 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; Test Equal Status bit integrity
                         ; --------------------------------------------------------------------
E033 30 02      TST02    LDA #0x02
E035 19                  NOTA
E036 31 C0 00            STA LEDPORT ; Output to LED port
E039 30 00               LDA #0x00
E03B 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E03E 2A 1F FA            LDA EQUAL   ; Read Equal Status
E041 2D 00               CMPA #0x00
E043 2B F8 00            JNE FAIL
E046 30 01               LDA #0x01
E048 31 1F FA            STA EQUAL   ; Write 1 to Equal Status bit <0>
E04B 2A 1F FA            LDA EQUAL   ; Read Equal Status
E04E 2D 01               CMPA #0x01
E050 2B F8 00            JNE FAIL
E053 30 00               LDA #0x00
E055 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E058 2A 1F FA            LDA EQUAL   ; Read Equal Status
E05B 2D 00               CMPA #0x00
E05D 2B F8 00            JNE FAIL

                         ; --------------------------------------------------------------------
                         ; OP.03 INCA  A = A + 1  INCREMENT REGISTRE A
                         ; E UPDATE, C unchanged
                         ; --------------------------------------------------------------------
E060 30 03      TSTOP03  LDA #0x03
E062 19                  NOTA
E063 31 C0 00            STA LEDPORT ; Output to LED port
E066 30 00               LDA #0x00
E068 03                  INCA
E069 2D 01               CMPA #0x01
E06B 2B F8 00            JNE FAIL
E06E 30 01               LDA #0x01
E070 03                  INCA
E071 2D 02               CMPA #0x02
E073 2B F8 00            JNE FAIL
E076 30 7C               LDA #0x7C
E078 03                  INCA
E079 03                  INCA
E07A 03                  INCA
E07B 03                  INCA
E07C 03                  INCA
E07D 03                  INCA
E07E 03                  INCA
E07F 03                  INCA
E080 03                  INCA
E081 03                  INCA
E082 2D 86               CMPA #0x86
E084 2B F8 00            JNE FAIL
E087 30 FE               LDA #0xFE
E089 03                  INCA
E08A 2D FF               CMPA #0xFF
E08C 2B F8 00            JNE FAIL
E08F 30 FF               LDA #0xFF
E091 03                  INCA
E092 2D 00               CMPA #0x00
E094 2B F8 00            JNE FAIL
E097 30 FF               LDA #0xFF
E099 03                  INCA
E09A 03                  INCA
E09B 2D 01               CMPA #0x01
E09D 2B F8 00            JNE FAIL
E0A0 03                  INCA
E0A1 03                  INCA
E0A2 03                  INCA
E0A3 03                  INCA
E0A4 2D 05               CMPA #0x05
E0A6 2B F8 00            JNE FAIL
E0A9 03                  INCA
E0AA 03                  INCA
E0AB 03                  INCA
E0AC 03                  INCA
E0AD 03                  INCA
E0AE 03                  INCA
E0AF 03                  INCA
E0B0 03                  INCA
E0B1 2D 0D               CMPA #0x0D
E0B3 2B F8 00            JNE FAIL
E0B6 30 00               LDA #0x00   ; Test Carry unchanged
E0B8 31 1F FB            STA CARRY   ; Clear Carry 
E0BB 30 FF               LDA #0xFF
E0BD 03                  INCA
E0BE 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E0C1 2D 00               CMPA #0x00  ; Expecting C=0 and <7:1> = 0
E0C3 2B F8 00            JNE FAIL
E0C6 30 01               LDA #0x01   ; Set Carry 
E0C8 31 1F FB            STA CARRY   
E0CB 30 EB               LDA #0xEB
E0CD 03                  INCA
E0CE 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E0D1 2D 01               CMPA #0x01  ; Expecting C=1 and <7:1> = 0
E0D3 2B F8 00            JNE FAIL
E0D6 30 FE               LDA #0xFE   ; Test Equal (Set when result is 0)
E0D8 03                  INCA
E0D9 2A 1F FA            LDA EQUAL   ; Read Equal status
E0DC 2D 00               CMPA #0x00  ; Expecting E=0 and <7:1> = 0
E0DE 2B F8 00            JNE FAIL
E0E1 30 FF               LDA #0xFF
E0E3 03                  INCA
E0E4 2A 1F FA            LDA EQUAL   ; Read Equal status
E0E7 2D 01               CMPA #0x01  ; Expecting E=1 and <7:1> = 0
E0E9 2B F8 00            JNE FAIL
E0EC 30 00               LDA #0x00
E0EE 03                  INCA
E0EF 2A 1F FA            LDA EQUAL
E0F2 2D 00               CMPA #0x00  ; Expecting E=0 and <7:1> = 0
E0F4 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.04  LDX #0x****   Load X Register with 16 bits immediate value
                         ; --------------------------------------------------------------------
E0F7 30 04      TSTOP04  LDA #0x04
E0F9 19                  NOTA
E0FA 31 C0 00            STA LEDPORT ; Output to LED port
E0FD 04 12 34            LDX #0x1234
E100 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E103 2D 12               CMPA #0x12
E105 2B F8 00            JNE FAIL
E108 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E10B 2D 34               CMPA #0x34
E10D 2B F8 00            JNE FAIL
E110 04 AB CD            LDX #0xABCD
E113 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E116 2D AB               CMPA #0xAB
E118 2B F8 00            JNE FAIL
E11B 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E11E 2D CD               CMPA #0xCD
E120 2B F8 00            JNE FAIL
                         ; Test using symbolic
E123 04 00 0F            LDX #?b0    ; ?b0      EQU 0x000F
E126 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E129 2D 00               CMPA #0x00
E12B 2B F8 00            JNE FAIL
E12E 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E131 2D 0F               CMPA #0x0F
E133 2B F8 00            JNE FAIL
E136 04 1F F0            LDX #SP     ; SP       EQU 0x1FF0
E139 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E13C 2D 1F               CMPA #0x1F
E13E 2B F8 00            JNE FAIL
E141 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E144 2D F0               CMPA #0xF0
E146 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.05  INCX   Increment Register X,  Carry Not Updated
                         ; --------------------------------------------------------------------
E149 30 05      TSTOP05  LDA #0x05
E14B 19                  NOTA
E14C 31 C0 00            STA LEDPORT ; Output to LED port
E14F 04 00 00            LDX #0x0000 ; Clear X register
E152 05                  INCX        ; Increment X
E153 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E156 2D 01               CMPA #0x01
E158 2B F8 00            JNE FAIL
E15B 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E15E 2D 00               CMPA #0x00
E160 2B F8 00            JNE FAIL
E163 05                  INCX
E164 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E167 2D 02               CMPA #0x02
E169 2B F8 00            JNE FAIL
E16C 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E16F 2D 00               CMPA #0x00
E171 2B F8 00            JNE FAIL

E174 04 00 FF            LDX #0x00FF ; Test a carry set
E177 05                  INCX        ; Increment X
E178 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E17B 2D 00               CMPA #0x00
E17D 2B F8 00            JNE FAIL
E180 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E183 2D 01               CMPA #0x01
E185 2B F8 00            JNE FAIL
E188 05                  INCX        ; Increment X
E189 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E18C 2D 01               CMPA #0x01
E18E 2B F8 00            JNE FAIL
E191 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E194 2D 01               CMPA #0x01
E196 2B F8 00            JNE FAIL

E199 04 1E FF            LDX #0x1EFF
E19C 05                  INCX        ; Increment X
E19D 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E1A0 2D 00               CMPA #0x00
E1A2 2B F8 00            JNE FAIL
E1A5 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E1A8 2D 1F               CMPA #0x1F
E1AA 2B F8 00            JNE FAIL

E1AD 04 FF FF            LDX #0xFFFF
E1B0 05                  INCX        ; Increment X
E1B1 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E1B4 2D 00               CMPA #0x00
E1B6 2B F8 00            JNE FAIL
E1B9 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E1BC 2D 00               CMPA #0x00
E1BE 2B F8 00            JNE FAIL

                         ; --------------------------------------------------------------------
                         ; OP.06 JSR    Jump to SubRoutine
                         ; --------------------------------------------------------------------
E1C1 30 06      TSTOP06  LDA #0x06
E1C3 19                  NOTA
E1C4 31 C0 00            STA LEDPORT ; Output to LED port
E1C7 06 FF C0            JSR TJSR1   ; 1 layer
E1CA 06 FF C3            JSR TJSR2   ; 2
E1CD 06 FF C9            JSR TJSR3   ; 3
E1D0 06 FF CF            JSR TJSR4   ; 4
E1D3 06 FF D5            JSR TJSR5   ; 5
E1D6 06 FF DB            JSR TJSR6   ; 6
E1D9 06 FF E1            JSR TJSR7   ; 7
E1DC 06 FF E7            JSR TJSR8   ; 8
E1DF 06 FF ED            JSR TJSR9   ; 9
E1E2 06 FF F3            JSR TJSR10  ; 10
                         ; --------------------------------------------------------------------
                         ; OP.07 RTS    ReTurn from Subroutine
                         ; Tested in OP.06 JSR
                         ; --------------------------------------------------------------------
                         ;LDA #07H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.08 STOP
                         ; STOP EXECUTING
                         ; Cannot test here it will stop execution...
                         ; A diagnostic test failure is expected to call this instruction ending 
                         ; program exectution.
                         ; --------------------------------------------------------------------
                         ;LDA #08H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ;STOP
                         ; --------------------------------------------------------------------
                         ; OP.09 NOP   NO OPERATION
                         ; --------------------------------------------------------------------
E1E5 30 09      TSTOP09  LDA #0x09
E1E7 19                  NOTA
E1E8 31 C0 00            STA LEDPORT ; Output to LED port
E1EB 09                  NOP
E1EC 09                  NOP
E1ED 09                  NOP
                         ; --------------------------------------------------------------------
                         ; OP.0A LDA (X) Load Reg A Indexed
                         ; --------------------------------------------------------------------
E1EE 30 0A      TSTOP0A  LDA #0x0A
E1F0 19                  NOTA
E1F1 31 C0 00            STA LEDPORT ; Output to LED port
E1F4 30 55               LDA #0x55   ; Store some value in RAM
E1F6 31 01 00            STA 0x0100
E1F9 30 AA               LDA #0xAA
E1FB 31 01 01            STA 0x0101
E1FE 30 DE               LDA #0xDE
E200 31 01 F0            STA 0x01F0
E203 30 CA               LDA #0xCA
E205 31 01 FF            STA 0x01FF
E208 04 01 00            LDX #0x0100 ; Verify each locations
E20B 0A                  LDA (X)
E20C 2D 55               CMPA #0x55
E20E 2B F8 00            JNE FAIL    ; Jump if result not good
E211 04 01 01            LDX #0x0101
E214 0A                  LDA (X)
E215 2D AA               CMPA #0xAA
E217 2B F8 00            JNE FAIL
E21A 04 01 F0            LDX #0x01F0
E21D 0A                  LDA (X)
E21E 2D DE               CMPA #0xDE
E220 2B F8 00            JNE FAIL
E223 04 01 FF            LDX #0x01FF
E226 0A                  LDA (X)
E227 2D CA               CMPA #0xCA
E229 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.0B STA (X) Store Reg A Indexed
                         ; --------------------------------------------------------------------
E22C 30 0B      TSTOP0B  LDA #0x0B
E22E 19                  NOTA
E22F 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.0C JRA 0x** Unconditional relative jump
                         ; --------------------------------------------------------------------
                         ; Testing using hexadecimal value after the mnemonic
E232 30 0C               LDA #0x0C
E234 19                  NOTA
E235 31 C0 00            STA LEDPORT ; Output to LED port
E238 0C 00               JRA 0x00    ; Test jump foward, Execute next instruction
E23A 0C 01               JRA 0x01    ; Skip next instruction
E23C 09                  NOP         ; 1
E23D 0C 02               JRA 0x02    ; Skip next 2 instructions
E23F 09                  NOP         ; 1
E240 09                  NOP         ; 2
E241 0C 03               JRA 0x03    ; Skip next 3 instructions
E243 09                  NOP         ; 1 
E244 09                  NOP         ; 2
E245 09                  NOP         ; 3
E246 0C 05               JRA 0x05    ; Skip next 5 instructions
E248 09                  NOP         ; 1
E249 09                  NOP         ; 2
E24A 09                  NOP         ; 3
E24B 09                  NOP         ; 4
E24C 09                  NOP         ; 5
E24D 0C 10               JRA 0x10    ; Skip next 16 instructions
E24F 09                  NOP         ; 1
E250 09                  NOP         ; 2
E251 09                  NOP         ; 3
E252 09                  NOP         ; 4
E253 09                  NOP         ; 5
E254 09                  NOP         ; 6
E255 09                  NOP         ; 7
E256 09                  NOP         ; 8
E257 09                  NOP         ; 9
E258 09                  NOP         ; 10
E259 09                  NOP         ; 11
E25A 09                  NOP         ; 12
E25B 09                  NOP         ; 13
E25C 09                  NOP         ; 14
E25D 09                  NOP         ; 15
E25E 09                  NOP         ; 16
E25F 0C 22               JRA 0x22    ; Skip next 34 bytes
E261 09                  NOP         ; 1
E262 09                  NOP         ; 2
E263 09                  NOP         ; 3
E264 0C 1F               JRA 0x1F   ; 4-5   Final jump to the end of thest
E266 09                  NOP         ; 6
E267 09                  NOP         ; 7
E268 09                  NOP         ; 8
E269 09                  NOP         ; 9
E26A 09                  NOP         ; 10
E26B 09                  NOP         ; 11
E26C 09                  NOP         ; 12
E26D 09                  NOP         ; 13
E26E 09                  NOP         ; 14
E26F 09                  NOP         ; 15
E270 09                  NOP         ; 16
E271 09                  NOP         ; 17
E272 09                  NOP         ; 18
E273 09                  NOP         ; 19
E274 09                  NOP         ; 20
E275 09                  NOP         ; 21
E276 09                  NOP         ; 22
E277 09                  NOP         ; 23
E278 09                  NOP         ; 24
E279 09                  NOP         ; 25
E27A 0C E8               JRA 0xE8    ; 26-27 Third Backward jump
E27C 09                  NOP         ; 28
E27D 09                  NOP         ; 29
E27E 09                  NOP         ; 30
E27F 09                  NOP         ; 31
E280 09                  NOP         ; 32
E281 0C F7               JRA 0xF7    ; 33-34 Second Backward jump
E283 0C FC               JRA 0xFC    ; First Backward jump
E285 09                  NOP         ; Arrival of the last jump to end the test
                         ; Testing using symbolic address after the mnemonic
E286 0C 00               JRA TST0B_0 ; Test jump foward, Execute next instruction
E288 0C 01      TST0B_0  JRA TST0B_1 ; Skip next instruction
E28A 09                  NOP         ; 1
E28B 0C 02      TST0B_1  JRA TST0B_2 ; Skip next 2 instructions
E28D 09                  NOP         ; 1
E28E 09                  NOP         ; 2
E28F 0C 03      TST0B_2  JRA TST0B_3 ; Skip next 3 instructions
E291 09                  NOP         ; 1 
E292 09                  NOP         ; 2
E293 09                  NOP         ; 3
E294 0C 05      TST0B_3  JRA TST0B_4 ; Skip next 5 instructions
E296 09                  NOP         ; 1
E297 09                  NOP         ; 2
E298 09                  NOP         ; 3
E299 09                  NOP         ; 4
E29A 09                  NOP         ; 5
E29B 0C 10      TST0B_4  JRA TST0B_5 ; Skip next 16 instructions
E29D 09                  NOP         ; 1
E29E 09                  NOP         ; 2
E29F 09                  NOP         ; 3
E2A0 09                  NOP         ; 4
E2A1 09                  NOP         ; 5
E2A2 09                  NOP         ; 6
E2A3 09                  NOP         ; 7
E2A4 09                  NOP         ; 8
E2A5 09                  NOP         ; 9
E2A6 09                  NOP         ; 10
E2A7 09                  NOP         ; 11
E2A8 09                  NOP         ; 12
E2A9 09                  NOP         ; 13
E2AA 09                  NOP         ; 14
E2AB 09                  NOP         ; 15
E2AC 09                  NOP         ; 16
E2AD 0C 22      TST0B_5  JRA TST0B_9 ; Skip next 34 bytes
E2AF 09                  NOP         ; 1
E2B0 09                  NOP         ; 2
E2B1 09                  NOP         ; 3
E2B2 0C 1F      TST0B_6  JRA TST0B_10 ; 4-5   Final jump to the end of test
E2B4 09                  NOP         ; 6
E2B5 09                  NOP         ; 7
E2B6 09                  NOP         ; 8
E2B7 09                  NOP         ; 9
E2B8 09                  NOP         ; 10
E2B9 09                  NOP         ; 11
E2BA 09                  NOP         ; 12
E2BB 09                  NOP         ; 13
E2BC 09                  NOP         ; 14
E2BD 09                  NOP         ; 15
E2BE 09                  NOP         ; 16
E2BF 09                  NOP         ; 17
E2C0 09                  NOP         ; 18
E2C1 09                  NOP         ; 19
E2C2 09                  NOP         ; 20
E2C3 09                  NOP         ; 21
E2C4 09                  NOP         ; 22
E2C5 09                  NOP         ; 23
E2C6 09                  NOP         ; 24
E2C7 09                  NOP         ; 25
E2C8 0C E8      TST0B_7  JRA TST0B_6 ; 26-27 Third Backward jump
E2CA 09                  NOP         ; 28
E2CB 09                  NOP         ; 29
E2CC 09                  NOP         ; 30
E2CD 09                  NOP         ; 31
E2CE 09                  NOP         ; 32
E2CF 0C F7      TST0B_8  JRA TST0B_7 ; 33-34 Second Backward jump
E2D1 0C FC      TST0B_9  JRA TST0B_8 ; First Backward jump
E2D3 09         TST0B_10 NOP         ; Arrival of the last jump to end the test
                ;         ; Higher range testing using symbolic address after the mnemonic
E2D4 09                  NOP         ; These NOP make relative jump to exercise carry on MSB address boundary
E2D5 09                  NOP
E2D6 09                  NOP
E2D7 09                  NOP
E2D8 09                  NOP
E2D9 09                  NOP
E2DA 09                  NOP
E2DB 09                  NOP
E2DC 09                  NOP
E2DD 09                  NOP
E2DE 09                  NOP
E2DF 09                  NOP
E2E0 09                  NOP
E2E1 09                  NOP
E2E2 09                  NOP
E2E3 09                  NOP
E2E4 0C 7F               JRA TST0B_12
E2E6 09                  NOP         ; 1     1     
E2E7 09                  NOP
                ;         NOP
                ;         NOP
E2E8 0C 7E      TST0B_11 JRA TST0B_13
E2EA 09                  NOP
E2EB 09                  NOP
E2EC 09                  NOP
E2ED 09                  NOP
E2EE 09                  NOP
E2EF 09                  NOP         
E2F0 09                  NOP
E2F1 09                  NOP
E2F2 09                  NOP
E2F3 09                  NOP
E2F4 09                  NOP
E2F5 09                  NOP         ; 16
E2F6 09                  NOP         ; 1     2   
E2F7 09                  NOP
E2F8 09                  NOP
E2F9 09                  NOP
E2FA 09                  NOP
E2FB 09                  NOP
E2FC 09                  NOP
E2FD 09                  NOP
E2FE 09                  NOP
E2FF 09                  NOP         
E300 09                  NOP
E301 09                  NOP
E302 09                  NOP
E303 09                  NOP
E304 09                  NOP
E305 09                  NOP         ; 16
E306 09                  NOP         ; 1   3
E307 09                  NOP
E308 09                  NOP
E309 09                  NOP
E30A 09                  NOP
E30B 09                  NOP
E30C 09                  NOP
E30D 09                  NOP
E30E 09                  NOP
E30F 09                  NOP         
E310 09                  NOP
E311 09                  NOP
E312 09                  NOP
E313 09                  NOP
E314 09                  NOP
E315 09                  NOP         ; 16
E316 09                  NOP         ; 1   4
E317 09                  NOP
E318 09                  NOP
E319 09                  NOP
E31A 09                  NOP
E31B 09                  NOP
E31C 09                  NOP
E31D 09                  NOP
E31E 09                  NOP
E31F 09                  NOP         
E320 09                  NOP
E321 09                  NOP
E322 09                  NOP
E323 09                  NOP
E324 09                  NOP
E325 09                  NOP         ; 16
E326 09                  NOP         ; 1   5
E327 09                  NOP
E328 09                  NOP
E329 09                  NOP
E32A 09                  NOP
E32B 09                  NOP
E32C 09                  NOP
E32D 09                  NOP
E32E 09                  NOP
E32F 09                  NOP         
E330 09                  NOP
E331 09                  NOP
E332 09                  NOP
E333 09                  NOP
E334 09                  NOP
E335 09                  NOP         ; 16
E336 09                  NOP         ; 1   5
E337 09                  NOP
E338 09                  NOP
E339 09                  NOP
E33A 09                  NOP
E33B 09                  NOP
E33C 09                  NOP
E33D 09                  NOP
E33E 09                  NOP
E33F 09                  NOP         
E340 09                  NOP
E341 09                  NOP
E342 09                  NOP
E343 09                  NOP
E344 09                  NOP
E345 09                  NOP         ; 16
E346 09                  NOP         ; 1   6
E347 09                  NOP
E348 09                  NOP
E349 09                  NOP
E34A 09                  NOP
E34B 09                  NOP
E34C 09                  NOP
E34D 09                  NOP
E34E 09                  NOP
E34F 09                  NOP         
E350 09                  NOP
E351 09                  NOP
E352 09                  NOP
E353 09                  NOP
E354 09                  NOP
E355 09                  NOP         ; 16
E356 09                  NOP         ; 1   7
E357 09                  NOP
E358 09                  NOP
E359 09                  NOP
E35A 09                  NOP
E35B 09                  NOP
E35C 09                  NOP
E35D 09                  NOP
E35E 09                  NOP
E35F 09                  NOP         
E360 09                  NOP
E361 09                  NOP
E362 09                  NOP
E363 09                  NOP
E364 09                  NOP
                ;         NOP        ; 16
E365 09         TST0B_12 NOP
E366 0C 80               JRA TST0B_11
E368 09         TST0B_13 NOP         ; final foward jump destination     
                         ; --------------------------------------------------------------------
                         ; OP.0D SRLA Shift Right Logical on Reg A
                         ;            0 -> b7 b6 b5 b4 b3 b2 b1 b0 -> C
                         ; --------------------------------------------------------------------
E369 30 0D      TSTOP0D  LDA #0x0D
E36B 19                  NOTA
E36C 31 C0 00            STA LEDPORT ; Output to LED port
E36F 30 A5               LDA #0xA5
E371 0D                  SRLA
E372 2D 52               CMPA #0x52
E374 2B F8 00            JNE FAIL    ; Jump if result not good
E377 2A 1F FB            LDA CARRY   ; Read the Carry Status
E37A 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E37C 2B F8 00            JNE FAIL    ; Error if different
E37F 30 A5               LDA #0xA5
E381 0D                  SRLA
E382 0D                  SRLA
E383 2D 29               CMPA #0x29
E385 2B F8 00            JNE FAIL    ; Jump if result not good
E388 2A 1F FB            LDA CARRY   ; Read the Carry Status
E38B 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E38D 2B F8 00            JNE FAIL    ; Error if different
E390 30 A5               LDA #0xA5
E392 0D                  SRLA
E393 0D                  SRLA
E394 0D                  SRLA
E395 2D 14               CMPA #0x14
E397 2B F8 00            JNE FAIL    ; Jump if result not good
E39A 2A 1F FB            LDA CARRY   ; Read the Carry Status
E39D 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E39F 2B F8 00            JNE FAIL    ; Error if different
E3A2 30 A5               LDA #0xA5
E3A4 0D                  SRLA
E3A5 0D                  SRLA
E3A6 0D                  SRLA
E3A7 0D                  SRLA
E3A8 2D 0A               CMPA #0x0A
E3AA 2B F8 00            JNE FAIL    ; Jump if result not good
E3AD 2A 1F FB            LDA CARRY   ; Read the Carry Status
E3B0 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E3B2 2B F8 00            JNE FAIL    ; Error if different
E3B5 30 A5               LDA #0xA5
E3B7 0D                  SRLA
E3B8 0D                  SRLA
E3B9 0D                  SRLA
E3BA 0D                  SRLA
E3BB 0D                  SRLA
E3BC 2D 05               CMPA #0x05
E3BE 2B F8 00            JNE FAIL    ; Jump if result not good
E3C1 2A 1F FB            LDA CARRY   ; Read the Carry Status
E3C4 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E3C6 2B F8 00            JNE FAIL    ; Error if different
E3C9 30 A5               LDA #0xA5
E3CB 0D                  SRLA
E3CC 0D                  SRLA
E3CD 0D                  SRLA
E3CE 0D                  SRLA
E3CF 0D                  SRLA
E3D0 0D                  SRLA
E3D1 2D 02               CMPA #0x02
E3D3 2B F8 00            JNE FAIL    ; Jump if result not good
E3D6 2A 1F FB            LDA CARRY   ; Read the Carry Status
E3D9 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E3DB 2B F8 00            JNE FAIL    ; Error if different
E3DE 30 A5               LDA #0xA5
E3E0 0D                  SRLA
E3E1 0D                  SRLA
E3E2 0D                  SRLA
E3E3 0D                  SRLA
E3E4 0D                  SRLA
E3E5 0D                  SRLA
E3E6 0D                  SRLA
E3E7 2D 01               CMPA #0x01
E3E9 2B F8 00            JNE FAIL    ; Jump if result not good
E3EC 2A 1F FB            LDA CARRY   ; Read the Carry Status
E3EF 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E3F1 2B F8 00            JNE FAIL    ; Error if different
E3F4 30 A5               LDA #0xA5
E3F6 0D                  SRLA
E3F7 0D                  SRLA
E3F8 0D                  SRLA
E3F9 0D                  SRLA
E3FA 0D                  SRLA
E3FB 0D                  SRLA
E3FC 0D                  SRLA
E3FD 0D                  SRLA
E3FE 2D 00               CMPA #0x00
E400 2B F8 00            JNE FAIL    ; Jump if result not good
E403 2A 1F FB            LDA CARRY   ; Read the Carry Status
E406 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E408 2B F8 00            JNE FAIL    ; Error if different
E40B 30 A5               LDA #0xA5
E40D 0D                  SRLA
E40E 0D                  SRLA
E40F 0D                  SRLA
E410 0D                  SRLA
E411 0D                  SRLA
E412 0D                  SRLA
E413 0D                  SRLA
E414 0D                  SRLA
E415 0D                  SRLA
E416 2D 00               CMPA #0x00
E418 2B F8 00            JNE FAIL    ; Jump if result not good
E41B 2A 1F FB            LDA CARRY   ; Read the Carry Status
E41E 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E420 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.0E SLLA Shift Left Logical on Reg A
                         ;       SLAA Shift Left Arithmetic on Reg A (SLAA same as SLLA)
                         ;            C <- b7 b6 b5 b4 b3 b2 b1 b0 <- 0
                         ; --------------------------------------------------------------------
E423 30 0E      TSTOP0E  LDA #0x0E
E425 19                  NOTA
E426 31 C0 00            STA LEDPORT ; Output to LED port
E429 30 A5               LDA #0xA5
E42B 0E                  SLLA
E42C 2D 4A               CMPA #0x4A
E42E 2B F8 00            JNE FAIL    ; Jump if result not good
E431 2A 1F FB            LDA CARRY   ; Read the Carry Status
E434 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E436 2B F8 00            JNE FAIL    ; Error if different
E439 30 A5               LDA #0xA5
E43B 0E                  SLLA
E43C 0E                  SLLA
E43D 2D 94               CMPA #0x94
E43F 2B F8 00            JNE FAIL    ; Jump if result not good
E442 2A 1F FB            LDA CARRY   ; Read the Carry Status
E445 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E447 2B F8 00            JNE FAIL    ; Error if different
E44A 30 A5               LDA #0xA5
E44C 0E                  SLLA
E44D 0E                  SLLA
E44E 0E                  SLLA
E44F 2D 28               CMPA #0x28
E451 2B F8 00            JNE FAIL    ; Jump if result not good
E454 2A 1F FB            LDA CARRY   ; Read the Carry Status
E457 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E459 2B F8 00            JNE FAIL    ; Error if different
E45C 30 A5               LDA #0xA5
E45E 0E                  SLLA
E45F 0E                  SLLA
E460 0E                  SLLA
E461 0E                  SLLA
E462 2D 50               CMPA #0x50
E464 2B F8 00            JNE FAIL    ; Jump if result not good
E467 2A 1F FB            LDA CARRY   ; Read the Carry Status
E46A 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E46C 2B F8 00            JNE FAIL    ; Error if different
E46F 30 A5               LDA #0xA5
E471 0E                  SLLA
E472 0E                  SLLA
E473 0E                  SLLA
E474 0E                  SLLA
E475 0E                  SLLA
E476 2D A0               CMPA #0xA0
E478 2B F8 00            JNE FAIL    ; Jump if result not good
E47B 2A 1F FB            LDA CARRY   ; Read the Carry Status
E47E 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E480 2B F8 00            JNE FAIL    ; Error if different
E483 30 A5               LDA #0xA5
E485 0E                  SLLA
E486 0E                  SLLA
E487 0E                  SLLA
E488 0E                  SLLA
E489 0E                  SLLA
E48A 0E                  SLAA
E48B 2D 40               CMPA #0x40
E48D 2B F8 00            JNE FAIL    ; Jump if result not good
E490 2A 1F FB            LDA CARRY   ; Read the Carry Status
E493 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E495 2B F8 00            JNE FAIL    ; Error if different
E498 30 A5               LDA #0xA5
E49A 0E                  SLLA
E49B 0E                  SLLA
E49C 0E                  SLLA
E49D 0E                  SLLA
E49E 0E                  SLLA
E49F 0E                  SLAA
E4A0 0E                  SLAA
E4A1 2D 80               CMPA #0x80
E4A3 2B F8 00            JNE FAIL    ; Jump if result not good
E4A6 2A 1F FB            LDA CARRY   ; Read the Carry Status
E4A9 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E4AB 2B F8 00            JNE FAIL    ; Error if different
E4AE 30 A5               LDA #0xA5
E4B0 0E                  SLLA
E4B1 0E                  SLLA
E4B2 0E                  SLLA
E4B3 0E                  SLLA
E4B4 0E                  SLLA
E4B5 0E                  SLAA
E4B6 0E                  SLAA
E4B7 0E                  SLAA
E4B8 2D 00               CMPA #0x00
E4BA 2B F8 00            JNE FAIL    ; Jump if result not good
E4BD 2A 1F FB            LDA CARRY   ; Read the Carry Status
E4C0 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E4C2 2B F8 00            JNE FAIL    ; Error if different
E4C5 30 A5               LDA #0xA5
E4C7 0E                  SLLA
E4C8 0E                  SLLA
E4C9 0E                  SLLA
E4CA 0E                  SLLA
E4CB 0E                  SLLA
E4CC 0E                  SLAA
E4CD 0E                  SLAA
E4CE 0E                  SLAA
E4CF 0E                  SLAA
E4D0 2D 00               CMPA #0x00
E4D2 2B F8 00            JNE FAIL    ; Jump if result not good
E4D5 2A 1F FB            LDA CARRY   ; Read the Carry Status
E4D8 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E4DA 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.0F 
                         ; JRNC Jump Relatif if Not Carry
                         ; --------------------------------------------------------------------
E4DD 30 0F      TSTOP0F  LDA #0x0F
E4DF 19                  NOTA
E4E0 31 C0 00            STA LEDPORT ; Output to LED port
E4E3 30 00               LDA #0x00   ; Clear carry
E4E5 31 1F FB            STA CARRY
E4E8 0F 03               JRNC TST0F_0
E4EA 32 F8 00            JMP FAIL
E4ED 30 01      TST0F_0  LDA #0x01   ; Set carry
E4EF 31 1F FB            STA CARRY
E4F2 0F 03               JRNC TST0F_1
E4F4 32 E4 FA            JMP TST0F_2
E4F7 32 F8 00   TST0F_1  JMP FAIL
E4FA 09         TST0F_2  NOP
                         ; --------------------------------------------------------------------
                         ; OP.10  RRCA   Rotate Right Logical Reg A through Carry 
                         ;               C -> b7 b6 b5 b4 b3 b2 b1 b0 -> C  
                         ; --------------------------------------------------------------------
E4FB 30 10      TSTOP10  LDA #0x10
E4FD 19                  NOTA
E4FE 31 C0 00            STA LEDPORT ; Output to LED port
E501 30 00               LDA #0x00   ; Clear Carry
E503 31 1F FB            STA CARRY
E506 10                  RRCA
E507 2D 00               CMPA #0x00
E509 2B F8 00            JNE FAIL
E50C 30 00               LDA #0x00   ; Clear Carry
E50E 31 1F FB            STA CARRY
E511 10                  RRCA
E512 2A 1F FB            LDA CARRY
E515 2D 00               CMPA #0x00
E517 2B F8 00            JNE FAIL
E51A 30 AA               LDA #0xAA   ; Test shifting
E51C 10                  RRCA
E51D 2D 55               CMPA #0x55
E51F 2B F8 00            JNE FAIL
E522 30 01               LDA #0x01   ; Test transfer of bit <0> to carry
E524 10                  RRCA
E525 2A 1F FB            LDA CARRY
E528 2D 01               CMPA #0x01
E52A 2B F8 00            JNE FAIL
E52D 30 00               LDA #0x00   ; Test A become 0 after shifting when carry is 0
E52F 31 1F FB            STA CARRY   ; insure carry is clear
E532 30 01               LDA #0x01   ; set bit <0> to '1'
E534 10                  RRCA
E535 2D 00               CMPA #0x00
E537 2B F8 00            JNE FAIL
E53A 30 00               LDA #0x00   ; Test bit <0> goes to bit <7> after 2 RRCA
E53C 31 1F FB            STA CARRY   ; insure carry is clear
E53F 30 01               LDA #0x01
E541 10                  RRCA
E542 10                  RRCA
E543 2D 80               CMPA #0x80
E545 2B F8 00            JNE FAIL
E548 10                  RRCA        ; continue rotating this bit
E549 2D 40               CMPA #0x40
E54B 2B F8 00            JNE FAIL
E54E 10                  RRCA
E54F 2D 20               CMPA #0x20
E551 2B F8 00            JNE FAIL
E554 10                  RRCA
E555 2D 10               CMPA #0x10
E557 2B F8 00            JNE FAIL
E55A 10                  RRCA
E55B 2D 08               CMPA #0x08
E55D 2B F8 00            JNE FAIL
E560 10                  RRCA
E561 2D 04               CMPA #0x04
E563 2B F8 00            JNE FAIL
E566 10                  RRCA
E567 2D 02               CMPA #0x02
E569 2B F8 00            JNE FAIL
E56C 10                  RRCA
E56D 2D 01               CMPA #0x01
E56F 2B F8 00            JNE FAIL
E572 10                  RRCA
E573 2D 00               CMPA #0x00
E575 2B F8 00            JNE FAIL
E578 10                  RRCA
E579 2D 80               CMPA #0x80
E57B 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.11  RCF   Reset Carry Flag   C <- 0
                         ; --------------------------------------------------------------------
E57E 30 11      TSTOP11  LDA #0x11
E580 19                  NOTA
E581 31 C0 00            STA LEDPORT ; Output to LED port
E584 30 01               LDA #0x01   ; Set carry flag to 1
E586 31 1F FB            STA CARRY
E589 11                  RCF         ; Reset Carry Flag 
E58A 2A 1F FB            LDA CARRY   ; Check carry is now cleared
E58D 2D 00               CMPA #0x00
E58F 2B F8 00            JNE FAIL
E592 11                  RCF         ; Do again a Reset Carry Flag 
E593 2A 1F FB            LDA CARRY   ; Check carry is still cleared
E596 2D 00               CMPA #0x00
E598 2B F8 00            JNE FAIL
E59B 30 A5               LDA #0xA5   ; Check register A is not affected by a Reset Carry Flag
E59D 11                  RCF         ; Reset Carry Flag
E59E 2D A5               CMPA #0xA5  ; If A value not same then fail
E5A0 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.12  SCF   Set Carry Flag   C <- 1
                         ; --------------------------------------------------------------------
E5A3 30 12      TSTOP12  LDA #0x12
E5A5 19                  NOTA
E5A6 31 C0 00            STA LEDPORT ; Output to LED port
E5A9 30 00               LDA #0x00   ; Clear carry flag
E5AB 31 1F FB            STA CARRY
E5AE 12                  SCF         ; Set Carry Flag 
E5AF 2A 1F FB            LDA CARRY   ; Check carry is set
E5B2 2D 01               CMPA #0x01
E5B4 2B F8 00            JNE FAIL
E5B7 12                  SCF         ; Set Carry Flag again
E5B8 2A 1F FB            LDA CARRY   ; Check carry is still set
E5BB 2D 01               CMPA #0x01
E5BD 2B F8 00            JNE FAIL
E5C0 30 BE               LDA #0xBE   ; Check register A is not affected by a Set Carry Flag
E5C2 12                  SCF         ; Set Carry Flag
E5C3 2D BE               CMPA #0xBE  ; If A value not same then fail
E5C5 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.13  DECXL   Decrement XL   E updated
                         ; --------------------------------------------------------------------
E5C8 30 13      TSTOP13  LDA #0x13
E5CA 19                  NOTA
E5CB 31 C0 00            STA LEDPORT ; Output to LED port
E5CE 04 FF FF            LDX #0xFFFF
E5D1 13                  DECXL
E5D2 2A 1F F3            LDA XH
E5D5 2D FF               CMPA #0xFF
E5D7 2B F8 00            JNE FAIL
E5DA 2A 1F F4            LDA XL
E5DD 2D FE               CMPA #0xFE
E5DF 2B F8 00            JNE FAIL
E5E2 13                  DECXL
E5E3 2A 1F F3            LDA XH
E5E6 2D FF               CMPA #0xFF
E5E8 2B F8 00            JNE FAIL
E5EB 2A 1F F4            LDA XL
E5EE 2D FD               CMPA #0xFD
E5F0 2B F8 00            JNE FAIL
E5F3 04 A5 02            LDX #0xA502
E5F6 13                  DECXL
E5F7 2A 1F F3            LDA XH
E5FA 2D A5               CMPA #0xA5
E5FC 2B F8 00            JNE FAIL
E5FF 2A 1F F4            LDA XL
E602 2D 01               CMPA #0x01
E604 2B F8 00            JNE FAIL
E607 13                  DECXL
E608 2A 1F F3            LDA XH
E60B 2D A5               CMPA #0xA5
E60D 2B F8 00            JNE FAIL
E610 2A 1F F4            LDA XL
E613 2D 00               CMPA #0x00
E615 2B F8 00            JNE FAIL
E618 13                  DECXL
E619 2A 1F F3            LDA XH
E61C 2D A5               CMPA #0xA5
E61E 2B F8 00            JNE FAIL
E621 2A 1F F4            LDA XL
E624 2D FF               CMPA #0xFF
E626 2B F8 00            JNE FAIL
E629 13                  DECXL 
E62A 2A 1F F3            LDA XH
E62D 2D A5               CMPA #0xA5
E62F 2B F8 00            JNE FAIL
E632 2A 1F F4            LDA XL
E635 2D FE               CMPA #0xFE
E637 2B F8 00            JNE FAIL
E63A 04 00 02            LDX #0x0002 ; Check E status
E63D 13                  DECXL
E63E 2A 1F FA            LDA EQUAL
E641 2D 00               CMPA #0x00
E643 2B F8 00            JNE FAIL
E646 04 00 01            LDX #0x0001
E649 13                  DECXL
E64A 2A 1F FA            LDA EQUAL
E64D 2D 01               CMPA #0x01
E64F 2B F8 00            JNE FAIL
E652 04 FF FF            LDX #0xFFFF
E655 13                  DECXL
E656 2A 1F FA            LDA EQUAL
E659 2D 00               CMPA #0x00
E65B 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.14  RRC 0x****   Rotate Right Logical Address location through Carry 
                         ;                     C -> b7 b6 b5 b4 b3 b2 b1 b0 -> C  
                         ; --------------------------------------------------------------------
E65E 30 14      TSTOP14  LDA #0x14
E660 19                  NOTA
E661 31 C0 00            STA LEDPORT ; Output to LED port
E664 30 00               LDA #0x00   ; Clear Carry
E666 31 1F FB            STA CARRY
E669 31 00 0F            STA ?b0
E66C 14 00 0F            RRC ?b0
E66F 2A 00 0F            LDA ?b0
E672 2D 00               CMPA #0x00
E674 2B F8 00            JNE FAIL
E677 30 00               LDA #0x00   ; Clear Carry
E679 31 1F FB            STA CARRY
E67C 31 00 0F            STA ?b0
E67F 14 00 0F            RRC ?b0
E682 2A 1F FB            LDA CARRY
E685 2D 00               CMPA #0x00
E687 2B F8 00            JNE FAIL
E68A 30 AA               LDA #0xAA   ; Test shifting
E68C 31 00 0F            STA ?b0
E68F 14 00 0F            RRC ?b0
E692 2A 00 0F            LDA ?b0
E695 2D 55               CMPA #0x55
E697 2B F8 00            JNE FAIL
E69A 30 01               LDA #0x01   ; Test transfer of bit <0> to carry
E69C 31 00 0F            STA ?b0
E69F 14 00 0F            RRC ?b0
E6A2 2A 1F FB            LDA CARRY
E6A5 2D 01               CMPA #0x01
E6A7 2B F8 00            JNE FAIL
E6AA 30 00               LDA #0x00   ; Test A become 0 after shifting when carry is 0
E6AC 31 1F FB            STA CARRY   ; insure carry is clear
E6AF 30 01               LDA #0x01   ; set bit <0> to '1'
E6B1 31 00 0F            STA ?b0
E6B4 14 00 0F            RRC ?b0
E6B7 2A 00 0F            LDA ?b0
E6BA 2D 00               CMPA #0x00
E6BC 2B F8 00            JNE FAIL
E6BF 30 00               LDA #0x00   ; Test bit <0> goes to bit <7> after 2 RRCA
E6C1 31 1F FB            STA CARRY   ; insure carry is clear
E6C4 30 01               LDA #0x01
E6C6 31 00 0F            STA ?b0
E6C9 14 00 0F            RRC ?b0
E6CC 14 00 0F            RRC ?b0
E6CF 2A 00 0F            LDA ?b0
E6D2 2D 80               CMPA #0x80
E6D4 2B F8 00            JNE FAIL
E6D7 14 00 0F            RRC ?b0     ; continue rotating this bit
E6DA 2A 00 0F            LDA ?b0
E6DD 2D 40               CMPA #0x40
E6DF 2B F8 00            JNE FAIL
E6E2 14 00 0F            RRC ?b0
E6E5 2A 00 0F            LDA ?b0
E6E8 2D 20               CMPA #0x20
E6EA 2B F8 00            JNE FAIL
E6ED 14 00 0F            RRC ?b0
E6F0 2A 00 0F            LDA ?b0
E6F3 2D 10               CMPA #0x10
E6F5 2B F8 00            JNE FAIL
E6F8 14 00 0F            RRC ?b0
E6FB 2A 00 0F            LDA ?b0
E6FE 2D 08               CMPA #0x08
E700 2B F8 00            JNE FAIL
E703 14 00 0F            RRC ?b0
E706 2A 00 0F            LDA ?b0
E709 2D 04               CMPA #0x04
E70B 2B F8 00            JNE FAIL
E70E 14 00 0F            RRC ?b0
E711 2A 00 0F            LDA ?b0
E714 2D 02               CMPA #0x02
E716 2B F8 00            JNE FAIL
E719 14 00 0F            RRC ?b0
E71C 2A 00 0F            LDA ?b0
E71F 2D 01               CMPA #0x01
E721 2B F8 00            JNE FAIL
E724 14 00 0F            RRC ?b0
E727 2A 00 0F            LDA ?b0
E72A 2D 00               CMPA #0x00
E72C 2B F8 00            JNE FAIL
E72F 14 00 0F            RRC ?b0
E732 2A 00 0F            LDA ?b0
E735 2D 80               CMPA #0x80
E737 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.15 SRL 0x****   Shift Right Logical on Address
                         ;                    0 -> b7 b6 b5 b4 b3 b2 b1 b0 -> C
                         ; --------------------------------------------------------------------
E73A 30 15      TSTOP15  LDA #0x15
E73C 19                  NOTA
E73D 31 C0 00            STA LEDPORT ; Output to LED port
E740 30 A5               LDA #0xA5
E742 31 00 0F            STA ?b0
E745 15 00 0F            SRL ?b0
E748 2A 00 0F            LDA ?b0
E74B 2D 52               CMPA #0x52
E74D 2B F8 00            JNE FAIL    ; Jump if result not good
E750 2A 1F FB            LDA CARRY   ; Read the Carry Status
E753 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E755 2B F8 00            JNE FAIL    ; Error if different
E758 30 A5               LDA #0xA5
E75A 31 00 0F            STA ?b0
E75D 15 00 0F            SRL ?b0
E760 15 00 0F            SRL ?b0
E763 2A 00 0F            LDA ?b0
E766 2D 29               CMPA #0x29
E768 2B F8 00            JNE FAIL    ; Jump if result not good
E76B 2A 1F FB            LDA CARRY   ; Read the Carry Status
E76E 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E770 2B F8 00            JNE FAIL    ; Error if different
E773 30 A5               LDA #0xA5
E775 31 00 0F            STA ?b0
E778 15 00 0F            SRL ?b0
E77B 15 00 0F            SRL ?b0
E77E 15 00 0F            SRL ?b0
E781 2A 00 0F            LDA ?b0
E784 2D 14               CMPA #0x14
E786 2B F8 00            JNE FAIL    ; Jump if result not good
E789 2A 1F FB            LDA CARRY   ; Read the Carry Status
E78C 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E78E 2B F8 00            JNE FAIL    ; Error if different
E791 30 A5               LDA #0xA5
E793 31 00 0F            STA ?b0
E796 15 00 0F            SRL ?b0
E799 15 00 0F            SRL ?b0
E79C 15 00 0F            SRL ?b0
E79F 15 00 0F            SRL ?b0
E7A2 2A 00 0F            LDA ?b0
E7A5 2D 0A               CMPA #0x0A
E7A7 2B F8 00            JNE FAIL    ; Jump if result not good
E7AA 2A 1F FB            LDA CARRY   ; Read the Carry Status
E7AD 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E7AF 2B F8 00            JNE FAIL    ; Error if different
E7B2 30 A5               LDA #0xA5
E7B4 31 00 0F            STA ?b0
E7B7 15 00 0F            SRL ?b0
E7BA 15 00 0F            SRL ?b0
E7BD 15 00 0F            SRL ?b0
E7C0 15 00 0F            SRL ?b0
E7C3 15 00 0F            SRL ?b0
E7C6 2A 00 0F            LDA ?b0
E7C9 2D 05               CMPA #0x05
E7CB 2B F8 00            JNE FAIL    ; Jump if result not good
E7CE 2A 1F FB            LDA CARRY   ; Read the Carry Status
E7D1 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E7D3 2B F8 00            JNE FAIL    ; Error if different
E7D6 30 A5               LDA #0xA5
E7D8 31 00 0F            STA ?b0
E7DB 15 00 0F            SRL ?b0
E7DE 15 00 0F            SRL ?b0
E7E1 15 00 0F            SRL ?b0
E7E4 15 00 0F            SRL ?b0
E7E7 15 00 0F            SRL ?b0
E7EA 15 00 0F            SRL ?b0
E7ED 2A 00 0F            LDA ?b0
E7F0 2D 02               CMPA #0x02
E7F2 2B F8 00            JNE FAIL    ; Jump if result not good
E7F5 2A 1F FB            LDA CARRY   ; Read the Carry Status
E7F8 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E7FA 2B F8 00            JNE FAIL    ; Error if different
E7FD 30 A5               LDA #0xA5
E7FF 31 00 0F            STA ?b0
E802 15 00 0F            SRL ?b0
E805 15 00 0F            SRL ?b0
E808 15 00 0F            SRL ?b0
E80B 15 00 0F            SRL ?b0
E80E 15 00 0F            SRL ?b0
E811 15 00 0F            SRL ?b0
E814 15 00 0F            SRL ?b0
E817 2A 00 0F            LDA ?b0
E81A 2D 01               CMPA #0x01
E81C 2B F8 00            JNE FAIL    ; Jump if result not good
E81F 2A 1F FB            LDA CARRY   ; Read the Carry Status
E822 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E824 2B F8 00            JNE FAIL    ; Error if different
E827 30 A5               LDA #0xA5
E829 31 00 0F            STA ?b0
E82C 15 00 0F            SRL ?b0
E82F 15 00 0F            SRL ?b0
E832 15 00 0F            SRL ?b0
E835 15 00 0F            SRL ?b0
E838 15 00 0F            SRL ?b0
E83B 15 00 0F            SRL ?b0
E83E 15 00 0F            SRL ?b0
E841 15 00 0F            SRL ?b0
E844 2A 00 0F            LDA ?b0
E847 2D 00               CMPA #0x00
E849 2B F8 00            JNE FAIL    ; Jump if result not good
E84C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E84F 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E851 2B F8 00            JNE FAIL    ; Error if different
E854 30 A5               LDA #0xA5
E856 31 00 0F            STA ?b0
E859 15 00 0F            SRL ?b0
E85C 15 00 0F            SRL ?b0
E85F 15 00 0F            SRL ?b0
E862 15 00 0F            SRL ?b0
E865 15 00 0F            SRL ?b0
E868 15 00 0F            SRL ?b0
E86B 15 00 0F            SRL ?b0
E86E 15 00 0F            SRL ?b0
E871 15 00 0F            SRL ?b0
E874 2A 00 0F            LDA ?b0
E877 2D 00               CMPA #0x00
E879 2B F8 00            JNE FAIL    ; Jump if result not good
E87C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E87F 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E881 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.16 STX
                         ; --------------------------------------------------------------------

                         ; --------------------------------------------------------------------
                         ; OP.17 ORA #0x**   LOGICAL OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E884 30 17      TSTOP17  LDA #0x17
E886 19                  NOTA
E887 31 C0 00            STA LEDPORT ; Output to LED port
E88A 30 FF               LDA #0xFF
E88C 17 FF               ORA #0xFF
E88E 2D FF               CMPA #0xFF
E890 2B F8 00            JNE FAIL
E893 30 00               LDA #0x00
E895 17 00               ORA #0x00
E897 2D 00               CMPA #0x00
E899 2B F8 00            JNE FAIL
E89C 30 25               LDA #0x25
E89E 17 D3               ORA #0xD3
E8A0 2D F7               CMPA #0xF7
E8A2 2B F8 00            JNE FAIL
E8A5 30 00               LDA #0x00
E8A7 17 FF               ORA #0xFF
E8A9 2D FF               CMPA #0xFF
E8AB 2B F8 00            JNE FAIL
E8AE 30 FF               LDA #0xFF
E8B0 17 00               ORA #0x00
E8B2 2D FF               CMPA #0xFF
E8B4 2B F8 00            JNE FAIL
E8B7 30 14               LDA #0x14
E8B9 17 C1               ORA #0xC1
E8BB 2D D5               CMPA #0xD5
E8BD 2B F8 00            JNE FAIL
E8C0 30 AA               LDA #0xAA
E8C2 17 55               ORA #0x55
E8C4 2D FF               CMPA #0xFF
E8C6 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.18 XORA #0x**  EXCLUSIVE OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E8C9 30 18      TSTOP18  LDA #0x18
E8CB 19                  NOTA
E8CC 31 C0 00            STA LEDPORT ; Output to LED port
E8CF 30 00               LDA #0x00
E8D1 18 00               XORA #0x00
E8D3 2D 00               CMPA #0x00
E8D5 2B F8 00            JNE FAIL
E8D8 30 00               LDA #0x00
E8DA 18 FF               XORA #0xFF
E8DC 2D FF               CMPA #0xFF
E8DE 2B F8 00            JNE FAIL
E8E1 30 FF               LDA #0xFF
E8E3 18 FF               XORA #0xFF
E8E5 2D 00               CMPA #0x00
E8E7 2B F8 00            JNE FAIL
E8EA 30 FF               LDA #0xFF
E8EC 18 55               XORA #0x55
E8EE 2D AA               CMPA #0xAA
E8F0 2B F8 00            JNE FAIL
E8F3 30 CE               LDA #0xCE
E8F5 18 5A               XORA #0x5A
E8F7 2D 94               CMPA #0x94
E8F9 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.19 NOTA  LOGIC NOT ON REG A
                         ; --------------------------------------------------------------------
E8FC 30 19      TSTOP19  LDA #0x19
E8FE 19                  NOTA
E8FF 31 C0 00            STA LEDPORT ; Output to LED port
E902 30 00               LDA #0x00
E904 19                  NOTA
E905 2D FF               CMPA #0xFF
E907 2B F8 00            JNE FAIL
E90A 19                  NOTA
E90B 2D 00               CMPA #0x00
E90D 2B F8 00            JNE FAIL
E910 30 55               LDA #0x55
E912 19                  NOTA
E913 2D AA               CMPA #0xAA
E915 2B F8 00            JNE FAIL
E918 19                  NOTA
E919 2D 55               CMPA #0x55
E91B 2B F8 00            JNE FAIL
E91E 19                  NOTA
E91F 2D AA               CMPA #0xAA
E921 2B F8 00            JNE FAIL  

                         ; --------------------------------------------------------------------
                         ; OP.29 ADDA 0x****  
                         ; ADD A WITH BYTE AT ADDRESS, C UPDATE
                         ; --------------------------------------------------------------------
E924 30 29      TSTOP29  LDA #0x29
E926 19                  NOTA
E927 31 C0 00            STA LEDPORT ; Output to LED port
E92A 30 5F               LDA #0x5F   ; Store a value in RAM
E92C 31 01 23            STA 0x0123   
E92F 30 63               LDA #0x63
E931 29 01 23            ADDA 0x0123 ; Add to A the byte at address location
E934 2D C2               CMPA #0xC2  ; Check the sum
E936 2B F8 00            JNE FAIL    ; Jump if result not good
E939 2A 1F FB            LDA CARRY   ; Read the Carry Status
E93C 2D 00               CMPA #0x00  ; No carry expected then C should be '0'
E93E 2B F8 00            JNE FAIL    ; Error if carry is set

E941 30 AC               LDA #0xAC   ; Store another value in RAM
E943 31 10 56            STA 0x1056   
E946 30 D9               LDA #0xD9
E948 29 10 56            ADDA 0x1056 ; Add to A the byte at address location
E94B 2D 85               CMPA #0x85  ; Check the sum LSB
E94D 2B F8 00            JNE FAIL    ; Jump if result not as expected
E950 2A 1F FB            LDA CARRY   ; Read the Carry Status
E953 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E955 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.2A LDA 0x****  
                         ; LOAD A WITH BYTE AT ADDRESS Test LDA #0x** instruction 
                         ; --------------------------------------------------------------------
E958 30 2A      TSTOP2A  LDA #0x2A
E95A 19                  NOTA
E95B 31 C0 00            STA LEDPORT ; Output to LED port
E95E 30 AA               LDA #0xAA   ; Load immediate in register A
E960 2D AA               CMPA #0xAA
E962 2B F8 00            JNE FAIL
E965 30 01               LDA #0x01
E967 2D 01               CMPA #0x01
E969 2B F8 00            JNE FAIL
E96C 30 02               LDA #0x02
E96E 2D 02               CMPA #0x02
E970 2B F8 00            JNE FAIL
E973 30 04               LDA #0x04
E975 2D 04               CMPA #0x04
E977 2B F8 00            JNE FAIL
E97A 30 08               LDA #0x08
E97C 2D 08               CMPA #0x08
E97E 2B F8 00            JNE FAIL
E981 30 10               LDA #0x10
E983 2D 10               CMPA #0x10
E985 2B F8 00            JNE FAIL
E988 30 20               LDA #0x20
E98A 2D 20               CMPA #0x20
E98C 2B F8 00            JNE FAIL
E98F 30 40               LDA #0x40
E991 2D 40               CMPA #0x40
E993 2B F8 00            JNE FAIL
E996 30 80               LDA #0x80
E998 2D 80               CMPA #0x80
E99A 2B F8 00            JNE FAIL
E99D 30 55               LDA #0x55
E99F 2D 55               CMPA #0x55
E9A1 2B F8 00            JNE FAIL
E9A4 30 FF               LDA #0xFF
E9A6 2D FF               CMPA #0xFF
E9A8 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2B JNE 0x****  
                         ; JUMP IF E=0
                         ; Only a partial validation because i do not have symbolic address
                         ; processing in the assembler program.
                         ; --------------------------------------------------------------------
E9AB 30 2B      TSTOP2B  LDA #0x2B
E9AD 19                  NOTA
E9AE 31 C0 00            STA LEDPORT ; Output to LED port
E9B1 30 6D               LDA #0x6D   ; Load a value in A
E9B3 2D 6D               CMPA #0x6D  ; Compare with the same value
E9B5 2B F8 00            JNE FAIL    ; Error if values are different
E9B8 30 10               LDA #0x10
E9BA 2D 10               CMPA #0x10
E9BC 2B F8 00            JNE FAIL
E9BF 30 01               LDA #0x01
E9C1 2D 01               CMPA #0x01
E9C3 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2C JEQ 0x****
                         ; JUMP IF E=1
                         ; --------------------------------------------------------------------
E9C6 30 2C      TST2C    LDA #0x2C
E9C8 19                  NOTA
E9C9 31 C0 00            STA LEDPORT ; Output to LED port
E9CC 30 7A               LDA #0x7A   ; Load a value in A
E9CE 2D 28               CMPA #0x28  ; Compare with a different value
E9D0 2C F8 00            JEQ FAIL    ; If appear identical then it's and error
E9D3 30 FE               LDA #0xFE   ; Again with adifference 
E9D5 2D FF               CMPA #0xFF
E9D7 2C F8 00            JEQ FAIL 
E9DA 30 01               LDA #0x01   ; Another with difference
E9DC 2D 10               CMPA #0x10
E9DE 2C F8 00            JEQ FAIL
E9E1 30 AB               LDA #0xAB   ; Now compare when values are identical
E9E3 2D AB               CMPA #0xAB
E9E5 2C E9 EB            JEQ TST2C_1 ; Testing if equal?
E9E8 32 F8 00            JMP FAIL    ; Result say both are not equal then it's a failure
E9EB 30 00      TST2C_1  LDA #0x00   ; Result say the values are identical so we are passing
E9ED 2D 00               CMPA #0x00
E9EF 2C E9 F5            JEQ TST2C_2 ; Testing if equal?
E9F2 32 F8 00            JMP FAIL    ; if different then it's a failure
E9F5 30 01      TST2C_2  LDA #0x01
E9F7 2D 01               CMPA #0x01
E9F9 2C E9 FF            JEQ TST2C_3 ; Testing if equal?
E9FC 32 F8 00            JMP FAIL    ; if different then it's a failure
E9FF 30 02      TST2C_3  LDA #0x02
EA01 2D 02               CMPA #0x02
EA03 2C EA 09            JEQ TST2C_4 ; Testing if equal?
EA06 32 F8 00            JMP FAIL    ; if different then it's a failure
EA09 30 04      TST2C_4  LDA #0x04
EA0B 2D 04               CMPA #0x04
EA0D 2C EA 13            JEQ TST2C_5 ; Testing if equal?
EA10 32 F8 00            JMP FAIL    ; if different then it's a failure
EA13 30 08      TST2C_5  LDA #0x08
EA15 2D 08               CMPA #0x08
EA17 2C EA 1D            JEQ TST2C_6 ; Testing if equal?
EA1A 32 F8 00            JMP FAIL    ; if different then it's a failure
EA1D 30 10      TST2C_6  LDA #0x10
EA1F 2D 10               CMPA #0x10
EA21 2C EA 27            JEQ TST2C_7 ; Testing if equal?
EA24 32 F8 00            JMP FAIL    ; if different then it's a failure
EA27 30 20      TST2C_7  LDA #0x20
EA29 2D 20               CMPA #0x20
EA2B 2C EA 31            JEQ TST2C_8 ; Testing if equal?
EA2E 32 F8 00            JMP FAIL    ; if different then it's a failure         
EA31 30 40      TST2C_8  LDA #0x40
EA33 2D 40               CMPA #0x40
EA35 2C EA 3B            JEQ TST2C_9 ; Testing if equal?
EA38 32 F8 00            JMP FAIL    ; if different then it's a failure         
EA3B 30 80      TST2C_9  LDA #0x80
EA3D 2D 80               CMPA #0x80
EA3F 2C EA 45            JEQ TST2C_10 ; Testing if equal?
EA42 32 F8 00            JMP FAIL    ; if different then it's a failure         
EA45 09         TST2C_10 NOP
                         ; --------------------------------------------------------------------
                         ; OP.2D CMPA #0x**
                         ; COMPARE A WITH IMMEDIATE VALUE    EQUAL STATUS BIT (E) UPDATED
                         ; --------------------------------------------------------------------
EA46 30 2D      TSTOP2D  LDA #0x2D
EA48 19                  NOTA
EA49 31 C0 00            STA LEDPORT ; Output to LED port
EA4C 30 12               LDA #0x12   ; Load a value in A
EA4E 2D 12               CMPA #0x12  ; Compare with identical value
EA50 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS 
EA53 2D 01               CMPA #0x01  ; Verify bit<0> E = '1' and all others bits <7:1> are '0'    
EA55 2B F8 00            JNE FAIL    ; If different then it's and error
EA58 30 AA               LDA #0xAA
EA5A 2D 55               CMPA #0x55  ; Compare with a different value
EA5C 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS
EA5F 2D 00               CMPA #0x00  ; Verify bit<0> E = '0' and all others bits <7:1> are '0'    
EA61 2B F8 00            JNE FAIL    ; If different then it's and error
                         ; --------------------------------------------------------------------
                         ; OP.2E ADCA #0x**
                         ; REG A = REG A + IMMEDIATE BYTE + CARRY (C)   
                         ; CARRY STATUS (C) IS UPDATED
                         ; --------------------------------------------------------------------
EA64 30 2E      TSTOP2E  LDA #0x2E
EA66 19                  NOTA
EA67 31 C0 00            STA LEDPORT ; Output to LED port
EA6A 30 00               LDA #0x00   ; Clear CARRY (C)
EA6C 31 1F FB            STA CARRY      
EA6F 30 45               LDA #0x45
EA71 2E 5B               ADCA #0x5B
EA73 2D A0               CMPA #0xA0  ; Verify summ
EA75 2B F8 00            JNE FAIL
EA78 2A 1F FB            LDA CARRY   ; Check carry
EA7B 2D 00               CMPA #0x00  ; Should be clear
EA7D 2B F8 00            JNE FAIL

EA80 30 01               LDA #0x01   ; Set CARRY (C)
EA82 31 1F FB            STA CARRY
EA85 30 56               LDA #0x56
EA87 2E 6D               ADCA #0x6D
EA89 2D C4               CMPA #0xC4   ; Verify summ
EA8B 2B F8 00            JNE FAIL
EA8E 2A 1F FB            LDA CARRY   ; Check carry
EA91 2D 00               CMPA #0x00  ; Should be clear
EA93 2B F8 00            JNE FAIL

EA96 30 00               LDA #0x00   ; Clear CARRY (C)
EA98 31 1F FB            STA CARRY
EA9B 30 7F               LDA #0x7F
EA9D 2E DE               ADCA #0xDE
EA9F 2D 5D               CMPA #0x5D  ; Verify summ
EAA1 2B F8 00            JNE FAIL
EAA4 2A 1F FB            LDA CARRY   ; Check carry
EAA7 2D 01               CMPA #0x01  ; Should be set
EAA9 2B F8 00            JNE FAIL

EAAC 30 01               LDA #0x01H  ; Set CARRY (C)
EAAE 31 1F FB            STA CARRY
EAB1 30 FF               LDA #0xFF
EAB3 2E FF               ADCA #0xFF
EAB5 2D FF               CMPA #0xFF  ; Verify summ
EAB7 2B F8 00            JNE FAIL
EABA 2A 1F FB            LDA CARRY   ; Check carry
EABD 2D 01               CMPA #0x01  ; Should be set
EABF 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2F ADDA #0x**
                         ; ACCA+M>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
EAC2 30 2F      TSTOP2F  LDA #0x2F
EAC4 19                  NOTA
EAC5 31 C0 00            STA LEDPORT ; Output to LED port
EAC8 30 23               LDA #0x23
EACA 2F 45               ADDA #0x45
EACC 2D 68               CMPA #0x68
EACE 2B F8 00            JNE FAIL
EAD1 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
EAD4 2D 00               CMPA #0x00  ; Expecting C=0
EAD6 2B F8 00            JNE FAIL
EAD9 30 8A               LDA #0x8A
EADB 2F BD               ADDA #0xBD
EADD 2D 47               CMPA #0x47   
EADF 2B F8 00            JNE FAIL
EAE2 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
EAE5 2D 01               CMPA #0x01  ; Expecting C=1
EAE7 2B F8 00            JNE FAIL
EAEA 30 01               LDA #0x01
EAEC 2F 02               ADDA #0x02
EAEE 2D 03               CMPA #0x03
EAF0 2B F8 00            JNE FAIL
EAF3 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
EAF6 2D 00               CMPA #0x00  ; Expecting C=0
EAF8 2B F8 00            JNE FAIL
EAFB 30 FF               LDA #0xFF
EAFD 2F FF               ADDA #0xFF
EAFF 2D FE               CMPA #0xFE
EB01 2B F8 00            JNE FAIL
EB04 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
EB07 2D 01               CMPA #0x01   ; Expecting C=1
EB09 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.30 LDA #0x**  
                         ; LOAD IMMEDIATE VALUE IN REGISTER A
                         ; --------------------------------------------------------------------
EB0C 30 30      TSTOP30  LDA #0x30
EB0E 19                  NOTA
EB0F 31 C0 00            STA LEDPORT ; Output to LED port
EB12 30 00               LDA #0x00
EB14 2D 00               CMPA #0x00
EB16 2B F8 00            JNE FAIL
EB19 30 01               LDA #0x01
EB1B 2D 01               CMPA #0x01
EB1D 2B F8 00            JNE FAIL
EB20 30 02               LDA #0x02
EB22 2D 02               CMPA #0x02
EB24 2B F8 00            JNE FAIL
EB27 30 04               LDA #0x04
EB29 2D 04               CMPA #0x04
EB2B 2B F8 00            JNE FAIL
EB2E 30 08               LDA #0x08
EB30 2D 08               CMPA #0x08
EB32 2B F8 00            JNE FAIL
EB35 30 10               LDA #0x10
EB37 2D 10               CMPA #0x10
EB39 2B F8 00            JNE FAIL
EB3C 30 20               LDA #0x20
EB3E 2D 20               CMPA #0x20
EB40 2B F8 00            JNE FAIL
EB43 30 40               LDA #0x40
EB45 2D 40               CMPA #0x40
EB47 2B F8 00            JNE FAIL
EB4A 30 80               LDA #0x80
EB4C 2D 80               CMPA #0x80
EB4E 2B F8 00            JNE FAIL
EB51 30 55               LDA #0x55
EB53 2D 55               CMPA #0x55
EB55 2B F8 00            JNE FAIL
EB58 30 AA               LDA #0xAA
EB5A 2D AA               CMPA #0xAA
EB5C 2B F8 00            JNE FAIL
EB5F 30 FF               LDA #0xFF
EB61 2D FF               CMPA #0xFF
EB63 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.31 STA 0x**** 
                         ; STORE REG.A TO ADDRESSE
                         ; --------------------------------------------------------------------
EB66 30 31      TSTOP31  LDA #0x31
EB68 19                  NOTA
EB69 31 C0 00            STA LEDPORT ; Output to LED port
EB6C 30 12               LDA #0x12   ; Write to RAM
EB6E 31 00 00            STA 0x0000
EB71 30 23               LDA #0x23
EB73 31 00 01            STA 0x0001
EB76 30 34               LDA #0x34
EB78 31 00 02            STA 0x0002
EB7B 30 45               LDA #0x45
EB7D 31 00 04            STA 0x0004
EB80 30 56               LDA #0x56
EB82 31 00 08            STA 0x0008
EB85 30 67               LDA #0x67
EB87 31 00 10            STA 0x0010
EB8A 30 78               LDA #0x78
EB8C 31 00 20            STA 0x0020
EB8F 30 89               LDA #0x89
EB91 31 00 40            STA 0x0040
EB94 30 AB               LDA #0xAB
EB96 31 00 80            STA 0x0080
EB99 30 BC               LDA #0xBC
EB9B 31 01 00            STA 0x0100
EB9E 30 CD               LDA #0xCD
EBA0 31 02 00            STA 0x0200
EBA3 30 DE               LDA #0xDE
EBA5 31 04 00            STA 0x0400
EBA8 30 22               LDA #0x22
EBAA 31 08 00            STA 0x0800
EBAD 30 33               LDA #0x33
EBAF 31 10 00            STA 0x1000
EBB2 30 44               LDA #0x44
EBB4 31 17 00            STA 0x1700
EBB7 2A 00 00            LDA 0x0000  ; Read from RAM and compare
EBBA 2D 12               CMPA #0x12
EBBC 2B F8 00            JNE FAIL
EBBF 2A 00 01            LDA 0x0001
EBC2 2D 23               CMPA #0x23
EBC4 2B F8 00            JNE FAIL
EBC7 2A 00 02            LDA 0x0002
EBCA 2D 34               CMPA #0x34
EBCC 2B F8 00            JNE FAIL
EBCF 2A 00 04            LDA 0x0004
EBD2 2D 45               CMPA #0x45
EBD4 2B F8 00            JNE FAIL
EBD7 2A 00 08            LDA 0x0008
EBDA 2D 56               CMPA #0x56
EBDC 2B F8 00            JNE FAIL
EBDF 2A 00 10            LDA 0x0010
EBE2 2D 67               CMPA #0x67
EBE4 2B F8 00            JNE FAIL
EBE7 2A 00 20            LDA 0x0020
EBEA 2D 78               CMPA #0x78
EBEC 2B F8 00            JNE FAIL
EBEF 2A 00 40            LDA 0x0040
EBF2 2D 89               CMPA #0x89
EBF4 2B F8 00            JNE FAIL
EBF7 2A 00 80            LDA 0x0080
EBFA 2D AB               CMPA #0xAB
EBFC 2B F8 00            JNE FAIL
EBFF 2A 01 00            LDA 0x0100
EC02 2D BC               CMPA #0xBC
EC04 2B F8 00            JNE FAIL
EC07 2A 02 00            LDA 0x0200
EC0A 2D CD               CMPA #0xCD
EC0C 2B F8 00            JNE FAIL
EC0F 2A 04 00            LDA 0x0400
EC12 2D DE               CMPA #0xDE
EC14 2B F8 00            JNE FAIL
EC17 2A 08 00            LDA 0x0800
EC1A 2D 22               CMPA #0x22
EC1C 2B F8 00            JNE FAIL
EC1F 2A 10 00            LDA 0x1000
EC22 2D 33               CMPA #0x33
EC24 2B F8 00            JNE FAIL
EC27 2A 17 00            LDA 0x1700
EC2A 2D 44               CMPA #0x44
EC2C 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.32 JMP 0x**** 
                         ; JUMP INCONDITIONAL TO ADDRESS
                         ; --------------------------------------------------------------------
                         ;LDA #0x32
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.33 ANDA #0x**  REGISTER A AND LOGICAL IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
EC2F 30 33      TSTOP33  LDA #0x33
EC31 19                  NOTA
EC32 31 C0 00            STA LEDPORT ; Output to LED port
EC35 30 FF               LDA #0xFF
EC37 33 52               ANDA #0x52
EC39 2D 52               CMPA #0x52
EC3B 2B F8 00            JNE FAIL
EC3E 30 E7               LDA #0xE7
EC40 33 3C               ANDA #0x3C
EC42 2D 24               CMPA #0x24
EC44 2B F8 00            JNE FAIL
EC47 30 00               LDA #0x00
EC49 33 00               ANDA #0x00
EC4B 2D 00               CMPA #0x00
EC4D 2B F8 00            JNE FAIL
EC50 30 FF               LDA #0xFF
EC52 33 FF               ANDA #0xFF
EC54 2D FF               CMPA #0xFF
EC56 2B F8 00            JNE FAIL
EC59 30 FF               LDA #0xFF
EC5B 33 55               ANDA #0x55
EC5D 2D 55               CMPA #0x55
EC5F 2B F8 00            JNE FAIL
EC62 30 FF               LDA #0xFF
EC64 33 00               ANDA #0x00
EC66 2D 00               CMPA #0x00
EC68 2B F8 00            JNE FAIL

                         ; --------------------------------------------------------------------
                         ; FIBONACCI TEST
                         ; --------------------------------------------------------------------         
EC6B 30 40      TSTFIBON LDA #0x40
EC6D 19                  NOTA
EC6E 31 C0 00            STA LEDPORT ; Output to LED port
                                     ;
EC71 30 00               LDA #0x00   ; Init first number with 00H
EC73 31 10 00            STA 0x1000
EC76 30 01               LDA #0x01   ; Init second number with 01H
EC78 31 10 01            STA 0x1001
EC7B 2A 10 00            LDA 0x1000  ; Load first number in A
EC7E 29 10 01            ADDA 0x1001 ; Add second number to A
EC81 31 10 02            STA 0x1002  ; Store the summ
EC84 2D 01               CMPA #0x01  ; HEX   Decimal  Real Value (in 8 bit storage only)
EC86 2B F8 00            JNE FAIL    ; x01   1        1

EC89 2A 10 01            LDA 0x1001  ; Move second number to the first number
EC8C 31 10 00            STA 0x1000
EC8F 2A 10 02            LDA 0x1002  ; Move summ to the second number
EC92 31 10 01            STA 0x1001
EC95 2A 10 00            LDA 0x1000  ; Load first number in A
EC98 29 10 01            ADDA 0x1001 ; Add second number to A
EC9B 31 10 02            STA 0x1002  ; Store the summ
EC9E 2D 02               CMPA #0x02  ; HEX   Decimal  Real Value
ECA0 2B F8 00            JNE FAIL    ; x02   2        2

ECA3 2A 10 01            LDA 0x1001  ; Move second number to the first number
ECA6 31 10 00            STA 0x1000
ECA9 2A 10 02            LDA 0x1002   ; Move summ to the second number
ECAC 31 10 01            STA 0x1001
ECAF 2A 10 00            LDA 0x1000  ; Load first number in A
ECB2 29 10 01            ADDA 0x1001 ; Add second number to A
ECB5 31 10 02            STA 0x1002  ; Store the summ
ECB8 2D 03               CMPA #0x03  ; HEX   Decimal  Real Value
ECBA 2B F8 00            JNE FAIL    ; x03   3        3

ECBD 2A 10 01            LDA 0x1001  ; Move second number to the first number
ECC0 31 10 00            STA 0x1000
ECC3 2A 10 02            LDA 0x1002  ; Move summ to the second number
ECC6 31 10 01            STA 0x1001
ECC9 2A 10 00            LDA 0x1000  ; Load first number in A
ECCC 29 10 01            ADDA 0x1001 ; Add second number to A
ECCF 31 10 02            STA 0x1002  ; Store the summ
ECD2 2D 05               CMPA #0x05  ; HEX   Decimal  Real Value
ECD4 2B F8 00            JNE FAIL    ; x05   5        5

ECD7 2A 10 01            LDA 0x1001  ; Move second number to the first number
ECDA 31 10 00            STA 0x1000
ECDD 2A 10 02            LDA 0x1002  ; Move summ to the second number
ECE0 31 10 01            STA 0x1001
ECE3 2A 10 00            LDA 0x1000  ; Load first number in A
ECE6 29 10 01            ADDA 0x1001 ; Add second number to A
ECE9 31 10 02            STA 0x1002  ; Store the summ
ECEC 2D 08               CMPA #0x08  ; HEX   Decimal  Real Value
ECEE 2B F8 00            JNE FAIL    ; x08   8        8

ECF1 2A 10 01            LDA 0x1001  ; Move second number to the first number
ECF4 31 10 00            STA 0x1000
ECF7 2A 10 02            LDA 0x1002  ; Move summ to the second number
ECFA 31 10 01            STA 0x1001
ECFD 2A 10 00            LDA 0x1000  ; Load first number in A
ED00 29 10 01            ADDA 0x1001 ; Add second number to A
ED03 31 10 02            STA 0x1002  ; Store the summ
ED06 2D 0D               CMPA #0x0D  ; HEX   Decimal  Real Value
ED08 2B F8 00            JNE FAIL    ; x0D   13       13

ED0B 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED0E 31 10 00            STA 0x1000
ED11 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED14 31 10 01            STA 0x1001
ED17 2A 10 00            LDA 0x1000  ; Load first number in A
ED1A 29 10 01            ADDA 0x1001 ; Add second number to A
ED1D 31 10 02            STA 0x1002  ; Store the summ
ED20 2D 15               CMPA #0x15  ; HEX   Decimal  Real Value
ED22 2B F8 00            JNE FAIL    ; x15   21       21

ED25 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED28 31 10 00            STA 0x1000
ED2B 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED2E 31 10 01            STA 0x1001
ED31 2A 10 00            LDA 0x1000  ; Load first number in A
ED34 29 10 01            ADDA 0x1001 ; Add second number to A
ED37 31 10 02            STA 0x1002  ; Store the summ
ED3A 2D 22               CMPA #0x22  ; HEX   Decimal  Real Value
ED3C 2B F8 00            JNE FAIL    ; x22   34       34

ED3F 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED42 31 10 00            STA 0x1000
ED45 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED48 31 10 01            STA 0x1001
ED4B 2A 10 00            LDA 0x1000  ; Load first number in A
ED4E 29 10 01            ADDA 0x1001 ; Add second number to A
ED51 31 10 02            STA 0x1002  ; Store the summ
ED54 2D 37               CMPA #0x37  ; HEX   Decimal  Real Value
ED56 2B F8 00            JNE FAIL    ; x37   55       55

ED59 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED5C 31 10 00            STA 0x1000
ED5F 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED62 31 10 01            STA 0x1001
ED65 2A 10 00            LDA 0x1000  ; Load first number in A
ED68 29 10 01            ADDA 0x1001 ; Add second number to A
ED6B 31 10 02            STA 0x1002  ; Store the summ
ED6E 2D 59               CMPA #0x59  ; HEX   Decimal  Real Value
ED70 2B F8 00            JNE FAIL    ; x59   89       89

ED73 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED76 31 10 00            STA 0x1000
ED79 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED7C 31 10 01            STA 0x1001
ED7F 2A 10 00            LDA 0x1000  ; Load first number in A
ED82 29 10 01            ADDA 0x1001 ; Add second number to A
ED85 31 10 02            STA 0x1002  ; Store the summ
ED88 2D 90               CMPA #0x90  ; HEX   Decimal  Real Value
ED8A 2B F8 00            JNE FAIL    ; x90   144      144

ED8D 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED90 31 10 00            STA 0x1000
ED93 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED96 31 10 01            STA 0x1001
ED99 2A 10 00            LDA 0x1000  ; Load first number in A
ED9C 29 10 01            ADDA 0x1001 ; Add second number to A
ED9F 31 10 02            STA 0x1002  ; Store the summ
EDA2 2D E9               CMPA #0xE9  ; HEX   Decimal  Real Value
EDA4 2B F8 00            JNE FAIL    ; xE9   233      233

EDA7 2A 10 01            LDA 0x1001  ; Move second number to the first number
EDAA 31 10 00            STA 0x1000
EDAD 2A 10 02            LDA 0x1002  ; Move summ to the second number
EDB0 31 10 01            STA 0x1001
EDB3 2A 10 00            LDA 0x1000  ; Load first number in A
EDB6 29 10 01            ADDA 0x1001 ; Add second number to A
EDB9 31 10 02            STA 0x1002  ; Store the summ
EDBC 2D 79               CMPA #0x79  ; HEX   Decimal  Real Value
EDBE 2B F8 00            JNE FAIL    ; x79   121      377 - (256*1) = 121

EDC1 2A 10 01            LDA 0x1001  ; Move second number to the first number
EDC4 31 10 00            STA 0x1000
EDC7 2A 10 02            LDA 0x1002  ; Move summ to the second number
EDCA 31 10 01            STA 0x1001
EDCD 2A 10 00            LDA 0x1000  ; Load first number in A
EDD0 29 10 01            ADDA 0x1001 ; Add second number to A
EDD3 31 10 02            STA 0x1002  ; Store the summ
EDD6 2D 62               CMPA #0x62  ; HEX   Decimal  Real Value
EDD8 2B F8 00            JNE FAIL    ; x62   98       610 - (256*2) = 98

EDDB 2A 10 01            LDA 0x1001  ; Move second number to the first number
EDDE 31 10 00            STA 0x1000
EDE1 2A 10 02            LDA 0x1002  ; Move summ to the second number
EDE4 31 10 01            STA 0x1001
EDE7 2A 10 00            LDA 0x1000  ; Load first number in A
EDEA 29 10 01            ADDA 0x1001 ; Add second number to A
EDED 31 10 02            STA 0x1002  ; Store the summ
EDF0 2D DB               CMPA #0xDB  ; HEX   Decimal  Real Value
EDF2 2B F8 00            JNE FAIL    ; xDB   219      987 - (256*3) = 219         

                         ; --------------------------------------------------------------------      
                         ; END OF FIBONACCI TEST
                         ; --------------------------------------------------------------------      

                         ; ---------
                         ; Loop test
                         ; ---------
EDF5 30 41      LOOPTST  LDA #0x41
EDF7 19                  NOTA
EDF8 31 C0 00            STA LEDPORT    ; Output to LED port
EDFB 30 05               LDA #0x05      ; Init a counter of iterations
EDFD 31 00 0F            STA ?b0
EE00 2A 00 0F   LOOPTST1 LDA ?b0        ; Read counter
EE03 2D 00               CMPA #0x00     ; Is it 0?
EE05 2C EE 0F            JEQ LOOPTST2   ; Yes then it's the end fo the test
EE08 2F FF               ADDA #0xFF     ; Add -1 in complement 2 (equivalent to decrement)
EE0A 31 00 0F            STA ?b0        ; Save decremented count
EE0D 0C F1               JRA LOOPTST1
EE0F 09         LOOPTST2 NOP            ; End of decrement loop         

                         ; -----------------
                         ; Math Library Test
                         ; -----------------
                         ; Test add16_w0_w0_w1  w0 <= w0 + w1
EE10 30 42               LDA #0x42
EE12 19                  NOTA
EE13 31 C0 00            STA LEDPORT ; Output to LED port
EE16 30 BE               LDA #0xBE   ; w0 = 0xBEEF
EE18 31 00 0E            STA ?b1
EE1B 30 EF               LDA #0xEF
EE1D 31 00 0F            STA ?b0
EE20 30 DE               LDA #0xDE   ; w1 = 0xDEAD
EE22 31 00 0C            STA ?b3
EE25 30 AD               LDA #0xAD
EE27 31 00 0D            STA ?b2
EE2A 06 F0 93            JSR ?add16_w0_w0_w1  ; w0 <= w0 + w1
EE2D 2A 00 0E            LDA ?b1              ; Expected w0 = 9D9C + C set
EE30 2D 9D               CMPA #0x9D
EE32 2B F8 00            JNE FAIL
EE35 2A 00 0F            LDA ?b0
EE38 2D 9C               CMPA #0x9C
EE3A 2B F8 00            JNE FAIL
EE3D 2A 1F FB            LDA CARRY
EE40 2D 01               CMPA #0x01
EE42 2B F8 00            JNE FAIL

                         ; Test add32_l0_l0_l1  l0 <= l0 + l1
EE45 30 43               LDA #0x43
EE47 19                  NOTA
EE48 31 C0 00            STA LEDPORT ; Output to LED port
EE4B 30 89               LDA #0x89   ; l0 = 0x89ABCDEF
EE4D 31 00 0C            STA ?b3
EE50 30 AB               LDA #0xAB
EE52 31 00 0D            STA ?b2
EE55 30 CD               LDA #0xCD
EE57 31 00 0E            STA ?b1
EE5A 30 EF               LDA #0xEF
EE5C 31 00 0F            STA ?b0
EE5F 30 DE               LDA #0xDE   ; l1 = DEADBEEF
EE61 31 00 08            STA ?b7
EE64 30 AD               LDA #0xAD
EE66 31 00 09            STA ?b6
EE69 30 BE               LDA #0xBE
EE6B 31 00 0A            STA ?b5
EE6E 30 EF               LDA #0xEF
EE70 31 00 0B            STA ?b4
EE73 06 F0 A6            JSR ?add32_l0_l0_l1  ; l0 <= l0 + l1
EE76 2A 00 0C            LDA ?b3              ; Expected l0 = 0x68598CDE + C set
EE79 2D 68               CMPA #0x68
EE7B 2B F8 00            JNE FAIL
EE7E 2A 00 0D            LDA ?b2
EE81 2D 59               CMPA #0x59
EE83 2B F8 00            JNE FAIL
EE86 2A 00 0E            LDA ?b1
EE89 2D 8C               CMPA #0x8C
EE8B 2B F8 00            JNE FAIL
EE8E 2A 00 0F            LDA ?b0
EE91 2D DE               CMPA #0xDE
EE93 2B F8 00            JNE FAIL
EE96 2A 1F FB            LDA CARRY
EE99 2D 01               CMPA #0x01
EE9B 2B F8 00            JNE FAIL

                         ; Test ?inc32_l0_l0   l0 <= l0 + 1
EE9E 30 44               LDA #0x44
EEA0 19                  NOTA
EEA1 31 C0 00            STA LEDPORT ; Output to LED port
EEA4 30 FF               LDA #0xFF   ; l0 = 0xFFFFFFFF
EEA6 31 00 0C            STA ?b3
EEA9 30 FF               LDA #0xFF
EEAB 31 00 0D            STA ?b2
EEAE 30 FF               LDA #0xFF
EEB0 31 00 0E            STA ?b1
EEB3 30 FF               LDA #0xFF
EEB5 31 00 0F            STA ?b0
EEB8 06 F0 CB            JSR ?inc32_l0_l0  ; l0 <= l0 + 1
                         ; Expected l0 = 0x00000000
EEBB 2A 00 0C            LDA ?b3     ; Expected l0 = 0x00000000
EEBE 2D 00               CMPA #0x00
EEC0 2B F8 00            JNE FAIL
EEC3 2A 00 0D            LDA ?b2
EEC6 2D 00               CMPA #0x00
EEC8 2B F8 00            JNE FAIL
EECB 2A 00 0E            LDA ?b1
EECE 2D 00               CMPA #0x00
EED0 2B F8 00            JNE FAIL
EED3 2A 00 0F            LDA ?b0
EED6 2D 00               CMPA #0x00
EED8 2B F8 00            JNE FAIL
EEDB 06 F0 CB            JSR ?inc32_l0_l0  ; l0 <= l0 + 1
EEDE 2A 00 0C            LDA ?b3
EEE1 2D 00               CMPA #0x00
EEE3 2B F8 00            JNE FAIL
EEE6 2A 00 0D            LDA ?b2
EEE9 2D 00               CMPA #0x00
EEEB 2B F8 00            JNE FAIL
EEEE 2A 00 0E            LDA ?b1
EEF1 2D 00               CMPA #0x00
EEF3 2B F8 00            JNE FAIL
EEF6 2A 00 0F            LDA ?b0
EEF9 2D 01               CMPA #0x01
EEFB 2B F8 00            JNE FAIL
EEFE 06 F0 CB            JSR ?inc32_l0_l0
EF01 06 F0 CB            JSR ?inc32_l0_l0
EF04 06 F0 CB            JSR ?inc32_l0_l0
EF07 06 F0 CB            JSR ?inc32_l0_l0
EF0A 06 F0 CB            JSR ?inc32_l0_l0
EF0D 06 F0 CB            JSR ?inc32_l0_l0
EF10 06 F0 CB            JSR ?inc32_l0_l0
EF13 06 F0 CB            JSR ?inc32_l0_l0
EF16 06 F0 CB            JSR ?inc32_l0_l0
EF19 06 F0 CB            JSR ?inc32_l0_l0
EF1C 06 F0 CB            JSR ?inc32_l0_l0
EF1F 06 F0 CB            JSR ?inc32_l0_l0
EF22 06 F0 CB            JSR ?inc32_l0_l0
EF25 06 F0 CB            JSR ?inc32_l0_l0
EF28 06 F0 CB            JSR ?inc32_l0_l0
EF2B 06 F0 CB            JSR ?inc32_l0_l0
EF2E 06 F0 CB            JSR ?inc32_l0_l0
EF31 2A 00 0C            LDA ?b3
EF34 2D 00               CMPA #0x00
EF36 2B F8 00            JNE FAIL
EF39 2A 00 0D            LDA ?b2
EF3C 2D 00               CMPA #0x00
EF3E 2B F8 00            JNE FAIL
EF41 2A 00 0E            LDA ?b1
EF44 2D 00               CMPA #0x00
EF46 2B F8 00            JNE FAIL
EF49 2A 00 0F            LDA ?b0
EF4C 2D 12               CMPA #0x12
EF4E 2B F8 00            JNE FAIL

                         ; Test  MUL 8-bit
                         ; mul8_w1_b1_b0   w1 (b3,b2) <= b1 * b0
EF51 30 45               LDA #0x45
EF53 19                  NOTA
EF54 31 C0 00            STA LEDPORT ; Output to LED port
EF57 30 02               LDA #0x02   ; 3 * 2 = 6
EF59 31 00 0F            STA ?b0
EF5C 30 03               LDA #0x03
EF5E 31 00 0E            STA ?b1
EF61 06 F0 F1            JSR ?mul8_w1_b1_b0
EF64 2A 00 0C            LDA ?b3
EF67 2D 00               CMPA #0x00
EF69 2B F8 00            JNE FAIL
EF6C 2A 00 0D            LDA ?b2
EF6F 2D 06               CMPA #0x06
EF71 2B F8 00            JNE FAIL

EF74 30 FF               LDA #0xFF   ; 255 * 255 = 65025 (0xFF * 0xFF = 0xFE01)
EF76 31 00 0F            STA ?b0
EF79 31 00 0E            STA ?b1
EF7C 06 F0 F1            JSR ?mul8_w1_b1_b0
EF7F 2A 00 0C            LDA ?b3
EF82 2D FE               CMPA #0xFE
EF84 2B F8 00            JNE FAIL
EF87 2A 00 0D            LDA ?b2
EF8A 2D 01               CMPA #0x01
EF8C 2B F8 00            JNE FAIL

EF8F 30 AB               LDA #0xAB   ; 171 * 205 = 35055 (0xAB * 0xCD = 0x88EF)
EF91 31 00 0F            STA ?b0
EF94 30 CD               LDA #0xCD
EF96 31 00 0E            STA ?b1
EF99 06 F0 F1            JSR ?mul8_w1_b1_b0
EF9C 2A 00 0C            LDA ?b3
EF9F 2D 88               CMPA #0x88
EFA1 2B F8 00            JNE FAIL
EFA4 2A 00 0D            LDA ?b2
EFA7 2D EF               CMPA #0xEF
EFA9 2B F8 00            JNE FAIL

EFAC 30 00               LDA #0x00   ; 0 * 0 = 0 (0x00 * 0x00 = 0x0000)
EFAE 31 00 0F            STA ?b0
EFB1 31 00 0E            STA ?b1
EFB4 06 F0 F1            JSR ?mul8_w1_b1_b0
EFB7 2A 00 0C            LDA ?b3
EFBA 2D 00               CMPA #0x00
EFBC 2B F8 00            JNE FAIL
EFBF 2A 00 0D            LDA ?b2
EFC2 2D 00               CMPA #0x00
EFC4 2B F8 00            JNE FAIL

                         ; Test  MUL 16-bit
                         ; Total time for 3 multiplications 140ms @ 2 MHz
                         ; 46ms per 16bit mult (21.7 multiplications per second)
                         ; l1 <= w1 * w0      (b7,b6,b5,b4) = (b3,b2) * (b1,b0)
EFC7 30 46               LDA #0x46
EFC9 19                  NOTA
EFCA 31 C0 00            STA LEDPORT ; Output to LED port

EFCD 30 00               LDA #0x00   ; 0 * 0 = 0 (0x0000 * 0x0000 = 0x00000000)
EFCF 31 00 0F            STA ?b0
EFD2 31 00 0E            STA ?b1
EFD5 31 00 0D            STA ?b2
EFD8 31 00 0C            STA ?b3
EFDB 06 F1 12            JSR ?mul16_l1_w1_w0
EFDE 2A 00 08            LDA ?b7
EFE1 2D 00               CMPA #0x00
EFE3 2B F8 00            JNE FAIL
EFE6 2A 00 09            LDA ?b6
EFE9 2D 00               CMPA #0x00
EFEB 2B F8 00            JNE FAIL
EFEE 2A 00 0A            LDA ?b5
EFF1 2D 00               CMPA #0x00
EFF3 2B F8 00            JNE FAIL
EFF6 2A 00 0B            LDA ?b4
EFF9 2D 00               CMPA #0x00
EFFB 2B F8 00            JNE FAIL

EFFE 30 FF               LDA #0xFF   ; 65535 * 65535 = 4294836225  (0xFFFF * 0xFFFF = 0xFFFE0001)
F000 31 00 0F            STA ?b0
F003 31 00 0E            STA ?b1
F006 31 00 0D            STA ?b2
F009 31 00 0C            STA ?b3
F00C 06 F1 12            JSR ?mul16_l1_w1_w0
F00F 2A 00 08            LDA ?b7
F012 2D FF               CMPA #0xFF
F014 2B F8 00            JNE FAIL
F017 2A 00 09            LDA ?b6
F01A 2D FE               CMPA #0xFE
F01C 2B F8 00            JNE FAIL
F01F 2A 00 0A            LDA ?b5
F022 2D 00               CMPA #0x00
F024 2B F8 00            JNE FAIL
F027 2A 00 0B            LDA ?b4
F02A 2D 01               CMPA #0x01
F02C 2B F8 00            JNE FAIL

F02F 30 31               LDA #0x31   ; 12345 * 54321 = 670592745  (0x3039 * 0xD431 = 0x27F86EE9)
F031 31 00 0F            STA ?b0
F034 30 D4               LDA #0xD4
F036 31 00 0E            STA ?b1
F039 30 39               LDA #0x39
F03B 31 00 0D            STA ?b2
F03E 30 30               LDA #0x30
F040 31 00 0C            STA ?b3
F043 06 F1 12            JSR ?mul16_l1_w1_w0   
F046 2A 00 08            LDA ?b7
F049 2D 27               CMPA #0x27
F04B 2B F8 00            JNE FAIL
F04E 2A 00 09            LDA ?b6
F051 2D F8               CMPA #0xF8
F053 2B F8 00            JNE FAIL
F056 2A 00 0A            LDA ?b5
F059 2D 6E               CMPA #0x6E
F05B 2B F8 00            JNE FAIL
F05E 2A 00 0B            LDA ?b4
F061 2D E9               CMPA #0xE9
F063 2B F8 00            JNE FAIL  

                         ; ---------------------
                         ; END Math Library Test
                         ; ---------------------

                         ; Test code execution from ram
                         ; Copy a block of code from EEPROM to RAM
                         ; then call to execute this block in RAM. Resume execution from EEPROM
F066 30 47               LDA #0x47
F068 19                  NOTA
F069 31 C0 00            STA LEDPORT ; Output to LED port
F06C 32 F0 8D            JMP BLKCODEEND   ; We skip the nex block of code to be copied in RAM
                               ; Simple 8 bit multiplication test code
F06F 30 56      BLKCODESTART   LDA #0x56   ; 86 * 171 = 14706   (0x56 * 0xAB = 0x3972)
F071 31 00 0F                  STA ?b0
F074 30 AB                     LDA #0xAB
F076 31 00 0E                  STA ?b1
F079 06 F0 F1                  JSR ?mul8_w1_b1_b0
F07C 2A 00 0C                  LDA ?b3
F07F 2D 39                     CMPA #0x39
F081 2B F8 00                  JNE FAIL
F084 2A 00 0D                  LDA ?b2
F087 2D 72                     CMPA #0x72
F089 2B F8 00                  JNE FAIL
F08C 07                        RTS
                               ; Copy the Block of code from EEPROM to RAM
F08D 04 F0 6F   BLKCODEEND     LDX #BLKCODESTART  ; Load address of BLKCODESTART
                               ;STX ?b1


F090 32 E0 00            JMP 0xE000  ; Loop from start of diag test

                         ; ---------------------
                         ; Math library routines
                         ; ---------------------
                         ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |    ?w5      ?w4   |   ?w3     ?w2   |   ?w1     ?w0   | 16 bits
                ;         ?l3         |         ?l2       |       ?l1       |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                                  ; Addition on 16 bits  
                                  ; w0 <= w0 + w1
F093 2A 00 0F   ?add16_w0_w0_w1   LDA ?b0  
F096 29 00 0D                     ADDA ?b2
F099 31 00 0F                     STA ?b0
F09C 2A 00 0E                     LDA ?b1
F09F 28 00 0C                     ADCA ?b3
F0A2 31 00 0E                     STA ?b1
F0A5 07                           RTS

                                  ; Addition on 32 bits
                                  ; l0 <= l0 + l1
F0A6 2A 00 0F   ?add32_l0_l0_l1   LDA ?b0  
F0A9 29 00 0B                     ADDA ?b4
F0AC 31 00 0F                     STA ?b0
F0AF 2A 00 0E                     LDA ?b1
F0B2 28 00 0A                     ADCA ?b5
F0B5 31 00 0E                     STA ?b1
F0B8 2A 00 0D                     LDA ?b2
F0BB 28 00 09                     ADCA ?b6
F0BE 31 00 0D                     STA ?b2
F0C1 2A 00 0C                     LDA ?b3
F0C4 28 00 08                     ADCA ?b7
F0C7 31 00 0C                     STA ?b3
F0CA 07                           RTS

                                  ; INC 32 bit
                                  ; l0 <= l0 + 1
F0CB 2A 00 0F   ?inc32_l0_l0      LDA ?b0
F0CE 03                           INCA
F0CF 31 00 0F                     STA ?b0
F0D2 2B F0 F0                     JNE ?inc32_0x_0x_JP
F0D5 2A 00 0E                     LDA ?b1
F0D8 03                           INCA
F0D9 31 00 0E                     STA ?b1
F0DC 2B F0 F0                     JNE ?inc32_0x_0x_JP
F0DF 2A 00 0D                     LDA ?b2
F0E2 03                           INCA
F0E3 31 00 0D                     STA ?b2
F0E6 2B F0 F0                     JNE ?inc32_0x_0x_JP
F0E9 2A 00 0C                     LDA ?b3
F0EC 03                           INCA
F0ED 31 00 0C                     STA ?b3
F0F0 07         ?inc32_0x_0x_JP   RTS

                                  ; MUL 8-bit
                                  ; w1 (b3,b2) <= b1 * b0
F0F1 30 00      ?mul8_w1_b1_b0    LDA #0x00   ; Only clear ?b3
F0F3 31 00 0C                     STA ?b3
F0F6 04 00 08                     LDX #0x0008 ; Loop counter (8 bits)
F0F9 15 00 0F   ?mul8_w1_b1_loop  SRL ?b0     ; Shift right ?b0 (check LSB)
F0FC 0F 09                        JRNC ?mul8_skip_add  ; Conditional relative jump if not Carry ( If LSB was 0, skip addition)
F0FE 2A 00 0C                     LDA ?b3
F101 29 00 0E                     ADDA ?b1    ; Add multiplicand
F104 31 00 0C                     STA ?b3     ; Store back
F107 14 00 0C   ?mul8_skip_add    RRC ?b3     ; Shift right ?b3 ?b2   C -> 7 6 5 4 3 2 1 0 -> C
F10A 14 00 0D                     RRC ?b2     ;                       C -> 7 6 5 4 3 2 1 0 -> C
F10D 13                           DECXL       ; Decrement loop counter
F10E 2B F0 F9                     JNE ?mul8_w1_b1_loop
F111 07                           RTS

                                  ; MUL 16-bit
                                  ; l1 <= w1 * w0      (b7,b6,b5,b4) = (b3,b2) * (b1,b0)
F112 30 00      ?mul16_l1_w1_w0   LDA #0x00   ; Only clear ?b7 and ?b6
F114 31 00 08                     STA ?b7
F117 31 00 09                     STA ?b6
F11A 04 00 10                     LDX #0x0010 ; Loop counter (16 bits)
F11D 15 00 0E   ?mul16_l1_w1_loop SRL ?b1     ; Shift right ?w0 (check LSB)  '0' -> 7 6 5 4 3 2 1 0 -> C
F120 14 00 0F                     RRC ?b0     ; C  -> 7 6 5 4 3 2 1 0 -> C
F123 0F 12                        JRNC ?mul16_skip_add  ; Conditional relative jump if not Carry ( If LSB was 0, skip addition)
F125 2A 00 09                     LDA ?b6
F128 29 00 0D                     ADDA ?b2    ; Add multiplicand
F12B 31 00 09                     STA ?b6     ; Store back
F12E 2A 00 08                     LDA ?b7
F131 28 00 0C                     ADCA ?b3
F134 31 00 08                     STA ?b7
F137 14 00 08   ?mul16_skip_add   RRC ?b7     ; Shift right ?b7 ?b6 ?b5 ?b4   C -> 7 6 5 4 3 2 1 0 -> C 
F13A 14 00 09                     RRC ?b6     ;                               C -> 7 6 5 4 3 2 1 0 -> C
F13D 14 00 0A                     RRC ?b5
F140 14 00 0B                     RRC ?b4
F143 13                           DECXL       ; Decrement loop counter
F144 2B F1 1D                     JNE ?mul16_l1_w1_loop
F147 07                           RTS

                         ; --------------------------------------------------------------------
                         ; Error routine
                         ; --------------------------------------------------------------------
                         ORG/0xF800  ; Diagnostic Error routine   
                         ;STOP        ; Stop execution
F800 32 F8 00   FAIL     JMP FAIL    ; Infinite Loop on error

                         ; --------------------------------------------------------------------
                         ; JSR and RTS Test subroutine
                         ; --------------------------------------------------------------------
                         ORG/0xFFC0
FFC0 30 11      TJSR1    LDA #0x11
FFC2 07                  RTS
                         ORG/0xFFC3
FFC3 30 22      TJSR2    LDA #0x22
FFC5 06 FF C0            JSR TJSR1
FFC8 07                  RTS
                         ORG/0xFFC9
FFC9 30 33      TJSR3    LDA #0x33
FFCB 06 FF C3            JSR TJSR2
FFCE 07                  RTS
                         ORG/0xFFCF
FFCF 30 44      TJSR4    LDA #0x44
FFD1 06 FF C9            JSR TJSR3
FFD4 07                  RTS
                         ORG/0xFFD5
FFD5 30 44      TJSR5    LDA #0x44
FFD7 06 FF CF            JSR TJSR4
FFDA 07                  RTS
                         ORG/0xFFDB
FFDB 30 55      TJSR6    LDA #0x55
FFDD 06 FF D5            JSR TJSR5
FFE0 07                  RTS
                         ORG/0xFFE1
FFE1 30 66      TJSR7    LDA #0x66
FFE3 06 FF DB            JSR TJSR6
FFE6 07                  RTS
                         ORG/0xFFE7
FFE7 30 77      TJSR8    LDA #0x77
FFE9 06 FF E1            JSR TJSR7
FFEC 07                  RTS
                         ORG/0xFFED
FFED 30 88      TJSR9    LDA #0x88
FFEF 06 FF E7            JSR TJSR8
FFF2 07                  RTS
                         ORG/0xFFF3
FFF3 30 99      TJSR10   LDA #0x99
FFF5 06 FF ED            JSR TJSR9
FFF8 07                  RTS
                         ; --------------------------------------------------------------------
                         ; Reset Vector
                         ; --------------------------------------------------------------------
                         ORG/0xFFFE  ; Set the Reset vector
FFFE E0                  DB 0xE0     ; MSB Reset Vector
FFFF 00                  DB 0x00     ; LSB Reset Vector


Symbol Table:
?b15                0000
?b14                0001
?b13                0002
?b12                0003
?b11                0004
?b10                0005
?b9                 0006
?b8                 0007
?b7                 0008
?b6                 0009
?b5                 000A
?b4                 000B
?b3                 000C
?b2                 000D
?b1                 000E
?b0                 000F
?w7                 0000
?w6                 0002
?w5                 0004
?w4                 0006
?w3                 0008
?w2                 000A
?w1                 000C
?w0                 000E
?l3                 0000
?l2                 0004
?l1                 0008
?l0                 000C
SP                  1FF0
JSH                 1FF1
JSL                 1FF2
XH                  1FF3
XL                  1FF4
EQUAL               1FFA
CARRY               1FFB
REG_A               1FFC
IPH                 1FFE
IPL                 1FFF
LEDPORT             C000
START               E000
TST01               E006
TST02               E033
TSTOP03             E060
TSTOP04             E0F7
TSTOP05             E149
TSTOP06             E1C1
TSTOP09             E1E5
TSTOP0A             E1EE
TSTOP0B             E22C
TST0B_0             E288
TST0B_1             E28B
TST0B_2             E28F
TST0B_3             E294
TST0B_4             E29B
TST0B_5             E2AD
TST0B_6             E2B2
TST0B_7             E2C8
TST0B_8             E2CF
TST0B_9             E2D1
TST0B_10            E2D3
TST0B_11            E2E8
TST0B_12            E365
TST0B_13            E368
TSTOP0D             E369
TSTOP0E             E423
TSTOP0F             E4DD
TST0F_0             E4ED
TST0F_1             E4F7
TST0F_2             E4FA
TSTOP10             E4FB
TSTOP11             E57E
TSTOP12             E5A3
TSTOP13             E5C8
TSTOP14             E65E
TSTOP15             E73A
TSTOP17             E884
TSTOP18             E8C9
TSTOP19             E8FC
TSTOP29             E924
TSTOP2A             E958
TSTOP2B             E9AB
TST2C               E9C6
TST2C_1             E9EB
TST2C_2             E9F5
TST2C_3             E9FF
TST2C_4             EA09
TST2C_5             EA13
TST2C_6             EA1D
TST2C_7             EA27
TST2C_8             EA31
TST2C_9             EA3B
TST2C_10            EA45
TSTOP2D             EA46
TSTOP2E             EA64
TSTOP2F             EAC2
TSTOP30             EB0C
TSTOP31             EB66
TSTOP33             EC2F
TSTFIBON            EC6B
LOOPTST             EDF5
LOOPTST1            EE00
LOOPTST2            EE0F
BLKCODESTART        F06F
BLKCODEEND          F08D
?add16_w0_w0_w1     F093
?add32_l0_l0_l1     F0A6
?inc32_l0_l0        F0CB
?inc32_0x_0x_JP     F0F0
?mul8_w1_b1_b0      F0F1
?mul8_w1_b1_loop    F0F9
?mul8_skip_add      F107
?mul16_l1_w1_w0     F112
?mul16_l1_w1_loop   F11D
?mul16_skip_add     F137
FAIL                F800
TJSR1               FFC0
TJSR2               FFC3
TJSR3               FFC9
TJSR4               FFCF
TJSR5               FFD5
TJSR6               FFDB
TJSR7               FFE1
TJSR8               FFE7
TJSR9               FFED
TJSR10              FFF3
Assembly complete
