; -----------------------------------------------------------------
; Homebrew MyCPU diagnostic program
; Author: Sylvain Fortin
; Date : 31 december 2023
; Documentation : diag.asm is used to test the assembler
;                 instructions of MyCPU.
; Memory map of the computer
; 0000H - 17FFH Total RAM space
; 0000H - 00FFH Stack
; 0100H - 17EF  Free for application
; 1FF0H SP      Stack Pointer 8 bit
; 1FF1H JSH     Temporary storage for JSR MSB address
; 1FF2H JSL          "       "     "   "  LSB    "
; 1FFAH E       bit<0> Equal Status bit
; 1FFBH C       bit<0> Carry Status bit
; 1FFCH A       Register
; 1FFEH IPH	    Instruction Pointer MSB
; 1FFFH IPL          "         "    LSB
; C000H         LED port
; E000H - F000H EEPROM for application program
; -----------------------------------------------------------------
                                     ; 
                         ORG/E000H   ; EEPROM Start
E000 30 00               LDA #00H    ; Clear LED
E002 36                  NOTA
E003 31 C0 00            STA C000H   ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; Test Carry Status bit integrity
                         ; --------------------------------------------------------------------
E006 30 01               LDA #01H
E008 36                  NOTA
E009 31 C0 00            STA C000H   ; Output to LED port
E00C 30 00               LDA #00H
E00E 31 1F FB            STA 1FFBH   ; Write 0 to carry bit <0>
E011 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E014 2D 00               CMPA #00H
E016 2B F8 00            JNE F800H
E019 30 01               LDA #01H
E01B 31 1F FB            STA 1FFBH   ; Write 1 to carry bit <0>
E01E 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E021 2D 01               CMPA #01H
E023 2B F8 00            JNE F800H
E026 30 00               LDA #00H
E028 31 1F FB            STA 1FFBH   ; Write 0 to carry bit <0>
E02B 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E02E 2D 00               CMPA #00H
E030 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; Test Equal Status bit integrity
                         ; --------------------------------------------------------------------
E033 30 02               LDA #02H
E035 36                  NOTA
E036 31 C0 00            STA C000H   ; Output to LED port
E039 30 00               LDA #00H
E03B 31 1F FA            STA 1FFAH   ; Write 0 to Equal Status bit <0>
E03E 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E041 2D 00               CMPA #00H
E043 2B F8 00            JNE F800H
E046 30 01               LDA #01H
E048 31 1F FA            STA 1FFAH   ; Write 1 to Equal Status bit <0>
E04B 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E04E 2D 01               CMPA #01H
E050 2B F8 00            JNE F800H
E053 30 00               LDA #00H
E055 31 1F FA            STA 1FFAH   ; Write 0 to Equal Status bit <0>
E058 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E05B 2D 00               CMPA #00H
E05D 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.06 JSR    Jump to SubRoutine
                         ; --------------------------------------------------------------------
E060 30 06               LDA #06H
E062 36                  NOTA
E063 31 C0 00            STA C000H   ; Output to LED port
E066 06 FF C0            JSR FFC0H   ; 1 layer
E069 06 FF C3            JSR FFC3H   ; 2
E06C 06 FF C9            JSR FFC9H   ; 3
E06F 06 FF CF            JSR FFCFH   ; 4
E072 06 FF D5            JSR FFD5H   ; 5
E075 06 FF DB            JSR FFDBH   ; 6
E078 06 FF E1            JSR FFE1H   ; 7
E07B 06 FF E7            JSR FFE7H   ; 8
E07E 06 FF ED            JSR FFEDH   ; 9
E081 06 FF F3            JSR FFF3H   ; 10
                         ; --------------------------------------------------------------------
                         ; OP.08 STOP
                         ; STOP EXECUTING
                         ; Cannot test here it will stop execution...
                         ; A diagnostic test failure is expected to call this instruction ending 
                         ; program exectution.
                         ; --------------------------------------------------------------------
                         ;LDA #08H
                         ;NOTA
                         ;STA C000H   ; Output to LED port
                         ;STOP
                         ; --------------------------------------------------------------------
                         ; OP.29 ADDA ****H  
                         ; ADD A WITH BYTE AT ADDRESS, C UPDATE
                         ; --------------------------------------------------------------------
E084 30 29               LDA #29H
E086 36                  NOTA
E087 31 C0 00            STA C000H   ; Output to LED port
E08A 30 5F               LDA #5FH    ; Store a value in RAM
E08C 31 01 23            STA 0123H   
E08F 30 63               LDA #63H
E091 29 01 23            ADDA 0123H  ; Add to A the byte at address location
E094 2D C2               CMPA #C2H   ; Check the sum
E096 2B F8 00            JNE F800H   ; Jump if result not good
E099 2A 1F FB            LDA 1FFBH   ; Read the Carry Status
E09C 2D 00               CMPA #00H   ; No carry expected then C should be '0'
E09E 2B F8 00            JNE F800H   ; Error if carry is set

E0A1 30 AC               LDA #ACH    ; Store another value in RAM
E0A3 31 10 56            STA 1056H   
E0A6 30 D9               LDA #D9H
E0A8 29 10 56            ADDA 1056H  ; Add to A the byte at address location
E0AB 2D 85               CMPA #85H   ; Check the sum LSB
E0AD 2B F8 00            JNE F800H   ; Jump if result not as expected
E0B0 2A 1F FB            LDA 1FFBH   ; Read the Carry Status
E0B3 2D 01               CMPA #01H   ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E0B5 2B F8 00            JNE F800H   ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.2A LDA ****H  
                         ; LOAD A WITH BYTE AT ADDRESS Test LDA #**H instruction 
                         ; --------------------------------------------------------------------
E0B8 30 2A               LDA #2AH
E0BA 36                  NOTA
E0BB 31 C0 00            STA C000H   ; Output to LED port
E0BE 30 AA               LDA #AAH    ; Load immediate in register A
E0C0 2D AA               CMPA #AAH
E0C2 2B F8 00            JNE F800H
E0C5 30 01               LDA #01H
E0C7 2D 01               CMPA #01H
E0C9 2B F8 00            JNE F800H
E0CC 30 02               LDA #02H
E0CE 2D 02               CMPA #02H
E0D0 2B F8 00            JNE F800H
E0D3 30 04               LDA #04H
E0D5 2D 04               CMPA #04H
E0D7 2B F8 00            JNE F800H
E0DA 30 08               LDA #08H
E0DC 2D 08               CMPA #08H
E0DE 2B F8 00            JNE F800H
E0E1 30 10               LDA #10H
E0E3 2D 10               CMPA #10H
E0E5 2B F8 00            JNE F800H
E0E8 30 20               LDA #20H
E0EA 2D 20               CMPA #20H
E0EC 2B F8 00            JNE F800H
E0EF 30 40               LDA #40H
E0F1 2D 40               CMPA #40H
E0F3 2B F8 00            JNE F800H
E0F6 30 80               LDA #80H
E0F8 2D 80               CMPA #80H
E0FA 2B F8 00            JNE F800H
E0FD 30 55               LDA #55H
E0FF 2D 55               CMPA #55H
E101 2B F8 00            JNE F800H
E104 30 FF               LDA #FFH
E106 2D FF               CMPA #FFH
E108 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.2B JNE ****H  
                         ; JUMP IF E=0
                         ; Only a partial validation because i do not have symbolic address
                         ; processing in the assembler program.
                         ; --------------------------------------------------------------------
E10B 30 2B               LDA #2BH
E10D 36                  NOTA
E10E 31 C0 00            STA C000H   ; Output to LED port
E111 30 6D               LDA #6DH    ; Load a value in A
E113 2D 6D               CMPA #6DH   ; Compare with the same value
E115 2B F8 00            JNE F800H   ; Error if values are different
E118 30 10               LDA #10H
E11A 2D 10               CMPA #10H
E11C 2B F8 00            JNE F800H
E11F 30 01               LDA #01H
E121 2D 01               CMPA #01H
E123 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.2C JEQ ****H
                         ; JUMP IF E=1
                         ; Partial validation
                         ; --------------------------------------------------------------------
E126 30 2C               LDA #2CH
E128 36                  NOTA
E129 31 C0 00            STA C000H   ; Output to LED port
E12C 30 7A               LDA #7AH    ; Load a value in A
E12E 2D 28               CMPA #28H   ; Compare with a different value
E130 2C F8 00            JEQ F800H   ; If appear identical then it's and error
E133 30 FE               LDA #FEH
E135 2D FF               CMPA #FFH
E137 2C F8 00            JEQ F800H
E13A 30 01               LDA #01H
E13C 2D 10               CMPA #10H
E13E 2C F8 00            JEQ F800H
                         ; --------------------------------------------------------------------
                         ; OP.2D CMPA #**H
                         ; COMPARE A WITH IMMEDIATE VALUE    EQUAL STATUS BIT (E) UPDATED
                         ; --------------------------------------------------------------------
E141 30 2D               LDA #2DH
E143 36                  NOTA
E144 31 C0 00            STA C000H   ; Output to LED port
E147 30 12               LDA #12H    ; Load a value in A
E149 2D 12               CMPA #12H   ; Compare with identical value
E14B 2A 1F FA            LDA 1FFAH   ; Inspect EQUAL STATUS 
E14E 2D 01               CMPA #01H   ; Verify bit<0> E = '1' and all others bits <7:1> are '0'    
E150 2B F8 00            JNE F800H   ; If different then it's and error
E153 30 AA               LDA #AAH
E155 2D 55               CMPA #55H   ; Compare with a different value
E157 2A 1F FA            LDA 1FFAH   ; Inspect EQUAL STATUS
E15A 2D 00               CMPA #00H   ; Verify bit<0> E = '0' and all others bits <7:1> are '0'    
E15C 2B F8 00            JNE F800H   ; If different then it's and error
                         ; --------------------------------------------------------------------
                         ; OP.2E ADCA #**H
                         ; REG A = REG A + IMMEDIATE BYTE + CARRY (C)   
                         ; CARRY STATUS (C) IS UPDATED
                         ; --------------------------------------------------------------------
E15F 30 2E               LDA #2EH
E161 36                  NOTA
E162 31 C0 00            STA C000H   ; Output to LED port
E165 30 00               LDA #00H    ; Clear CARRY (C)
E167 31 1F FB            STA 1FFBH      
E16A 30 45               LDA #45H
E16C 2E 5B               ADCA #5BH
E16E 2D A0               CMPA #A0H   ; Verify summ
E170 2B F8 00            JNE F800H
E173 2A 1F FB            LDA 1FFBH   ; Check carry
E176 2D 00               CMPA #00H   ; Should be clear
E178 2B F8 00            JNE F800H

E17B 30 01               LDA #01H    ; Set CARRY (C)
E17D 31 1F FB            STA 1FFBH
E180 30 56               LDA #56H
E182 2E 6D               ADCA #6DH
E184 2D C4               CMPA #C4H   ; Verify summ
E186 2B F8 00            JNE F800H
E189 2A 1F FB            LDA 1FFBH   ; Check carry
E18C 2D 00               CMPA #00H   ; Should be clear
E18E 2B F8 00            JNE F800H

E191 30 00               LDA #00H    ; Clear CARRY (C)
E193 31 1F FB            STA 1FFBH
E196 30 7F               LDA #7FH
E198 2E DE               ADCA #DEH
E19A 2D 5D               CMPA #5DH   ; Verify summ
E19C 2B F8 00            JNE F800H
E19F 2A 1F FB            LDA 1FFBH   ; Check carry
E1A2 2D 01               CMPA #01H   ; Should be set
E1A4 2B F8 00            JNE F800H

E1A7 30 01               LDA #01H    ; Set CARRY (C)
E1A9 31 1F FB            STA 1FFBH
E1AC 30 FF               LDA #FFH
E1AE 2E FF               ADCA #FFH
E1B0 2D FF               CMPA #FFH   ; Verify summ
E1B2 2B F8 00            JNE F800H
E1B5 2A 1F FB            LDA 1FFBH   ; Check carry
E1B8 2D 01               CMPA #01H   ; Should be set
E1BA 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.2F ADDA #**H
                         ; ACCA+M>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
E1BD 30 2F               LDA #2FH
E1BF 36                  NOTA
E1C0 31 C0 00            STA C000H   ; Output to LED port
E1C3 30 23               LDA #23H
E1C5 2F 45               ADDA #45H
E1C7 2D 68               CMPA #68H
E1C9 2B F8 00            JNE F800H
E1CC 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E1CF 2D 00               CMPA #00H   ; Expecting C=0
E1D1 2B F8 00            JNE F800H
E1D4 30 8A               LDA #8AH
E1D6 2F BD               ADDA #BDH
E1D8 2D 47               CMPA #47H   
E1DA 2B F8 00            JNE F800H
E1DD 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E1E0 2D 01               CMPA #01H   ; Expecting C=1
E1E2 2B F8 00            JNE F800H
E1E5 30 01               LDA #01H
E1E7 2F 02               ADDA #02H
E1E9 2D 03               CMPA #03H
E1EB 2B F8 00            JNE F800H
E1EE 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E1F1 2D 00               CMPA #00H   ; Expecting C=0
E1F3 2B F8 00            JNE F800H
E1F6 30 FF               LDA #FFH
E1F8 2F FF               ADDA #FFH
E1FA 2D FE               CMPA #FEH
E1FC 2B F8 00            JNE F800H
E1FF 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E202 2D 01               CMPA #01H   ; Expecting C=1
E204 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.30 LDA #**H  
                         ; LOAD IMMEDIATE VALUE IN REGISTER A
                         ; --------------------------------------------------------------------
E207 30 30               LDA #30H
E209 36                  NOTA
E20A 31 C0 00            STA C000H   ; Output to LED port
E20D 30 00               LDA #00H
E20F 2D 00               CMPA #00H
E211 2B F8 00            JNE F800H
E214 30 01               LDA #01H
E216 2D 01               CMPA #01H
E218 2B F8 00            JNE F800H
E21B 30 02               LDA #02H
E21D 2D 02               CMPA #02H
E21F 2B F8 00            JNE F800H
E222 30 04               LDA #04H
E224 2D 04               CMPA #04H
E226 2B F8 00            JNE F800H
E229 30 08               LDA #08H
E22B 2D 08               CMPA #08H
E22D 2B F8 00            JNE F800H
E230 30 10               LDA #10H
E232 2D 10               CMPA #10H
E234 2B F8 00            JNE F800H
E237 30 20               LDA #20H
E239 2D 20               CMPA #20H
E23B 2B F8 00            JNE F800H
E23E 30 40               LDA #40H
E240 2D 40               CMPA #40H
E242 2B F8 00            JNE F800H
E245 30 80               LDA #80H
E247 2D 80               CMPA #80H
E249 2B F8 00            JNE F800H
E24C 30 55               LDA #55H
E24E 2D 55               CMPA #55H
E250 2B F8 00            JNE F800H
E253 30 AA               LDA #AAH
E255 2D AA               CMPA #AAH
E257 2B F8 00            JNE F800H
E25A 30 FF               LDA #FFH
E25C 2D FF               CMPA #FFH
E25E 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.31 STA ****H 
                         ; STORE REG.A TO ADDRESSE
                         ; --------------------------------------------------------------------
E261 30 31               LDA #31H
E263 36                  NOTA
E264 31 C0 00            STA C000H   ; Output to LED port
E267 30 12               LDA #12H    ; Write to RAM
E269 31 00 00            STA 0000H
E26C 30 23               LDA #23H
E26E 31 00 01            STA 0001H
E271 30 34               LDA #34H
E273 31 00 02            STA 0002H
E276 30 45               LDA #45H
E278 31 00 04            STA 0004H
E27B 30 56               LDA #56H
E27D 31 00 08            STA 0008H
E280 30 67               LDA #67H
E282 31 00 10            STA 0010H
E285 30 78               LDA #78H
E287 31 00 20            STA 0020H
E28A 30 89               LDA #89H
E28C 31 00 40            STA 0040H
E28F 30 AB               LDA #ABH
E291 31 00 80            STA 0080H
E294 30 BC               LDA #BCH
E296 31 01 00            STA 0100H
E299 30 CD               LDA #CDH
E29B 31 02 00            STA 0200H
E29E 30 DE               LDA #DEH
E2A0 31 04 00            STA 0400H
E2A3 30 22               LDA #22H
E2A5 31 08 00            STA 0800H
E2A8 30 33               LDA #33H
E2AA 31 10 00            STA 1000H
E2AD 30 44               LDA #44H
E2AF 31 17 00            STA 1700H
E2B2 2A 00 00            LDA 0000H   ; Read from RAM and compare
E2B5 2D 12               CMPA #12H
E2B7 2B F8 00            JNE F800H
E2BA 2A 00 01            LDA 0001H
E2BD 2D 23               CMPA #23H
E2BF 2B F8 00            JNE F800H
E2C2 2A 00 02            LDA 0002H
E2C5 2D 34               CMPA #34H
E2C7 2B F8 00            JNE F800H
E2CA 2A 00 04            LDA 0004H
E2CD 2D 45               CMPA #45H
E2CF 2B F8 00            JNE F800H
E2D2 2A 00 08            LDA 0008H
E2D5 2D 56               CMPA #56H
E2D7 2B F8 00            JNE F800H
E2DA 2A 00 10            LDA 0010H
E2DD 2D 67               CMPA #67H
E2DF 2B F8 00            JNE F800H
E2E2 2A 00 20            LDA 0020H
E2E5 2D 78               CMPA #78H
E2E7 2B F8 00            JNE F800H
E2EA 2A 00 40            LDA 0040H
E2ED 2D 89               CMPA #89H
E2EF 2B F8 00            JNE F800H
E2F2 2A 00 80            LDA 0080H
E2F5 2D AB               CMPA #ABH
E2F7 2B F8 00            JNE F800H
E2FA 2A 01 00            LDA 0100H
E2FD 2D BC               CMPA #BCH
E2FF 2B F8 00            JNE F800H
E302 2A 02 00            LDA 0200H
E305 2D CD               CMPA #CDH
E307 2B F8 00            JNE F800H
E30A 2A 04 00            LDA 0400H
E30D 2D DE               CMPA #DEH
E30F 2B F8 00            JNE F800H
E312 2A 08 00            LDA 0800H
E315 2D 22               CMPA #22H
E317 2B F8 00            JNE F800H
E31A 2A 10 00            LDA 1000H
E31D 2D 33               CMPA #33H
E31F 2B F8 00            JNE F800H
E322 2A 17 00            LDA 1700H
E325 2D 44               CMPA #44H
E327 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.32 JMP ****H 
                         ; JUMP INCONDITIONAL TO ADDRESS
                         ; --------------------------------------------------------------------
                         ;LDA #32H
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.33 ANDA #**H  REGISTER A AND LOGICAL IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E32A 30 33               LDA #33H
E32C 36                  NOTA
E32D 31 C0 00            STA C000H   ; Output to LED port
E330 30 FF               LDA #FFH
E332 33 52               ANDA #52H
E334 2D 52               CMPA #52H
E336 2B F8 00            JNE F800H
E339 30 E7               LDA #E7H
E33B 33 3C               ANDA #3CH
E33D 2D 24               CMPA #24H
E33F 2B F8 00            JNE F800H
E342 30 00               LDA #00H
E344 33 00               ANDA #00H
E346 2D 00               CMPA #00H
E348 2B F8 00            JNE F800H
E34B 30 FF               LDA #FFH
E34D 33 FF               ANDA #FFH
E34F 2D FF               CMPA #FFH
E351 2B F8 00            JNE F800H
E354 30 FF               LDA #FFH
E356 33 55               ANDA #55H
E358 2D 55               CMPA #55H
E35A 2B F8 00            JNE F800H
E35D 30 FF               LDA #FFH
E35F 33 00               ANDA #00H
E361 2D 00               CMPA #00H
E363 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.34 ORA #**H   LOGICAL OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E366 30 34               LDA #34H
E368 36                  NOTA
E369 31 C0 00            STA C000H   ; Output to LED port
E36C 30 FF               LDA #FFH
E36E 34 FF               ORA #FFH
E370 2D FF               CMPA #FFH
E372 2B F8 00            JNE F800H
E375 30 00               LDA #00H
E377 34 00               ORA #00H
E379 2D 00               CMPA #00H
E37B 2B F8 00            JNE F800H
E37E 30 25               LDA #25H
E380 34 D3               ORA #D3H
E382 2D F7               CMPA #F7H
E384 2B F8 00            JNE F800H
E387 30 00               LDA #00H
E389 34 FF               ORA #FFH
E38B 2D FF               CMPA #FFH
E38D 2B F8 00            JNE F800H
E390 30 FF               LDA #FFH
E392 34 00               ORA #00H
E394 2D FF               CMPA #FFH
E396 2B F8 00            JNE F800H
E399 30 14               LDA #14H
E39B 34 C1               ORA #C1H
E39D 2D D5               CMPA #D5H
E39F 2B F8 00            JNE F800H
E3A2 30 AA               LDA #AAH
E3A4 34 55               ORA #55H
E3A6 2D FF               CMPA #FFH
E3A8 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.35 XORA #**H  EXCLUSIVE OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E3AB 30 35               LDA #35H
E3AD 36                  NOTA
E3AE 31 C0 00            STA C000H   ; Output to LED port
E3B1 30 00               LDA #00H
E3B3 35 00               XORA #00H
E3B5 2D 00               CMPA #00H
E3B7 2B F8 00            JNE F800H
E3BA 30 00               LDA #00H
E3BC 35 FF               XORA #FFH
E3BE 2D FF               CMPA #FFH
E3C0 2B F8 00            JNE F800H
E3C3 30 FF               LDA #FFH
E3C5 35 FF               XORA #FFH
E3C7 2D 00               CMPA #00H
E3C9 2B F8 00            JNE F800H
E3CC 30 FF               LDA #FFH
E3CE 35 55               XORA #55H
E3D0 2D AA               CMPA #AAH
E3D2 2B F8 00            JNE F800H
E3D5 30 CE               LDA #CEH
E3D7 35 5A               XORA #5AH
E3D9 2D 94               CMPA #94H
E3DB 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.36 NOTA  LOGIC NOT ON REG A
                         ; --------------------------------------------------------------------
E3DE 30 36               LDA #36H
E3E0 36                  NOTA
E3E1 31 C0 00            STA C000H   ; Output to LED port
E3E4 30 00               LDA #00H
E3E6 36                  NOTA
E3E7 2D FF               CMPA #FFH
E3E9 2B F8 00            JNE F800H
E3EC 36                  NOTA
E3ED 2D 00               CMPA #00H
E3EF 2B F8 00            JNE F800H
E3F2 30 55               LDA #55H
E3F4 36                  NOTA
E3F5 2D AA               CMPA #AAH
E3F7 2B F8 00            JNE F800H
E3FA 36                  NOTA
E3FB 2D 55               CMPA #55H
E3FD 2B F8 00            JNE F800H
E400 36                  NOTA
E401 2D AA               CMPA #AAH
E403 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.37 INCA  A = A + 1  INCREMENT REGISTRE A
                         ; NO UPDATE ON C (CARRY)
                         ; --------------------------------------------------------------------
E406 30 37               LDA #37H
E408 36                  NOTA
E409 31 C0 00            STA C000H   ; Output to LED port
E40C 30 00               LDA #00H
E40E 37                  INCA
E40F 2D 01               CMPA #01H
E411 2B F8 00            JNE F800H
E414 30 01               LDA #01H
E416 37                  INCA
E417 2D 02               CMPA #02H
E419 2B F8 00            JNE F800H
E41C 30 7C               LDA #7CH
E41E 37                  INCA
E41F 37                  INCA
E420 37                  INCA
E421 37                  INCA
E422 37                  INCA
E423 37                  INCA
E424 37                  INCA
E425 37                  INCA
E426 37                  INCA
E427 37                  INCA
E428 2D 86               CMPA #86H
E42A 2B F8 00            JNE F800H
E42D 30 FE               LDA #FEH
E42F 37                  INCA
E430 2D FF               CMPA #FFH
E432 2B F8 00            JNE F800H
E435 30 FF               LDA #FFH
E437 37                  INCA
E438 2D 00               CMPA #00H
E43A 2B F8 00            JNE F800H
E43D 30 FF               LDA #FFH
E43F 37                  INCA
E440 37                  INCA
E441 2D 01               CMPA #01H
E443 2B F8 00            JNE F800H
E446 37                  INCA
E447 37                  INCA
E448 37                  INCA
E449 37                  INCA
E44A 2D 05               CMPA #05H
E44C 2B F8 00            JNE F800H
E44F 37                  INCA
E450 37                  INCA
E451 37                  INCA
E452 37                  INCA
E453 37                  INCA
E454 37                  INCA
E455 37                  INCA
E456 37                  INCA
E457 2D 0D               CMPA #0DH
E459 2B F8 00            JNE F800H
E45C 30 00               LDA #00H    ; Test Carry is not updated
E45E 31 1F FB            STA 1FFBH   ; Clear Carry 
E461 30 FF               LDA #FFH
E463 37                  INCA
E464 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E467 2D 00               CMPA #00H   ; Expecting C=0 and <7:1> = 0
E469 2B F8 00            JNE F800H
E46C 30 01               LDA #01H    ; Set Carry 
E46E 31 1F FB            STA 1FFBH   
E471 30 EB               LDA #EBH
E473 37                  INCA
E474 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E477 2D 01               CMPA #01H   ; Expecting C=1 and <7:1> = 0
E479 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; FIBONACCI TEST
                         ; --------------------------------------------------------------------         
E47C 30 FF               LDA #FFH
E47E 36                  NOTA
E47F 31 C0 00            STA C000H   ; Output to LED port
                                     ;
E482 30 00               LDA #00H    ; Init first number with 00H
E484 31 10 00            STA 1000H
E487 30 01               LDA #01H    ; Init second number with 01H
E489 31 10 01            STA 1001H
E48C 2A 10 00            LDA 1000H   ; Load first number in A
E48F 29 10 01            ADDA 1001H  ; Add second number to A
E492 31 10 02            STA 1002H   ; Store the summ
E495 2D 01               CMPA #01H   ; HEX   Decimal  Real Value (in 8 bit storage only)
E497 2B F8 00            JNE F800H   ; 01H   1        1

E49A 2A 10 01            LDA 1001H   ; Move second number to the first number
E49D 31 10 00            STA 1000H
E4A0 2A 10 02            LDA 1002H   ; Move summ to the second number
E4A3 31 10 01            STA 1001H
E4A6 2A 10 00            LDA 1000H   ; Load first number in A
E4A9 29 10 01            ADDA 1001H  ; Add second number to A
E4AC 31 10 02            STA 1002H   ; Store the summ
E4AF 2D 02               CMPA #02H   ; HEX   Decimal  Real Value
E4B1 2B F8 00            JNE F800H   ; 02H   2        2

E4B4 2A 10 01            LDA 1001H   ; Move second number to the first number
E4B7 31 10 00            STA 1000H
E4BA 2A 10 02            LDA 1002H   ; Move summ to the second number
E4BD 31 10 01            STA 1001H
E4C0 2A 10 00            LDA 1000H   ; Load first number in A
E4C3 29 10 01            ADDA 1001H  ; Add second number to A
E4C6 31 10 02            STA 1002H   ; Store the summ
E4C9 2D 03               CMPA #03H   ; HEX   Decimal  Real Value
E4CB 2B F8 00            JNE F800H   ; 03H   3        3

E4CE 2A 10 01            LDA 1001H   ; Move second number to the first number
E4D1 31 10 00            STA 1000H
E4D4 2A 10 02            LDA 1002H   ; Move summ to the second number
E4D7 31 10 01            STA 1001H
E4DA 2A 10 00            LDA 1000H   ; Load first number in A
E4DD 29 10 01            ADDA 1001H  ; Add second number to A
E4E0 31 10 02            STA 1002H   ; Store the summ
E4E3 2D 05               CMPA #05H   ; HEX   Decimal  Real Value
E4E5 2B F8 00            JNE F800H   ; 05H   5        5

E4E8 2A 10 01            LDA 1001H   ; Move second number to the first number
E4EB 31 10 00            STA 1000H
E4EE 2A 10 02            LDA 1002H   ; Move summ to the second number
E4F1 31 10 01            STA 1001H
E4F4 2A 10 00            LDA 1000H   ; Load first number in A
E4F7 29 10 01            ADDA 1001H  ; Add second number to A
E4FA 31 10 02            STA 1002H   ; Store the summ
E4FD 2D 08               CMPA #08H   ; HEX   Decimal  Real Value
E4FF 2B F8 00            JNE F800H   ; 08H   8        8

E502 2A 10 01            LDA 1001H   ; Move second number to the first number
E505 31 10 00            STA 1000H
E508 2A 10 02            LDA 1002H   ; Move summ to the second number
E50B 31 10 01            STA 1001H
E50E 2A 10 00            LDA 1000H   ; Load first number in A
E511 29 10 01            ADDA 1001H  ; Add second number to A
E514 31 10 02            STA 1002H   ; Store the summ
E517 2D 0D               CMPA #0DH   ; HEX   Decimal  Real Value
E519 2B F8 00            JNE F800H   ; 0DH   13       13

E51C 2A 10 01            LDA 1001H   ; Move second number to the first number
E51F 31 10 00            STA 1000H
E522 2A 10 02            LDA 1002H   ; Move summ to the second number
E525 31 10 01            STA 1001H
E528 2A 10 00            LDA 1000H   ; Load first number in A
E52B 29 10 01            ADDA 1001H  ; Add second number to A
E52E 31 10 02            STA 1002H   ; Store the summ
E531 2D 15               CMPA #15H   ; HEX   Decimal  Real Value
E533 2B F8 00            JNE F800H   ; 15H   21       21

E536 2A 10 01            LDA 1001H   ; Move second number to the first number
E539 31 10 00            STA 1000H
E53C 2A 10 02            LDA 1002H   ; Move summ to the second number
E53F 31 10 01            STA 1001H
E542 2A 10 00            LDA 1000H   ; Load first number in A
E545 29 10 01            ADDA 1001H  ; Add second number to A
E548 31 10 02            STA 1002H   ; Store the summ
E54B 2D 22               CMPA #22H   ; HEX   Decimal  Real Value
E54D 2B F8 00            JNE F800H   ; 22H   34       34

E550 2A 10 01            LDA 1001H   ; Move second number to the first number
E553 31 10 00            STA 1000H
E556 2A 10 02            LDA 1002H   ; Move summ to the second number
E559 31 10 01            STA 1001H
E55C 2A 10 00            LDA 1000H   ; Load first number in A
E55F 29 10 01            ADDA 1001H  ; Add second number to A
E562 31 10 02            STA 1002H   ; Store the summ
E565 2D 37               CMPA #37H   ; HEX   Decimal  Real Value
E567 2B F8 00            JNE F800H   ; 37H   55       55

E56A 2A 10 01            LDA 1001H   ; Move second number to the first number
E56D 31 10 00            STA 1000H
E570 2A 10 02            LDA 1002H   ; Move summ to the second number
E573 31 10 01            STA 1001H
E576 2A 10 00            LDA 1000H   ; Load first number in A
E579 29 10 01            ADDA 1001H  ; Add second number to A
E57C 31 10 02            STA 1002H   ; Store the summ
E57F 2D 59               CMPA #59H   ; HEX   Decimal  Real Value
E581 2B F8 00            JNE F800H   ; 59H   89       89

E584 2A 10 01            LDA 1001H   ; Move second number to the first number
E587 31 10 00            STA 1000H
E58A 2A 10 02            LDA 1002H   ; Move summ to the second number
E58D 31 10 01            STA 1001H
E590 2A 10 00            LDA 1000H   ; Load first number in A
E593 29 10 01            ADDA 1001H  ; Add second number to A
E596 31 10 02            STA 1002H   ; Store the summ
E599 2D 90               CMPA #90H   ; HEX   Decimal  Real Value
E59B 2B F8 00            JNE F800H   ; 90H   144      144

E59E 2A 10 01            LDA 1001H   ; Move second number to the first number
E5A1 31 10 00            STA 1000H
E5A4 2A 10 02            LDA 1002H   ; Move summ to the second number
E5A7 31 10 01            STA 1001H
E5AA 2A 10 00            LDA 1000H   ; Load first number in A
E5AD 29 10 01            ADDA 1001H  ; Add second number to A
E5B0 31 10 02            STA 1002H   ; Store the summ
E5B3 2D E9               CMPA #E9H   ; HEX   Decimal  Real Value
E5B5 2B F8 00            JNE F800H   ; E9H   233      233

E5B8 2A 10 01            LDA 1001H   ; Move second number to the first number
E5BB 31 10 00            STA 1000H
E5BE 2A 10 02            LDA 1002H   ; Move summ to the second number
E5C1 31 10 01            STA 1001H
E5C4 2A 10 00            LDA 1000H   ; Load first number in A
E5C7 29 10 01            ADDA 1001H  ; Add second number to A
E5CA 31 10 02            STA 1002H   ; Store the summ
E5CD 2D 79               CMPA #79H   ; HEX   Decimal  Real Value
E5CF 2B F8 00            JNE F800H   ; 79H   121      377 - (256*1) = 121

E5D2 2A 10 01            LDA 1001H   ; Move second number to the first number
E5D5 31 10 00            STA 1000H
E5D8 2A 10 02            LDA 1002H   ; Move summ to the second number
E5DB 31 10 01            STA 1001H
E5DE 2A 10 00            LDA 1000H   ; Load first number in A
E5E1 29 10 01            ADDA 1001H  ; Add second number to A
E5E4 31 10 02            STA 1002H   ; Store the summ
E5E7 2D 62               CMPA #62H   ; HEX   Decimal  Real Value
E5E9 2B F8 00            JNE F800H   ; 62H   98       610 - (256*2) = 98

E5EC 2A 10 01            LDA 1001H   ; Move second number to the first number
E5EF 31 10 00            STA 1000H
E5F2 2A 10 02            LDA 1002H   ; Move summ to the second number
E5F5 31 10 01            STA 1001H
E5F8 2A 10 00            LDA 1000H   ; Load first number in A
E5FB 29 10 01            ADDA 1001H  ; Add second number to A
E5FE 31 10 02            STA 1002H   ; Store the summ
E601 2D DB               CMPA #DBH   ; HEX   Decimal  Real Value
E603 2B F8 00            JNE F800H   ; DBH   219      987 - (256*3) = 219         

                         ; --------------------------------------------------------------------      
                         ; END OF FIBONACCI TEST
                         ; --------------------------------------------------------------------      

E606 32 E0 00            JMP E000H   ; Loop from start of diag test

                         ; --------------------------------------------------------------------
                         ; Error routine
                         ; --------------------------------------------------------------------
                         ORG/F800H   ; Diagnostic Error routine   
F800 08                  STOP        ; Stop execution
                         ;JMP F800H   ; Infinite Loop on error

                         ; --------------------------------------------------------------------
                         ; JSR and RTS Test subroutine
                         ; --------------------------------------------------------------------
                         ORG/FFC0H
FFC0 30 11               LDA #11H
FFC2 07                  RTS
                         ORG/FFC3H
FFC3 30 22               LDA #22H
FFC5 06 FF C0            JSR FFC0H
FFC8 07                  RTS
                         ORG/FFC9H
FFC9 30 33               LDA #33H
FFCB 06 FF C3            JSR FFC3H
FFCE 07                  RTS
                         ORG/FFCFH
FFCF 30 44               LDA #44H
FFD1 06 FF C9            JSR FFC9H
FFD4 07                  RTS
                         ORG/FFD5H
FFD5 30 44               LDA #44H
FFD7 06 FF CF            JSR FFCFH
FFDA 07                  RTS
                         ORG/FFDBH
FFDB 30 55               LDA #55H
FFDD 06 FF D5            JSR FFD5H
FFE0 07                  RTS
                         ORG/FFE1H
FFE1 30 66               LDA #66H
FFE3 06 FF DB            JSR FFDBH
FFE6 07                  RTS
                         ORG/FFE7H
FFE7 30 77               LDA #77H
FFE9 06 FF E1            JSR FFE1H
FFEC 07                  RTS
                         ORG/FFEDH
FFED 30 88               LDA #88H
FFEF 06 FF E7            JSR FFE7H
FFF2 07                  RTS
                         ORG/FFF3H
FFF3 30 99               LDA #99H
FFF5 06 FF ED            JSR FFEDH
FFF8 07                  RTS
                         ; --------------------------------------------------------------------
                         ; Reset Vector
                         ; --------------------------------------------------------------------
                         ORG/FFFEH   ; Set the Reset vector
FFFE E0                  DB E0H      ; MSB Reset Vector
FFFF 00                  DB 00H      ; LSB Reset Vector


Assembly complete
Number of errors = 0
