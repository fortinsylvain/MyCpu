; -----------------------------------------------------------------
; Homebrew MyCPU diagnostic program
; Author: Sylvain Fortin
; Date : 28 december 2023
; Documentation : diag.asm is used to test the assembler
;                 instructions of MyCPU.
; Memory map of the computer
; 0000H - 17FFH Total RAM space
; 0000H - 00FFH Stack
; 0100H - 17EF  Free for application
; 1FF0H         SP Stack Pointer 8 bit
; 1FF1H temp SP1
; 1FF2H temp SP2
; 1FFAH bit<0>	Equal
; 1FFBH bit<0>	Carry
; 1FFCH A Register
; 1FFEH IPH	Instruction Pointer MSB
; 1FFFH IPL Instruction Pointer LSB
; C000H           LED port
; E000H - F000H   EEPROM 2864 for program storage
; -----------------------------------------------------------------
                                     ; 
                         ORG/E000H   ; EEPROM Start

E000 30 00               LDA #00H    ; Clear LED
E002 36                  NOTA
E003 31 C0 00            STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; Test Carry Status bit integrity
                         ; --------------------------------------------------------------------
E006 30 01               LDA #01H
E008 36                  NOTA
E009 31 C0 00            STA C000H   ; Output to LED port
E00C 30 00               LDA #00H
E00E 31 1F FB            STA 1FFBH   ; Write 0 to carry bit <0>
E011 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E014 2D 00               CMPA #00H
E016 2B F8 00            JNE F800H
E019 30 01               LDA #01H
E01B 31 1F FB            STA 1FFBH   ; Write 1 to carry bit <0>
E01E 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E021 2D 01               CMPA #01H
E023 2B F8 00            JNE F800H
E026 30 00               LDA #00H
E028 31 1F FB            STA 1FFBH   ; Write 0 to carry bit <0>
E02B 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E02E 2D 00               CMPA #00H
E030 2B F8 00            JNE F800H

                         ; --------------------------------------------------------------------
                         ; Test Equal Status bit integrity
                         ; --------------------------------------------------------------------
E033 30 02               LDA #02H
E035 36                  NOTA
E036 31 C0 00            STA C000H   ; Output to LED port
E039 30 00               LDA #00H
E03B 31 1F FA            STA 1FFAH   ; Write 0 to Equal Status bit <0>
E03E 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E041 2D 00               CMPA #00H
E043 2B F8 00            JNE F800H
E046 30 01               LDA #01H
E048 31 1F FA            STA 1FFAH   ; Write 1 to Equal Status bit <0>
E04B 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E04E 2D 01               CMPA #01H
E050 2B F8 00            JNE F800H
E053 30 00               LDA #00H
E055 31 1F FA            STA 1FFAH   ; Write 0 to Equal Status bit <0>
E058 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E05B 2D 00               CMPA #00H
E05D 2B F8 00            JNE F800H

                         ; --------------------------------------------------------------------
                         ; OP.08 STOP
                         ; STOP EXECUTING
                         ; Cannot test here it will stop execution...
                         ; A diagnostic test failure is expected to call this instruction ending 
                         ; program exectution.
                         ; --------------------------------------------------------------------
                         ;LDA #08H
                         ;NOTA
                         ;STA C000H   ; Output to LED port
                         ;STOP

                         ; --------------------------------------------------------------------
                         ; OP.29 ADDA ****H  
                         ; ADD A WITH BYTE AT ADDRESS, C UPDATE
                         ; --------------------------------------------------------------------
E060 30 29               LDA #29H
E062 36                  NOTA
E063 31 C0 00            STA C000H   ; Output to LED port
E066 30 5F               LDA #5FH    ; Store a value in RAM
E068 31 01 23            STA 0123H   
E06B 30 63               LDA #63H
E06D 29 01 23            ADDA 0123H  ; Add to A the byte at address location
E070 2D C2               CMPA #C2H   ; Check the sum
E072 2B F8 00            JNE F800H   ; Jump if result not good
E075 2A 1F FB            LDA 1FFBH   ; Read the Carry Status
E078 2D 00               CMPA #00H   ; No carry expected then C should be '0'
E07A 2B F8 00            JNE F800H   ; Error if carry is set

E07D 30 AC               LDA #ACH    ; Store another value in RAM
E07F 31 10 56            STA 1056H   
E082 30 D9               LDA #D9H
E084 29 10 56            ADDA 1056H  ; Add to A the byte at address location
E087 2D 85               CMPA #85H   ; Check the sum LSB
E089 2B F8 00            JNE F800H   ; Jump if result not as expected
E08C 2A 1F FB            LDA 1FFBH   ; Read the Carry Status
E08F 2D 01               CMPA #01H   ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E091 2B F8 00            JNE F800H   ; Error if different

                         ; --------------------------------------------------------------------
                         ; OP.2A LDA ****H  
                         ; LOAD A WITH BYTE AT ADDRESS Test LDA #**H instruction 
                         ; --------------------------------------------------------------------
E094 30 2A               LDA #2AH
E096 36                  NOTA
E097 31 C0 00            STA C000H   ; Output to LED port
E09A 30 AA               LDA #AAH    ; Load immediate in register A
E09C 2D AA               CMPA #AAH
E09E 2B F8 00            JNE F800H
E0A1 30 01               LDA #01H
E0A3 2D 01               CMPA #01H
E0A5 2B F8 00            JNE F800H
E0A8 30 02               LDA #02H
E0AA 2D 02               CMPA #02H
E0AC 2B F8 00            JNE F800H
E0AF 30 04               LDA #04H
E0B1 2D 04               CMPA #04H
E0B3 2B F8 00            JNE F800H
E0B6 30 08               LDA #08H
E0B8 2D 08               CMPA #08H
E0BA 2B F8 00            JNE F800H
E0BD 30 10               LDA #10H
E0BF 2D 10               CMPA #10H
E0C1 2B F8 00            JNE F800H
E0C4 30 20               LDA #20H
E0C6 2D 20               CMPA #20H
E0C8 2B F8 00            JNE F800H
E0CB 30 40               LDA #40H
E0CD 2D 40               CMPA #40H
E0CF 2B F8 00            JNE F800H
E0D2 30 80               LDA #80H
E0D4 2D 80               CMPA #80H
E0D6 2B F8 00            JNE F800H
E0D9 30 55               LDA #55H
E0DB 2D 55               CMPA #55H
E0DD 2B F8 00            JNE F800H
E0E0 30 FF               LDA #FFH
E0E2 2D FF               CMPA #FFH
E0E4 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.2B JNEQ ****H  
                         ; JUMP IF E=0
                         ; Only a partial validation because i do not have symbolic address
                         ; processing in the assembler program.
                         ; --------------------------------------------------------------------
E0E7 30 2B               LDA #2BH
E0E9 36                  NOTA
E0EA 31 C0 00            STA C000H   ; Output to LED port
E0ED 30 6D               LDA #6DH    ; Load a value in A
E0EF 2D 6D               CMPA #6DH   ; Compare with the same value
E0F1 2B F8 00            JNE F800H   ; Error if values are different

                         ; --------------------------------------------------------------------
                         ; OP.2C JEQ ****H
                         ; JUMP IF E=1
                         ; --------------------------------------------------------------------
                         ;LDA #2CH
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2D CMPA #**H
                         ; COMPARE A WITH IMMEDIATE VALUE 
                         ; --------------------------------------------------------------------
                         ;LDA #2DH
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2E ADCA #**H
                         ; ACCA+M+C>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
                         ;LDA #2EH
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2F ADDA #**H
                         ; ACCA+M>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
E0F4 30 2F               LDA #2FH
E0F6 36                  NOTA
E0F7 31 C0 00            STA C000H   ; Output to LED port
E0FA 30 23               LDA #23H
E0FC 2F 45               ADDA #45H
E0FE 2D 68               CMPA #68H
E100 2B F8 00            JNE F800H
E103 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E106 2D 00               CMPA #00H   ; Expecting C=0
E108 2B F8 00            JNE F800H
E10B 30 8A               LDA #8AH
E10D 2F BD               ADDA #BDH
E10F 2D 47               CMPA #47H   
E111 2B F8 00            JNE F800H
E114 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E117 2D 01               CMPA #01H   ; Expecting C=1
E119 2B F8 00            JNE F800H
E11C 30 01               LDA #01H
E11E 2F 02               ADDA #02H
E120 2D 03               CMPA #03H
E122 2B F8 00            JNE F800H
E125 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E128 2D 00               CMPA #00H   ; Expecting C=0
E12A 2B F8 00            JNE F800H
E12D 30 FF               LDA #FFH
E12F 2F FF               ADDA #FFH
E131 2D FE               CMPA #FEH
E133 2B F8 00            JNE F800H
E136 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E139 2D 01               CMPA #01H   ; Expecting C=1
E13B 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.30 LDA #**H  
                         ; LOAD IMMEDIATE VALUE IN REGISTER A
                         ; --------------------------------------------------------------------
E13E 30 30               LDA #30H
E140 36                  NOTA
E141 31 C0 00            STA C000H   ; Output to LED port
E144 30 00               LDA #00H
E146 2D 00               CMPA #00H
E148 2B F8 00            JNE F800H
E14B 30 01               LDA #01H
E14D 2D 01               CMPA #01H
E14F 2B F8 00            JNE F800H
E152 30 02               LDA #02H
E154 2D 02               CMPA #02H
E156 2B F8 00            JNE F800H
E159 30 04               LDA #04H
E15B 2D 04               CMPA #04H
E15D 2B F8 00            JNE F800H
E160 30 08               LDA #08H
E162 2D 08               CMPA #08H
E164 2B F8 00            JNE F800H
E167 30 10               LDA #10H
E169 2D 10               CMPA #10H
E16B 2B F8 00            JNE F800H
E16E 30 20               LDA #20H
E170 2D 20               CMPA #20H
E172 2B F8 00            JNE F800H
E175 30 40               LDA #40H
E177 2D 40               CMPA #40H
E179 2B F8 00            JNE F800H
E17C 30 80               LDA #80H
E17E 2D 80               CMPA #80H
E180 2B F8 00            JNE F800H
E183 30 55               LDA #55H
E185 2D 55               CMPA #55H
E187 2B F8 00            JNE F800H
E18A 30 AA               LDA #AAH
E18C 2D AA               CMPA #AAH
E18E 2B F8 00            JNE F800H
E191 30 FF               LDA #FFH
E193 2D FF               CMPA #FFH
E195 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.31 STA ****H 
                         ; STORE REG.A TO ADDRESSE
                         ; --------------------------------------------------------------------
E198 30 31               LDA #31H
E19A 36                  NOTA
E19B 31 C0 00            STA C000H   ; Output to LED port
E19E 30 12               LDA #12H    ; Write to RAM
E1A0 31 00 00            STA 0000H
E1A3 30 23               LDA #23H
E1A5 31 00 01            STA 0001H
E1A8 30 34               LDA #34H
E1AA 31 00 02            STA 0002H
E1AD 30 45               LDA #45H
E1AF 31 00 04            STA 0004H
E1B2 30 56               LDA #56H
E1B4 31 00 08            STA 0008H
E1B7 30 67               LDA #67H
E1B9 31 00 10            STA 0010H
E1BC 30 78               LDA #78H
E1BE 31 00 20            STA 0020H
E1C1 30 89               LDA #89H
E1C3 31 00 40            STA 0040H
E1C6 30 AB               LDA #ABH
E1C8 31 00 80            STA 0080H
E1CB 30 BC               LDA #BCH
E1CD 31 01 00            STA 0100H
E1D0 30 CD               LDA #CDH
E1D2 31 02 00            STA 0200H
E1D5 30 DE               LDA #DEH
E1D7 31 04 00            STA 0400H
E1DA 30 22               LDA #22H
E1DC 31 08 00            STA 0800H
E1DF 30 33               LDA #33H
E1E1 31 10 00            STA 1000H
E1E4 30 44               LDA #44H
E1E6 31 17 00            STA 1700H
E1E9 2A 00 00            LDA 0000H   ; Read from RAM and compare
E1EC 2D 12               CMPA #12H
E1EE 2B F8 00            JNE F800H
E1F1 2A 00 01            LDA 0001H
E1F4 2D 23               CMPA #23H
E1F6 2B F8 00            JNE F800H
E1F9 2A 00 02            LDA 0002H
E1FC 2D 34               CMPA #34H
E1FE 2B F8 00            JNE F800H
E201 2A 00 04            LDA 0004H
E204 2D 45               CMPA #45H
E206 2B F8 00            JNE F800H
E209 2A 00 08            LDA 0008H
E20C 2D 56               CMPA #56H
E20E 2B F8 00            JNE F800H
E211 2A 00 10            LDA 0010H
E214 2D 67               CMPA #67H
E216 2B F8 00            JNE F800H
E219 2A 00 20            LDA 0020H
E21C 2D 78               CMPA #78H
E21E 2B F8 00            JNE F800H
E221 2A 00 40            LDA 0040H
E224 2D 89               CMPA #89H
E226 2B F8 00            JNE F800H
E229 2A 00 80            LDA 0080H
E22C 2D AB               CMPA #ABH
E22E 2B F8 00            JNE F800H
E231 2A 01 00            LDA 0100H
E234 2D BC               CMPA #BCH
E236 2B F8 00            JNE F800H
E239 2A 02 00            LDA 0200H
E23C 2D CD               CMPA #CDH
E23E 2B F8 00            JNE F800H
E241 2A 04 00            LDA 0400H
E244 2D DE               CMPA #DEH
E246 2B F8 00            JNE F800H
E249 2A 08 00            LDA 0800H
E24C 2D 22               CMPA #22H
E24E 2B F8 00            JNE F800H
E251 2A 10 00            LDA 1000H
E254 2D 33               CMPA #33H
E256 2B F8 00            JNE F800H
E259 2A 17 00            LDA 1700H
E25C 2D 44               CMPA #44H
E25E 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.32 JMP ****H 
                         ; JUMP INCONDITIONAL TO ADDRESS
                         ; --------------------------------------------------------------------
                         ;LDA #32H
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.33 ANDA #**H  REGISTER A AND LOGICAL IMMEDIATE 
                         ; --------------------------------------------------------------------
E261 30 33               LDA #33H
E263 36                  NOTA
E264 31 C0 00            STA C000H   ; Output to LED port
E267 30 FF               LDA #FFH
E269 33 52               ANDA #52H
E26B 2D 52               CMPA #52H
E26D 2B F8 00            JNE F800H
E270 30 E7               LDA #E7H
E272 33 3C               ANDA #3CH
E274 2D 24               CMPA #24H
E276 2B F8 00            JNE F800H
E279 30 00               LDA #00H
E27B 33 00               ANDA #00H
E27D 2D 00               CMPA #00H
E27F 2B F8 00            JNE F800H
E282 30 FF               LDA #FFH
E284 33 FF               ANDA #FFH
E286 2D FF               CMPA #FFH
E288 2B F8 00            JNE F800H
E28B 30 FF               LDA #FFH
E28D 33 55               ANDA #55H
E28F 2D 55               CMPA #55H
E291 2B F8 00            JNE F800H
E294 30 FF               LDA #FFH
E296 33 00               ANDA #00H
E298 2D 00               CMPA #00H
E29A 2B F8 00            JNE F800H

                         ; --------------------------------------------------------------------
                         ; OP.37 INCA  INCREMENT REGISTRE A UPDATE C (CARRY)
                         ; --------------------------------------------------------------------
E29D 30 37               LDA #37H
E29F 36                  NOTA
E2A0 31 C0 00            STA C000H   ; Output to LED port
E2A3 30 00               LDA #00H
E2A5 37                  INCA
E2A6 2D 01               CMPA #01H
E2A8 2B F8 00            JNE F800H
E2AB 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E2AE 2D 00               CMPA #00H   ; Expecting C=0
E2B0 2B F8 00            JNE F800H
E2B3 30 01               LDA #01H
E2B5 37                  INCA
E2B6 2D 02               CMPA #02H
E2B8 2B F8 00            JNE F800H
E2BB 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E2BE 2D 00               CMPA #00H   ; Expecting C=0
E2C0 2B F8 00            JNE F800H
E2C3 30 7C               LDA #7CH
E2C5 37                  INCA
E2C6 37                  INCA
E2C7 37                  INCA
E2C8 37                  INCA
E2C9 37                  INCA
E2CA 37                  INCA
E2CB 37                  INCA
E2CC 37                  INCA
E2CD 37                  INCA
E2CE 37                  INCA
E2CF 2D 86               CMPA #86H
E2D1 2B F8 00            JNE F800H
E2D4 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E2D7 2D 00               CMPA #00H   ; Expecting C=0
E2D9 2B F8 00            JNE F800H
E2DC 30 FE               LDA #FEH
E2DE 37                  INCA
E2DF 2D FF               CMPA #FFH
E2E1 2B F8 00            JNE F800H
E2E4 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E2E7 2D 00               CMPA #00H   ; Expecting C=0
E2E9 2B F8 00            JNE F800H
E2EC 30 FF               LDA #FFH
E2EE 37                  INCA
E2EF 2D 00               CMPA #00H
E2F1 2B F8 00            JNE F800H
E2F4 09                  NOP
E2F5 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>  Appear to have a corrupted carry register,
                                     ;                     other bit than bit <0> may have been changed
E2F8 2D 01               CMPA #01H   ; Expecting C=1
E2FA 2B F8 00            JNE F800H

                         ; --------------------------------------------------------------------
                         ; FIBONACCI TEST
                         ; --------------------------------------------------------------------         
E2FD 30 FF               LDA #FFH
E2FF 36                  NOTA
E300 31 C0 00            STA C000H   ; Output to LED port
                                     ;
E303 30 00               LDA #00H    ; Init first number with 00H
E305 31 10 00            STA 1000H
E308 30 01               LDA #01H    ; Init second number with 01H
E30A 31 10 01            STA 1001H
E30D 2A 10 00            LDA 1000H   ; Load first number in A
E310 29 10 01            ADDA 1001H  ; Add second number to A
E313 31 10 02            STA 1002H   ; Store the summ
E316 2D 01               CMPA #01H   ; HEX   Decimal  Real Value (in 8 bit storage only)
E318 2B F8 00            JNE F800H   ; 01H   1        1

E31B 2A 10 01            LDA 1001H   ; Move second number to the first number
E31E 31 10 00            STA 1000H
E321 2A 10 02            LDA 1002H   ; Move summ to the second number
E324 31 10 01            STA 1001H
E327 2A 10 00            LDA 1000H   ; Load first number in A
E32A 29 10 01            ADDA 1001H  ; Add second number to A
E32D 31 10 02            STA 1002H   ; Store the summ
E330 2D 02               CMPA #02H   ; HEX   Decimal  Real Value
E332 2B F8 00            JNE F800H   ; 02H   2        2

E335 2A 10 01            LDA 1001H   ; Move second number to the first number
E338 31 10 00            STA 1000H
E33B 2A 10 02            LDA 1002H   ; Move summ to the second number
E33E 31 10 01            STA 1001H
E341 2A 10 00            LDA 1000H   ; Load first number in A
E344 29 10 01            ADDA 1001H  ; Add second number to A
E347 31 10 02            STA 1002H   ; Store the summ
E34A 2D 03               CMPA #03H   ; HEX   Decimal  Real Value
E34C 2B F8 00            JNE F800H   ; 03H   3        3

E34F 2A 10 01            LDA 1001H   ; Move second number to the first number
E352 31 10 00            STA 1000H
E355 2A 10 02            LDA 1002H   ; Move summ to the second number
E358 31 10 01            STA 1001H
E35B 2A 10 00            LDA 1000H   ; Load first number in A
E35E 29 10 01            ADDA 1001H  ; Add second number to A
E361 31 10 02            STA 1002H   ; Store the summ
E364 2D 05               CMPA #05H   ; HEX   Decimal  Real Value
E366 2B F8 00            JNE F800H   ; 05H   5        5

E369 2A 10 01            LDA 1001H   ; Move second number to the first number
E36C 31 10 00            STA 1000H
E36F 2A 10 02            LDA 1002H   ; Move summ to the second number
E372 31 10 01            STA 1001H
E375 2A 10 00            LDA 1000H   ; Load first number in A
E378 29 10 01            ADDA 1001H  ; Add second number to A
E37B 31 10 02            STA 1002H   ; Store the summ
E37E 2D 08               CMPA #08H   ; HEX   Decimal  Real Value
E380 2B F8 00            JNE F800H   ; 08H   8        8

E383 2A 10 01            LDA 1001H   ; Move second number to the first number
E386 31 10 00            STA 1000H
E389 2A 10 02            LDA 1002H   ; Move summ to the second number
E38C 31 10 01            STA 1001H
E38F 2A 10 00            LDA 1000H   ; Load first number in A
E392 29 10 01            ADDA 1001H  ; Add second number to A
E395 31 10 02            STA 1002H   ; Store the summ
E398 2D 0D               CMPA #0DH   ; HEX   Decimal  Real Value
E39A 2B F8 00            JNE F800H   ; 0DH   13       13

E39D 2A 10 01            LDA 1001H   ; Move second number to the first number
E3A0 31 10 00            STA 1000H
E3A3 2A 10 02            LDA 1002H   ; Move summ to the second number
E3A6 31 10 01            STA 1001H
E3A9 2A 10 00            LDA 1000H   ; Load first number in A
E3AC 29 10 01            ADDA 1001H  ; Add second number to A
E3AF 31 10 02            STA 1002H   ; Store the summ
E3B2 2D 15               CMPA #15H   ; HEX   Decimal  Real Value
E3B4 2B F8 00            JNE F800H   ; 15H   21       21

E3B7 2A 10 01            LDA 1001H   ; Move second number to the first number
E3BA 31 10 00            STA 1000H
E3BD 2A 10 02            LDA 1002H   ; Move summ to the second number
E3C0 31 10 01            STA 1001H
E3C3 2A 10 00            LDA 1000H   ; Load first number in A
E3C6 29 10 01            ADDA 1001H  ; Add second number to A
E3C9 31 10 02            STA 1002H   ; Store the summ
E3CC 2D 22               CMPA #22H   ; HEX   Decimal  Real Value
E3CE 2B F8 00            JNE F800H   ; 22H   34       34

E3D1 2A 10 01            LDA 1001H   ; Move second number to the first number
E3D4 31 10 00            STA 1000H
E3D7 2A 10 02            LDA 1002H   ; Move summ to the second number
E3DA 31 10 01            STA 1001H
E3DD 2A 10 00            LDA 1000H   ; Load first number in A
E3E0 29 10 01            ADDA 1001H  ; Add second number to A
E3E3 31 10 02            STA 1002H   ; Store the summ
E3E6 2D 37               CMPA #37H   ; HEX   Decimal  Real Value
E3E8 2B F8 00            JNE F800H   ; 37H   55       55

E3EB 2A 10 01            LDA 1001H   ; Move second number to the first number
E3EE 31 10 00            STA 1000H
E3F1 2A 10 02            LDA 1002H   ; Move summ to the second number
E3F4 31 10 01            STA 1001H
E3F7 2A 10 00            LDA 1000H   ; Load first number in A
E3FA 29 10 01            ADDA 1001H  ; Add second number to A
E3FD 31 10 02            STA 1002H   ; Store the summ
E400 2D 59               CMPA #59H   ; HEX   Decimal  Real Value
E402 2B F8 00            JNE F800H   ; 59H   89       89

E405 2A 10 01            LDA 1001H   ; Move second number to the first number
E408 31 10 00            STA 1000H
E40B 2A 10 02            LDA 1002H   ; Move summ to the second number
E40E 31 10 01            STA 1001H
E411 2A 10 00            LDA 1000H   ; Load first number in A
E414 29 10 01            ADDA 1001H  ; Add second number to A
E417 31 10 02            STA 1002H   ; Store the summ
E41A 2D 90               CMPA #90H   ; HEX   Decimal  Real Value
E41C 2B F8 00            JNE F800H   ; 90H   144      144

E41F 2A 10 01            LDA 1001H   ; Move second number to the first number
E422 31 10 00            STA 1000H
E425 2A 10 02            LDA 1002H   ; Move summ to the second number
E428 31 10 01            STA 1001H
E42B 2A 10 00            LDA 1000H   ; Load first number in A
E42E 29 10 01            ADDA 1001H  ; Add second number to A
E431 31 10 02            STA 1002H   ; Store the summ
E434 2D E9               CMPA #E9H   ; HEX   Decimal  Real Value
E436 2B F8 00            JNE F800H   ; E9H   233      233

E439 2A 10 01            LDA 1001H   ; Move second number to the first number
E43C 31 10 00            STA 1000H
E43F 2A 10 02            LDA 1002H   ; Move summ to the second number
E442 31 10 01            STA 1001H
E445 2A 10 00            LDA 1000H   ; Load first number in A
E448 29 10 01            ADDA 1001H  ; Add second number to A
E44B 31 10 02            STA 1002H   ; Store the summ
E44E 2D 79               CMPA #79H   ; HEX   Decimal  Real Value
E450 2B F8 00            JNE F800H   ; 79H   121      377 - (256*1) = 121

E453 2A 10 01            LDA 1001H   ; Move second number to the first number
E456 31 10 00            STA 1000H
E459 2A 10 02            LDA 1002H   ; Move summ to the second number
E45C 31 10 01            STA 1001H
E45F 2A 10 00            LDA 1000H   ; Load first number in A
E462 29 10 01            ADDA 1001H  ; Add second number to A
E465 31 10 02            STA 1002H   ; Store the summ
E468 2D 62               CMPA #62H   ; HEX   Decimal  Real Value
E46A 2B F8 00            JNE F800H   ; 62H   98       610 - (256*2) = 98

E46D 2A 10 01            LDA 1001H   ; Move second number to the first number
E470 31 10 00            STA 1000H
E473 2A 10 02            LDA 1002H   ; Move summ to the second number
E476 31 10 01            STA 1001H
E479 2A 10 00            LDA 1000H   ; Load first number in A
E47C 29 10 01            ADDA 1001H  ; Add second number to A
E47F 31 10 02            STA 1002H   ; Store the summ
E482 2D DB               CMPA #DBH   ; HEX   Decimal  Real Value
E484 2B F8 00            JNE F800H   ; DBH   219      987 - (256*3) = 219         

                         ; --------------------------------------------------------------------      
                         ; END OF FIBONACCI TEST
                         ; --------------------------------------------------------------------      

E487 32 E0 00            JMP E000H   ; Loop from start of diag test

                         ; --------------------------------------------------------------------
                         ; Error routine
                         ; --------------------------------------------------------------------
                         ORG/F800H   ; Diagnostic Error routine   
F800 08                  STOP        ; Stop execution
                         ;JMP F800H   ; Infinite Loop on error

                         ; --------------------------------------------------------------------
                         ; Reset Vector
                         ; --------------------------------------------------------------------
                         ORG/FFFEH   ; Set the Reset vector
FFFE E0                  DB E0H      ; MSB Reset Vector
FFFF 00                  DB 00H      ; LSB Reset Vector


Assembly complete
Number of errors = 0
