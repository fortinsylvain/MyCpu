                ; -----------------------------------------------------------------
                ; Homebrew MyCPU diagnostic program
                ; Author: Sylvain Fortin sylfortin71@hotmail.com
                ; Date : 10 mai 2025
                ; Documentation : diag.asm is a test program that verifying every 
                ;                 assembler instructions of MyCPU.
                ; Memory map of the computer
                ; 0000H - 17FFH Total RAM space
                ; 00A0H - 00FFH Stack
                ; E000H - F000H EEPROM for application program
                ; -----------------------------------------------------------------

                ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |    ?w5      ?w4   |   ?w3     ?w2   |   ?w1     ?w0   | 16 bits
                ;         ?l3         |         ?l2       |       ?l1       |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                ?b15     EQU 0x0000
                ?b14     EQU 0x0001
                ?b13     EQU 0x0002
                ?b12     EQU 0x0003
                ?b11     EQU 0x0004
                ?b10     EQU 0x0005
                ?b9      EQU 0x0006
                ?b8      EQU 0x0007
                ?b7      EQU 0x0008
                ?b6      EQU 0x0009
                ?b5      EQU 0x000A
                ?b4      EQU 0x000B
                ?b3      EQU 0x000C
                ?b2      EQU 0x000D
                ?b1      EQU 0x000E
                ?b0      EQU 0x000F

                ?w7      EQU 0x0000  ; ?b15:?b14
                ?w6      EQU 0x0002  ; ?b13:?b12
                ?w5      EQU 0x0004  ; ?b11:?b10
                ?w4      EQU 0x0006  ; ?b9:?b8
                ?w3      EQU 0x0008  ; ?b7:?b6
                ?w2      EQU 0x000A  ; ?b5:?b4
                ?w1      EQU 0x000C  ; ?b3:?b2
                ?w0      EQU 0x000E  ; ?b1:?b0

                ?l3      EQU 0x0000  ; ?b15,?b14,?b13,?b12
                ?l2      EQU 0x0004  ; ?b11,?b10,?b9,?b8
                ?l1      EQU 0x0008  ; ?b7,?b6,?b5,?b4
                ?l0      EQU 0x000C  ; ?b3,?b2,?b1,?b0

                ; RAM Reserved location
                SP       EQU 0x1FF0  ; SP      Stack Pointer 8 bit
                JSH      EQU 0x1FF1  ; JSH     Temporary storage for JSR MSB address
                JSL      EQU 0x1FF2  ; JSL          "       "     "   "  LSB    "
                XH       EQU 0x1FF3  ; X MSB   X Register MSB
                XL       EQU 0x1FF4  ; X LSB   X Register LSB
                EQUAL    EQU 0x1FFA  ; E       bit<0> Equal Status bit
                CARRY    EQU 0x1FFB  ; C       bit<0> Carry Status bit
                REG_A    EQU 0x1FFC  ; A       A Register
                IPH      EQU 0x1FFE  ; IPH	    Instruction Pointer MSB
                IPL      EQU 0x1FFF  ; IPL          "         "    LSB

                ; Peripheral
                LEDPORT  EQU 0xC000  ; PORT for the LED

                ; Program start
                         ORG/0xE000  ; EEPROM Start        
E000 30 00      START    LDA #0x00   ; Clear LED
E002 19                  NOTA
E003 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; Test Carry Status bit integrity
                         ; --------------------------------------------------------------------
E006 30 01      TST01    LDA #0x01
E008 19                  NOTA
E009 31 C0 00            STA LEDPORT ; Output to LED port
E00C 30 00               LDA #0x00
E00E 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E011 2A 1F FB            LDA CARRY   ; Read Carry Status
E014 2D 00               CMPA #0x00
E016 2B F8 00            JNE FAIL
E019 30 01               LDA #0x01
E01B 31 1F FB            STA CARRY   ; Write 1 to carry bit <0>
E01E 2A 1F FB            LDA CARRY   ; Read Carry Status
E021 2D 01               CMPA #0x01
E023 2B F8 00            JNE FAIL
E026 30 00               LDA #0x00
E028 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E02B 2A 1F FB            LDA CARRY   ; Read Carry Status
E02E 2D 00               CMPA #0x00
E030 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; Test Equal Status bit integrity
                         ; --------------------------------------------------------------------
E033 30 02      TST02    LDA #0x02
E035 19                  NOTA
E036 31 C0 00            STA LEDPORT ; Output to LED port
E039 30 00               LDA #0x00
E03B 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E03E 2A 1F FA            LDA EQUAL   ; Read Equal Status
E041 2D 00               CMPA #0x00
E043 2B F8 00            JNE FAIL
E046 30 01               LDA #0x01
E048 31 1F FA            STA EQUAL   ; Write 1 to Equal Status bit <0>
E04B 2A 1F FA            LDA EQUAL   ; Read Equal Status
E04E 2D 01               CMPA #0x01
E050 2B F8 00            JNE FAIL
E053 30 00               LDA #0x00
E055 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E058 2A 1F FA            LDA EQUAL   ; Read Equal Status
E05B 2D 00               CMPA #0x00
E05D 2B F8 00            JNE FAIL

                         ; --------------------------------------------------------------------
                         ; OP.03 INCA  A = A + 1  INCREMENT REGISTRE A
                         ; E UPDATE, C unchanged
                         ; --------------------------------------------------------------------
E060 30 03      TSTOP03  LDA #0x03
E062 19                  NOTA
E063 31 C0 00            STA LEDPORT ; Output to LED port
E066 30 00               LDA #0x00
E068 03                  INCA
E069 2D 01               CMPA #0x01
E06B 2B F8 00            JNE FAIL
E06E 30 01               LDA #0x01
E070 03                  INCA
E071 2D 02               CMPA #0x02
E073 2B F8 00            JNE FAIL
E076 30 7C               LDA #0x7C
E078 03                  INCA
E079 03                  INCA
E07A 03                  INCA
E07B 03                  INCA
E07C 03                  INCA
E07D 03                  INCA
E07E 03                  INCA
E07F 03                  INCA
E080 03                  INCA
E081 03                  INCA
E082 2D 86               CMPA #0x86
E084 2B F8 00            JNE FAIL
E087 30 FE               LDA #0xFE
E089 03                  INCA
E08A 2D FF               CMPA #0xFF
E08C 2B F8 00            JNE FAIL
E08F 30 FF               LDA #0xFF
E091 03                  INCA
E092 2D 00               CMPA #0x00
E094 2B F8 00            JNE FAIL
E097 30 FF               LDA #0xFF
E099 03                  INCA
E09A 03                  INCA
E09B 2D 01               CMPA #0x01
E09D 2B F8 00            JNE FAIL
E0A0 03                  INCA
E0A1 03                  INCA
E0A2 03                  INCA
E0A3 03                  INCA
E0A4 2D 05               CMPA #0x05
E0A6 2B F8 00            JNE FAIL
E0A9 03                  INCA
E0AA 03                  INCA
E0AB 03                  INCA
E0AC 03                  INCA
E0AD 03                  INCA
E0AE 03                  INCA
E0AF 03                  INCA
E0B0 03                  INCA
E0B1 2D 0D               CMPA #0x0D
E0B3 2B F8 00            JNE FAIL
E0B6 30 00               LDA #0x00   ; Test Carry unchanged
E0B8 31 1F FB            STA CARRY   ; Clear Carry 
E0BB 30 FF               LDA #0xFF
E0BD 03                  INCA
E0BE 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E0C1 2D 00               CMPA #0x00  ; Expecting C=0 and <7:1> = 0
E0C3 2B F8 00            JNE FAIL
E0C6 30 01               LDA #0x01   ; Set Carry 
E0C8 31 1F FB            STA CARRY   
E0CB 30 EB               LDA #0xEB
E0CD 03                  INCA
E0CE 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E0D1 2D 01               CMPA #0x01  ; Expecting C=1 and <7:1> = 0
E0D3 2B F8 00            JNE FAIL
E0D6 30 FE               LDA #0xFE   ; Test Equal (Set when result is 0)
E0D8 03                  INCA
E0D9 2A 1F FA            LDA EQUAL   ; Read Equal status
E0DC 2D 00               CMPA #0x00  ; Expecting E=0 and <7:1> = 0
E0DE 2B F8 00            JNE FAIL
E0E1 30 FF               LDA #0xFF
E0E3 03                  INCA
E0E4 2A 1F FA            LDA EQUAL   ; Read Equal status
E0E7 2D 01               CMPA #0x01  ; Expecting E=1 and <7:1> = 0
E0E9 2B F8 00            JNE FAIL
E0EC 30 00               LDA #0x00
E0EE 03                  INCA
E0EF 2A 1F FA            LDA EQUAL
E0F2 2D 00               CMPA #0x00  ; Expecting E=0 and <7:1> = 0
E0F4 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.04  LDX #0x****   Load X Register with 16 bits immediate value
                         ; --------------------------------------------------------------------
E0F7 30 04      TSTOP04  LDA #0x04
E0F9 19                  NOTA
E0FA 31 C0 00            STA LEDPORT ; Output to LED port
E0FD 04 12 34            LDX #0x1234
E100 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E103 2D 12               CMPA #0x12
E105 2B F8 00            JNE FAIL
E108 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E10B 2D 34               CMPA #0x34
E10D 2B F8 00            JNE FAIL
E110 04 AB CD            LDX #0xABCD
E113 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E116 2D AB               CMPA #0xAB
E118 2B F8 00            JNE FAIL
E11B 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E11E 2D CD               CMPA #0xCD
E120 2B F8 00            JNE FAIL
                         ; Test using symbolic
E123 04 00 0F            LDX #?b0    ; ?b0      EQU 0x000F
E126 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E129 2D 00               CMPA #0x00
E12B 2B F8 00            JNE FAIL
E12E 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E131 2D 0F               CMPA #0x0F
E133 2B F8 00            JNE FAIL
E136 04 1F F0            LDX #SP     ; SP       EQU 0x1FF0
E139 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E13C 2D 1F               CMPA #0x1F
E13E 2B F8 00            JNE FAIL
E141 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E144 2D F0               CMPA #0xF0
E146 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.05  INCX   Increment Register X,  Carry Not Updated
                         ; --------------------------------------------------------------------
E149 30 05      TSTOP05  LDA #0x05
E14B 19                  NOTA
E14C 31 C0 00            STA LEDPORT ; Output to LED port
E14F 04 00 00            LDX #0x0000 ; Clear X register
E152 05                  INCX        ; Increment X
E153 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E156 2D 01               CMPA #0x01
E158 2B F8 00            JNE FAIL
E15B 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E15E 2D 00               CMPA #0x00
E160 2B F8 00            JNE FAIL
E163 05                  INCX
E164 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E167 2D 02               CMPA #0x02
E169 2B F8 00            JNE FAIL
E16C 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E16F 2D 00               CMPA #0x00
E171 2B F8 00            JNE FAIL

E174 04 00 FF            LDX #0x00FF ; Test a carry set
E177 05                  INCX        ; Increment X
E178 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E17B 2D 00               CMPA #0x00
E17D 2B F8 00            JNE FAIL
E180 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E183 2D 01               CMPA #0x01
E185 2B F8 00            JNE FAIL
E188 05                  INCX        ; Increment X
E189 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E18C 2D 01               CMPA #0x01
E18E 2B F8 00            JNE FAIL
E191 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E194 2D 01               CMPA #0x01
E196 2B F8 00            JNE FAIL

E199 04 1E FF            LDX #0x1EFF
E19C 05                  INCX        ; Increment X
E19D 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E1A0 2D 00               CMPA #0x00
E1A2 2B F8 00            JNE FAIL
E1A5 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E1A8 2D 1F               CMPA #0x1F
E1AA 2B F8 00            JNE FAIL

E1AD 04 FF FF            LDX #0xFFFF
E1B0 05                  INCX        ; Increment X
E1B1 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E1B4 2D 00               CMPA #0x00
E1B6 2B F8 00            JNE FAIL
E1B9 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E1BC 2D 00               CMPA #0x00
E1BE 2B F8 00            JNE FAIL

                         ; --------------------------------------------------------------------
                         ; OP.06 JSR    Jump to SubRoutine
                         ; --------------------------------------------------------------------
E1C1 30 06      TSTOP06  LDA #0x06
E1C3 19                  NOTA
E1C4 31 C0 00            STA LEDPORT ; Output to LED port
E1C7 06 FF C0            JSR TJSR1   ; 1 layer
E1CA 06 FF C3            JSR TJSR2   ; 2
E1CD 06 FF C9            JSR TJSR3   ; 3
E1D0 06 FF CF            JSR TJSR4   ; 4
E1D3 06 FF D5            JSR TJSR5   ; 5
E1D6 06 FF DB            JSR TJSR6   ; 6
E1D9 06 FF E1            JSR TJSR7   ; 7
E1DC 06 FF E7            JSR TJSR8   ; 8
E1DF 06 FF ED            JSR TJSR9   ; 9
E1E2 06 FF F3            JSR TJSR10  ; 10
                         ; --------------------------------------------------------------------
                         ; OP.07 RTS    ReTurn from Subroutine
                         ; Tested in OP.06 JSR
                         ; --------------------------------------------------------------------
                         ;LDA #07H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.08 STOP
                         ; STOP EXECUTING
                         ; Cannot test here it will stop execution...
                         ; A diagnostic test failure is expected to call this instruction ending 
                         ; program exectution.
                         ; --------------------------------------------------------------------
                         ;LDA #08H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ;STOP
                         ; --------------------------------------------------------------------
                         ; OP.09 NOP   NO OPERATION
                         ; --------------------------------------------------------------------
E1E5 30 09      TSTOP09  LDA #0x09
E1E7 19                  NOTA
E1E8 31 C0 00            STA LEDPORT ; Output to LED port
E1EB 09                  NOP
E1EC 09                  NOP
E1ED 09                  NOP
                         ; --------------------------------------------------------------------
                         ; OP.0A LDA (X) Load Reg A Indexed
                         ; --------------------------------------------------------------------
E1EE 30 0A      TSTOP0A  LDA #0x0A
E1F0 19                  NOTA
E1F1 31 C0 00            STA LEDPORT ; Output to LED port
E1F4 30 55               LDA #0x55   ; Store some value in RAM
E1F6 31 01 00            STA 0x0100
E1F9 30 AA               LDA #0xAA
E1FB 31 01 01            STA 0x0101
E1FE 30 DE               LDA #0xDE
E200 31 01 F0            STA 0x01F0
E203 30 CA               LDA #0xCA
E205 31 01 FF            STA 0x01FF
E208 04 01 00            LDX #0x0100 ; Verify each locations
E20B 0A                  LDA (X)
E20C 2D 55               CMPA #0x55
E20E 2B F8 00            JNE FAIL    ; Jump if result not good
E211 04 01 01            LDX #0x0101
E214 0A                  LDA (X)
E215 2D AA               CMPA #0xAA
E217 2B F8 00            JNE FAIL
E21A 04 01 F0            LDX #0x01F0
E21D 0A                  LDA (X)
E21E 2D DE               CMPA #0xDE
E220 2B F8 00            JNE FAIL
E223 04 01 FF            LDX #0x01FF
E226 0A                  LDA (X)
E227 2D CA               CMPA #0xCA
E229 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.0B STA (X) Store Reg A Indexed
                         ; --------------------------------------------------------------------
E22C 30 0B      TSTOP0B  LDA #0x0B
E22E 19                  NOTA
E22F 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.0C JRA 0x** Unconditional relative jump
                         ; --------------------------------------------------------------------
                         ; Testing using hexadecimal value after the mnemonic
E232 30 0C               LDA #0x0C
E234 19                  NOTA
E235 31 C0 00            STA LEDPORT ; Output to LED port
E238 0C 00               JRA 0x00    ; Test jump foward, Execute next instruction
E23A 0C 01               JRA 0x01    ; Skip next instruction
E23C 09                  NOP         ; 1
E23D 0C 02               JRA 0x02    ; Skip next 2 instructions
E23F 09                  NOP         ; 1
E240 09                  NOP         ; 2
E241 0C 03               JRA 0x03    ; Skip next 3 instructions
E243 09                  NOP         ; 1 
E244 09                  NOP         ; 2
E245 09                  NOP         ; 3
E246 0C 05               JRA 0x05    ; Skip next 5 instructions
E248 09                  NOP         ; 1
E249 09                  NOP         ; 2
E24A 09                  NOP         ; 3
E24B 09                  NOP         ; 4
E24C 09                  NOP         ; 5
E24D 0C 10               JRA 0x10    ; Skip next 16 instructions
E24F 09                  NOP         ; 1
E250 09                  NOP         ; 2
E251 09                  NOP         ; 3
E252 09                  NOP         ; 4
E253 09                  NOP         ; 5
E254 09                  NOP         ; 6
E255 09                  NOP         ; 7
E256 09                  NOP         ; 8
E257 09                  NOP         ; 9
E258 09                  NOP         ; 10
E259 09                  NOP         ; 11
E25A 09                  NOP         ; 12
E25B 09                  NOP         ; 13
E25C 09                  NOP         ; 14
E25D 09                  NOP         ; 15
E25E 09                  NOP         ; 16
E25F 0C 22               JRA 0x22    ; Skip next 34 bytes
E261 09                  NOP         ; 1
E262 09                  NOP         ; 2
E263 09                  NOP         ; 3
E264 0C 1F               JRA 0x1F   ; 4-5   Final jump to the end of thest
E266 09                  NOP         ; 6
E267 09                  NOP         ; 7
E268 09                  NOP         ; 8
E269 09                  NOP         ; 9
E26A 09                  NOP         ; 10
E26B 09                  NOP         ; 11
E26C 09                  NOP         ; 12
E26D 09                  NOP         ; 13
E26E 09                  NOP         ; 14
E26F 09                  NOP         ; 15
E270 09                  NOP         ; 16
E271 09                  NOP         ; 17
E272 09                  NOP         ; 18
E273 09                  NOP         ; 19
E274 09                  NOP         ; 20
E275 09                  NOP         ; 21
E276 09                  NOP         ; 22
E277 09                  NOP         ; 23
E278 09                  NOP         ; 24
E279 09                  NOP         ; 25
E27A 0C E8               JRA 0xE8    ; 26-27 Third Backward jump
E27C 09                  NOP         ; 28
E27D 09                  NOP         ; 29
E27E 09                  NOP         ; 30
E27F 09                  NOP         ; 31
E280 09                  NOP         ; 32
E281 0C F7               JRA 0xF7    ; 33-34 Second Backward jump
E283 0C FC               JRA 0xFC    ; First Backward jump
E285 09                  NOP         ; Arrival of the last jump to end the test
                         ; Testing using symbolic address after the mnemonic
E286 0C 00               JRA TST0B_0 ; Test jump foward, Execute next instruction
E288 0C 01      TST0B_0  JRA TST0B_1 ; Skip next instruction
E28A 09                  NOP         ; 1
E28B 0C 02      TST0B_1  JRA TST0B_2 ; Skip next 2 instructions
E28D 09                  NOP         ; 1
E28E 09                  NOP         ; 2
E28F 0C 03      TST0B_2  JRA TST0B_3 ; Skip next 3 instructions
E291 09                  NOP         ; 1 
E292 09                  NOP         ; 2
E293 09                  NOP         ; 3
E294 0C 05      TST0B_3  JRA TST0B_4 ; Skip next 5 instructions
E296 09                  NOP         ; 1
E297 09                  NOP         ; 2
E298 09                  NOP         ; 3
E299 09                  NOP         ; 4
E29A 09                  NOP         ; 5
E29B 0C 10      TST0B_4  JRA TST0B_5 ; Skip next 16 instructions
E29D 09                  NOP         ; 1
E29E 09                  NOP         ; 2
E29F 09                  NOP         ; 3
E2A0 09                  NOP         ; 4
E2A1 09                  NOP         ; 5
E2A2 09                  NOP         ; 6
E2A3 09                  NOP         ; 7
E2A4 09                  NOP         ; 8
E2A5 09                  NOP         ; 9
E2A6 09                  NOP         ; 10
E2A7 09                  NOP         ; 11
E2A8 09                  NOP         ; 12
E2A9 09                  NOP         ; 13
E2AA 09                  NOP         ; 14
E2AB 09                  NOP         ; 15
E2AC 09                  NOP         ; 16
E2AD 0C 22      TST0B_5  JRA TST0B_9 ; Skip next 34 bytes
E2AF 09                  NOP         ; 1
E2B0 09                  NOP         ; 2
E2B1 09                  NOP         ; 3
E2B2 0C 1F      TST0B_6  JRA TST0B_10 ; 4-5   Final jump to the end of test
E2B4 09                  NOP         ; 6
E2B5 09                  NOP         ; 7
E2B6 09                  NOP         ; 8
E2B7 09                  NOP         ; 9
E2B8 09                  NOP         ; 10
E2B9 09                  NOP         ; 11
E2BA 09                  NOP         ; 12
E2BB 09                  NOP         ; 13
E2BC 09                  NOP         ; 14
E2BD 09                  NOP         ; 15
E2BE 09                  NOP         ; 16
E2BF 09                  NOP         ; 17
E2C0 09                  NOP         ; 18
E2C1 09                  NOP         ; 19
E2C2 09                  NOP         ; 20
E2C3 09                  NOP         ; 21
E2C4 09                  NOP         ; 22
E2C5 09                  NOP         ; 23
E2C6 09                  NOP         ; 24
E2C7 09                  NOP         ; 25
E2C8 0C E8      TST0B_7  JRA TST0B_6 ; 26-27 Third Backward jump
E2CA 09                  NOP         ; 28
E2CB 09                  NOP         ; 29
E2CC 09                  NOP         ; 30
E2CD 09                  NOP         ; 31
E2CE 09                  NOP         ; 32
E2CF 0C F7      TST0B_8  JRA TST0B_7 ; 33-34 Second Backward jump
E2D1 0C FC      TST0B_9  JRA TST0B_8 ; First Backward jump
E2D3 09         TST0B_10 NOP         ; Arrival of the last jump to end the test
                ;         ; Higher range testing using symbolic address after the mnemonic
E2D4 09                  NOP         ; These NOP make relative jump to exercise carry on MSB address boundary
E2D5 09                  NOP
E2D6 09                  NOP
E2D7 09                  NOP
E2D8 09                  NOP
E2D9 09                  NOP
E2DA 09                  NOP
E2DB 09                  NOP
E2DC 09                  NOP
E2DD 09                  NOP
E2DE 09                  NOP
E2DF 09                  NOP
E2E0 09                  NOP
E2E1 09                  NOP
E2E2 09                  NOP
E2E3 09                  NOP
E2E4 0C 7F               JRA TST0B_12
E2E6 09                  NOP         ; 1     1     
E2E7 09                  NOP
                ;         NOP
                ;         NOP
E2E8 0C 7E      TST0B_11 JRA TST0B_13
E2EA 09                  NOP
E2EB 09                  NOP
E2EC 09                  NOP
E2ED 09                  NOP
E2EE 09                  NOP
E2EF 09                  NOP         
E2F0 09                  NOP
E2F1 09                  NOP
E2F2 09                  NOP
E2F3 09                  NOP
E2F4 09                  NOP
E2F5 09                  NOP         ; 16
E2F6 09                  NOP         ; 1     2   
E2F7 09                  NOP
E2F8 09                  NOP
E2F9 09                  NOP
E2FA 09                  NOP
E2FB 09                  NOP
E2FC 09                  NOP
E2FD 09                  NOP
E2FE 09                  NOP
E2FF 09                  NOP         
E300 09                  NOP
E301 09                  NOP
E302 09                  NOP
E303 09                  NOP
E304 09                  NOP
E305 09                  NOP         ; 16
E306 09                  NOP         ; 1   3
E307 09                  NOP
E308 09                  NOP
E309 09                  NOP
E30A 09                  NOP
E30B 09                  NOP
E30C 09                  NOP
E30D 09                  NOP
E30E 09                  NOP
E30F 09                  NOP         
E310 09                  NOP
E311 09                  NOP
E312 09                  NOP
E313 09                  NOP
E314 09                  NOP
E315 09                  NOP         ; 16
E316 09                  NOP         ; 1   4
E317 09                  NOP
E318 09                  NOP
E319 09                  NOP
E31A 09                  NOP
E31B 09                  NOP
E31C 09                  NOP
E31D 09                  NOP
E31E 09                  NOP
E31F 09                  NOP         
E320 09                  NOP
E321 09                  NOP
E322 09                  NOP
E323 09                  NOP
E324 09                  NOP
E325 09                  NOP         ; 16
E326 09                  NOP         ; 1   5
E327 09                  NOP
E328 09                  NOP
E329 09                  NOP
E32A 09                  NOP
E32B 09                  NOP
E32C 09                  NOP
E32D 09                  NOP
E32E 09                  NOP
E32F 09                  NOP         
E330 09                  NOP
E331 09                  NOP
E332 09                  NOP
E333 09                  NOP
E334 09                  NOP
E335 09                  NOP         ; 16
E336 09                  NOP         ; 1   5
E337 09                  NOP
E338 09                  NOP
E339 09                  NOP
E33A 09                  NOP
E33B 09                  NOP
E33C 09                  NOP
E33D 09                  NOP
E33E 09                  NOP
E33F 09                  NOP         
E340 09                  NOP
E341 09                  NOP
E342 09                  NOP
E343 09                  NOP
E344 09                  NOP
E345 09                  NOP         ; 16
E346 09                  NOP         ; 1   6
E347 09                  NOP
E348 09                  NOP
E349 09                  NOP
E34A 09                  NOP
E34B 09                  NOP
E34C 09                  NOP
E34D 09                  NOP
E34E 09                  NOP
E34F 09                  NOP         
E350 09                  NOP
E351 09                  NOP
E352 09                  NOP
E353 09                  NOP
E354 09                  NOP
E355 09                  NOP         ; 16
E356 09                  NOP         ; 1   7
E357 09                  NOP
E358 09                  NOP
E359 09                  NOP
E35A 09                  NOP
E35B 09                  NOP
E35C 09                  NOP
E35D 09                  NOP
E35E 09                  NOP
E35F 09                  NOP         
E360 09                  NOP
E361 09                  NOP
E362 09                  NOP
E363 09                  NOP
E364 09                  NOP
                ;         NOP        ; 16
E365 09         TST0B_12 NOP
E366 0C 80               JRA TST0B_11
E368 09         TST0B_13 NOP         ; final foward jump destination     
                         ; --------------------------------------------------------------------
                         ; OP.0D SRLA Shift Right Logical on Reg A
                         ;            0 -> b7 b6 b5 b4 b3 b2 b1 b0 -> C
                         ; --------------------------------------------------------------------
E369 30 0D      TSTOP0D  LDA #0x0D
E36B 19                  NOTA
E36C 31 C0 00            STA LEDPORT ; Output to LED port
E36F 30 A5               LDA #0xA5
E371 0D                  SRLA
E372 2D 52               CMPA #0x52
E374 2B F8 00            JNE FAIL    ; Jump if result not good
E377 2A 1F FB            LDA CARRY   ; Read the Carry Status
E37A 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E37C 2B F8 00            JNE FAIL    ; Error if different
E37F 30 A5               LDA #0xA5
E381 0D                  SRLA
E382 0D                  SRLA
E383 2D 29               CMPA #0x29
E385 2B F8 00            JNE FAIL    ; Jump if result not good
E388 2A 1F FB            LDA CARRY   ; Read the Carry Status
E38B 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E38D 2B F8 00            JNE FAIL    ; Error if different
E390 30 A5               LDA #0xA5
E392 0D                  SRLA
E393 0D                  SRLA
E394 0D                  SRLA
E395 2D 14               CMPA #0x14
E397 2B F8 00            JNE FAIL    ; Jump if result not good
E39A 2A 1F FB            LDA CARRY   ; Read the Carry Status
E39D 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E39F 2B F8 00            JNE FAIL    ; Error if different
E3A2 30 A5               LDA #0xA5
E3A4 0D                  SRLA
E3A5 0D                  SRLA
E3A6 0D                  SRLA
E3A7 0D                  SRLA
E3A8 2D 0A               CMPA #0x0A
E3AA 2B F8 00            JNE FAIL    ; Jump if result not good
E3AD 2A 1F FB            LDA CARRY   ; Read the Carry Status
E3B0 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E3B2 2B F8 00            JNE FAIL    ; Error if different
E3B5 30 A5               LDA #0xA5
E3B7 0D                  SRLA
E3B8 0D                  SRLA
E3B9 0D                  SRLA
E3BA 0D                  SRLA
E3BB 0D                  SRLA
E3BC 2D 05               CMPA #0x05
E3BE 2B F8 00            JNE FAIL    ; Jump if result not good
E3C1 2A 1F FB            LDA CARRY   ; Read the Carry Status
E3C4 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E3C6 2B F8 00            JNE FAIL    ; Error if different
E3C9 30 A5               LDA #0xA5
E3CB 0D                  SRLA
E3CC 0D                  SRLA
E3CD 0D                  SRLA
E3CE 0D                  SRLA
E3CF 0D                  SRLA
E3D0 0D                  SRLA
E3D1 2D 02               CMPA #0x02
E3D3 2B F8 00            JNE FAIL    ; Jump if result not good
E3D6 2A 1F FB            LDA CARRY   ; Read the Carry Status
E3D9 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E3DB 2B F8 00            JNE FAIL    ; Error if different
E3DE 30 A5               LDA #0xA5
E3E0 0D                  SRLA
E3E1 0D                  SRLA
E3E2 0D                  SRLA
E3E3 0D                  SRLA
E3E4 0D                  SRLA
E3E5 0D                  SRLA
E3E6 0D                  SRLA
E3E7 2D 01               CMPA #0x01
E3E9 2B F8 00            JNE FAIL    ; Jump if result not good
E3EC 2A 1F FB            LDA CARRY   ; Read the Carry Status
E3EF 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E3F1 2B F8 00            JNE FAIL    ; Error if different
E3F4 30 A5               LDA #0xA5
E3F6 0D                  SRLA
E3F7 0D                  SRLA
E3F8 0D                  SRLA
E3F9 0D                  SRLA
E3FA 0D                  SRLA
E3FB 0D                  SRLA
E3FC 0D                  SRLA
E3FD 0D                  SRLA
E3FE 2D 00               CMPA #0x00
E400 2B F8 00            JNE FAIL    ; Jump if result not good
E403 2A 1F FB            LDA CARRY   ; Read the Carry Status
E406 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E408 2B F8 00            JNE FAIL    ; Error if different
E40B 30 A5               LDA #0xA5
E40D 0D                  SRLA
E40E 0D                  SRLA
E40F 0D                  SRLA
E410 0D                  SRLA
E411 0D                  SRLA
E412 0D                  SRLA
E413 0D                  SRLA
E414 0D                  SRLA
E415 0D                  SRLA
E416 2D 00               CMPA #0x00
E418 2B F8 00            JNE FAIL    ; Jump if result not good
E41B 2A 1F FB            LDA CARRY   ; Read the Carry Status
E41E 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E420 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.0E SLLA Shift Left Logical on Reg A
                         ;       SLAA Shift Left Arithmetic on Reg A (SLAA same as SLLA)
                         ;            C <- b7 b6 b5 b4 b3 b2 b1 b0 <- 0
                         ; --------------------------------------------------------------------
E423 30 0E      TSTOP0E  LDA #0x0E
E425 19                  NOTA
E426 31 C0 00            STA LEDPORT ; Output to LED port
E429 30 A5               LDA #0xA5
E42B 0E                  SLLA
E42C 2D 4A               CMPA #0x4A
E42E 2B F8 00            JNE FAIL    ; Jump if result not good
E431 2A 1F FB            LDA CARRY   ; Read the Carry Status
E434 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E436 2B F8 00            JNE FAIL    ; Error if different
E439 30 A5               LDA #0xA5
E43B 0E                  SLLA
E43C 0E                  SLLA
E43D 2D 94               CMPA #0x94
E43F 2B F8 00            JNE FAIL    ; Jump if result not good
E442 2A 1F FB            LDA CARRY   ; Read the Carry Status
E445 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E447 2B F8 00            JNE FAIL    ; Error if different
E44A 30 A5               LDA #0xA5
E44C 0E                  SLLA
E44D 0E                  SLLA
E44E 0E                  SLLA
E44F 2D 28               CMPA #0x28
E451 2B F8 00            JNE FAIL    ; Jump if result not good
E454 2A 1F FB            LDA CARRY   ; Read the Carry Status
E457 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E459 2B F8 00            JNE FAIL    ; Error if different
E45C 30 A5               LDA #0xA5
E45E 0E                  SLLA
E45F 0E                  SLLA
E460 0E                  SLLA
E461 0E                  SLLA
E462 2D 50               CMPA #0x50
E464 2B F8 00            JNE FAIL    ; Jump if result not good
E467 2A 1F FB            LDA CARRY   ; Read the Carry Status
E46A 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E46C 2B F8 00            JNE FAIL    ; Error if different
E46F 30 A5               LDA #0xA5
E471 0E                  SLLA
E472 0E                  SLLA
E473 0E                  SLLA
E474 0E                  SLLA
E475 0E                  SLLA
E476 2D A0               CMPA #0xA0
E478 2B F8 00            JNE FAIL    ; Jump if result not good
E47B 2A 1F FB            LDA CARRY   ; Read the Carry Status
E47E 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E480 2B F8 00            JNE FAIL    ; Error if different
E483 30 A5               LDA #0xA5
E485 0E                  SLLA
E486 0E                  SLLA
E487 0E                  SLLA
E488 0E                  SLLA
E489 0E                  SLLA
E48A 0E                  SLAA
E48B 2D 40               CMPA #0x40
E48D 2B F8 00            JNE FAIL    ; Jump if result not good
E490 2A 1F FB            LDA CARRY   ; Read the Carry Status
E493 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E495 2B F8 00            JNE FAIL    ; Error if different
E498 30 A5               LDA #0xA5
E49A 0E                  SLLA
E49B 0E                  SLLA
E49C 0E                  SLLA
E49D 0E                  SLLA
E49E 0E                  SLLA
E49F 0E                  SLAA
E4A0 0E                  SLAA
E4A1 2D 80               CMPA #0x80
E4A3 2B F8 00            JNE FAIL    ; Jump if result not good
E4A6 2A 1F FB            LDA CARRY   ; Read the Carry Status
E4A9 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E4AB 2B F8 00            JNE FAIL    ; Error if different
E4AE 30 A5               LDA #0xA5
E4B0 0E                  SLLA
E4B1 0E                  SLLA
E4B2 0E                  SLLA
E4B3 0E                  SLLA
E4B4 0E                  SLLA
E4B5 0E                  SLAA
E4B6 0E                  SLAA
E4B7 0E                  SLAA
E4B8 2D 00               CMPA #0x00
E4BA 2B F8 00            JNE FAIL    ; Jump if result not good
E4BD 2A 1F FB            LDA CARRY   ; Read the Carry Status
E4C0 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E4C2 2B F8 00            JNE FAIL    ; Error if different
E4C5 30 A5               LDA #0xA5
E4C7 0E                  SLLA
E4C8 0E                  SLLA
E4C9 0E                  SLLA
E4CA 0E                  SLLA
E4CB 0E                  SLLA
E4CC 0E                  SLAA
E4CD 0E                  SLAA
E4CE 0E                  SLAA
E4CF 0E                  SLAA
E4D0 2D 00               CMPA #0x00
E4D2 2B F8 00            JNE FAIL    ; Jump if result not good
E4D5 2A 1F FB            LDA CARRY   ; Read the Carry Status
E4D8 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E4DA 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.0F 
                         ; JRNC Jump Relatif if Not Carry
                         ; --------------------------------------------------------------------
E4DD 30 0F      TSTOP0F  LDA #0x0F
E4DF 19                  NOTA
E4E0 31 C0 00            STA LEDPORT ; Output to LED port
E4E3 30 00               LDA #0x00   ; Clear carry
E4E5 31 1F FB            STA CARRY
E4E8 0F 03               JRNC TST0F_0
E4EA 32 F8 00            JMP FAIL
E4ED 30 01      TST0F_0  LDA #0x01   ; Set carry
E4EF 31 1F FB            STA CARRY
E4F2 0F 03               JRNC TST0F_1
E4F4 32 E4 FA            JMP TST0F_2
E4F7 32 F8 00   TST0F_1  JMP FAIL
E4FA 09         TST0F_2  NOP
                         ; --------------------------------------------------------------------
                         ; OP.10  RRCA   Rotate Right Logical Reg A through Carry 
                         ;               C -> b7 b6 b5 b4 b3 b2 b1 b0 -> C  
                         ; --------------------------------------------------------------------
E4FB 30 10      TSTOP10  LDA #0x10
E4FD 19                  NOTA
E4FE 31 C0 00            STA LEDPORT ; Output to LED port
E501 30 00               LDA #0x00   ; Clear Carry
E503 31 1F FB            STA CARRY
E506 10                  RRCA
E507 2D 00               CMPA #0x00
E509 2B F8 00            JNE FAIL
E50C 30 00               LDA #0x00   ; Clear Carry
E50E 31 1F FB            STA CARRY
E511 10                  RRCA
E512 2A 1F FB            LDA CARRY
E515 2D 00               CMPA #0x00
E517 2B F8 00            JNE FAIL
E51A 30 AA               LDA #0xAA   ; Test shifting
E51C 10                  RRCA
E51D 2D 55               CMPA #0x55
E51F 2B F8 00            JNE FAIL
E522 30 01               LDA #0x01   ; Test transfer of bit <0> to carry
E524 10                  RRCA
E525 2A 1F FB            LDA CARRY
E528 2D 01               CMPA #0x01
E52A 2B F8 00            JNE FAIL
E52D 30 00               LDA #0x00   ; Test A become 0 after shifting when carry is 0
E52F 31 1F FB            STA CARRY   ; insure carry is clear
E532 30 01               LDA #0x01   ; set bit <0> to '1'
E534 10                  RRCA
E535 2D 00               CMPA #0x00
E537 2B F8 00            JNE FAIL
E53A 30 00               LDA #0x00   ; Test bit <0> goes to bit <7> after 2 RRCA
E53C 31 1F FB            STA CARRY   ; insure carry is clear
E53F 30 01               LDA #0x01
E541 10                  RRCA
E542 10                  RRCA
E543 2D 80               CMPA #0x80
E545 2B F8 00            JNE FAIL
E548 10                  RRCA        ; continue rotating this bit
E549 2D 40               CMPA #0x40
E54B 2B F8 00            JNE FAIL
E54E 10                  RRCA
E54F 2D 20               CMPA #0x20
E551 2B F8 00            JNE FAIL
E554 10                  RRCA
E555 2D 10               CMPA #0x10
E557 2B F8 00            JNE FAIL
E55A 10                  RRCA
E55B 2D 08               CMPA #0x08
E55D 2B F8 00            JNE FAIL
E560 10                  RRCA
E561 2D 04               CMPA #0x04
E563 2B F8 00            JNE FAIL
E566 10                  RRCA
E567 2D 02               CMPA #0x02
E569 2B F8 00            JNE FAIL
E56C 10                  RRCA
E56D 2D 01               CMPA #0x01
E56F 2B F8 00            JNE FAIL
E572 10                  RRCA
E573 2D 00               CMPA #0x00
E575 2B F8 00            JNE FAIL
E578 10                  RRCA
E579 2D 80               CMPA #0x80
E57B 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.11  RCF   Reset Carry Flag   C <- 0
                         ; --------------------------------------------------------------------
E57E 30 11      TSTOP11  LDA #0x11
E580 19                  NOTA
E581 31 C0 00            STA LEDPORT ; Output to LED port
E584 30 01               LDA #0x01   ; Set carry flag to 1
E586 31 1F FB            STA CARRY
E589 11                  RCF         ; Reset Carry Flag 
E58A 2A 1F FB            LDA CARRY   ; Check carry is now cleared
E58D 2D 00               CMPA #0x00
E58F 2B F8 00            JNE FAIL
E592 11                  RCF         ; Do again a Reset Carry Flag 
E593 2A 1F FB            LDA CARRY   ; Check carry is still cleared
E596 2D 00               CMPA #0x00
E598 2B F8 00            JNE FAIL
E59B 30 A5               LDA #0xA5   ; Check register A is not affected by a Reset Carry Flag
E59D 11                  RCF         ; Reset Carry Flag
E59E 2D A5               CMPA #0xA5  ; If A value not same then fail
E5A0 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.12  SCF   Set Carry Flag   C <- 1
                         ; --------------------------------------------------------------------
E5A3 30 12      TSTOP12  LDA #0x12
E5A5 19                  NOTA
E5A6 31 C0 00            STA LEDPORT ; Output to LED port
E5A9 30 00               LDA #0x00   ; Clear carry flag
E5AB 31 1F FB            STA CARRY
E5AE 12                  SCF         ; Set Carry Flag 
E5AF 2A 1F FB            LDA CARRY   ; Check carry is set
E5B2 2D 01               CMPA #0x01
E5B4 2B F8 00            JNE FAIL
E5B7 12                  SCF         ; Set Carry Flag again
E5B8 2A 1F FB            LDA CARRY   ; Check carry is still set
E5BB 2D 01               CMPA #0x01
E5BD 2B F8 00            JNE FAIL
E5C0 30 BE               LDA #0xBE   ; Check register A is not affected by a Set Carry Flag
E5C2 12                  SCF         ; Set Carry Flag
E5C3 2D BE               CMPA #0xBE  ; If A value not same then fail
E5C5 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.13  DECXL   Decrement XL   E updated
                         ; --------------------------------------------------------------------
E5C8 30 13      TSTOP13  LDA #0x13
E5CA 19                  NOTA
E5CB 31 C0 00            STA LEDPORT ; Output to LED port
E5CE 04 FF FF            LDX #0xFFFF
E5D1 13                  DECXL
E5D2 2A 1F F3            LDA XH
E5D5 2D FF               CMPA #0xFF
E5D7 2B F8 00            JNE FAIL
E5DA 2A 1F F4            LDA XL
E5DD 2D FE               CMPA #0xFE
E5DF 2B F8 00            JNE FAIL
E5E2 13                  DECXL
E5E3 2A 1F F3            LDA XH
E5E6 2D FF               CMPA #0xFF
E5E8 2B F8 00            JNE FAIL
E5EB 2A 1F F4            LDA XL
E5EE 2D FD               CMPA #0xFD
E5F0 2B F8 00            JNE FAIL
E5F3 04 A5 02            LDX #0xA502
E5F6 13                  DECXL
E5F7 2A 1F F3            LDA XH
E5FA 2D A5               CMPA #0xA5
E5FC 2B F8 00            JNE FAIL
E5FF 2A 1F F4            LDA XL
E602 2D 01               CMPA #0x01
E604 2B F8 00            JNE FAIL
E607 13                  DECXL
E608 2A 1F F3            LDA XH
E60B 2D A5               CMPA #0xA5
E60D 2B F8 00            JNE FAIL
E610 2A 1F F4            LDA XL
E613 2D 00               CMPA #0x00
E615 2B F8 00            JNE FAIL
E618 13                  DECXL
E619 2A 1F F3            LDA XH
E61C 2D A5               CMPA #0xA5
E61E 2B F8 00            JNE FAIL
E621 2A 1F F4            LDA XL
E624 2D FF               CMPA #0xFF
E626 2B F8 00            JNE FAIL
E629 13                  DECXL 
E62A 2A 1F F3            LDA XH
E62D 2D A5               CMPA #0xA5
E62F 2B F8 00            JNE FAIL
E632 2A 1F F4            LDA XL
E635 2D FE               CMPA #0xFE
E637 2B F8 00            JNE FAIL
E63A 04 00 02            LDX #0x0002 ; Check E status
E63D 13                  DECXL
E63E 2A 1F FA            LDA EQUAL
E641 2D 00               CMPA #0x00
E643 2B F8 00            JNE FAIL
E646 04 00 01            LDX #0x0001
E649 13                  DECXL
E64A 2A 1F FA            LDA EQUAL
E64D 2D 01               CMPA #0x01
E64F 2B F8 00            JNE FAIL
E652 04 FF FF            LDX #0xFFFF
E655 13                  DECXL
E656 2A 1F FA            LDA EQUAL
E659 2D 00               CMPA #0x00
E65B 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.14  RRC 0x****   Rotate Right Logical Address location through Carry 
                         ;                     C -> b7 b6 b5 b4 b3 b2 b1 b0 -> C  
                         ; --------------------------------------------------------------------
E65E 30 14      TSTOP14  LDA #0x14
E660 19                  NOTA
E661 31 C0 00            STA LEDPORT ; Output to LED port
E664 30 00               LDA #0x00   ; Clear Carry
E666 31 1F FB            STA CARRY
E669 31 00 0F            STA ?b0
E66C 14 00 0F            RRC ?b0
E66F 2A 00 0F            LDA ?b0
E672 2D 00               CMPA #0x00
E674 2B F8 00            JNE FAIL
E677 30 00               LDA #0x00   ; Clear Carry
E679 31 1F FB            STA CARRY
E67C 31 00 0F            STA ?b0
E67F 14 00 0F            RRC ?b0
E682 2A 1F FB            LDA CARRY
E685 2D 00               CMPA #0x00
E687 2B F8 00            JNE FAIL
E68A 30 AA               LDA #0xAA   ; Test shifting
E68C 31 00 0F            STA ?b0
E68F 14 00 0F            RRC ?b0
E692 2A 00 0F            LDA ?b0
E695 2D 55               CMPA #0x55
E697 2B F8 00            JNE FAIL
E69A 30 01               LDA #0x01   ; Test transfer of bit <0> to carry
E69C 31 00 0F            STA ?b0
E69F 14 00 0F            RRC ?b0
E6A2 2A 1F FB            LDA CARRY
E6A5 2D 01               CMPA #0x01
E6A7 2B F8 00            JNE FAIL
E6AA 30 00               LDA #0x00   ; Test A become 0 after shifting when carry is 0
E6AC 31 1F FB            STA CARRY   ; insure carry is clear
E6AF 30 01               LDA #0x01   ; set bit <0> to '1'
E6B1 31 00 0F            STA ?b0
E6B4 14 00 0F            RRC ?b0
E6B7 2A 00 0F            LDA ?b0
E6BA 2D 00               CMPA #0x00
E6BC 2B F8 00            JNE FAIL
E6BF 30 00               LDA #0x00   ; Test bit <0> goes to bit <7> after 2 RRCA
E6C1 31 1F FB            STA CARRY   ; insure carry is clear
E6C4 30 01               LDA #0x01
E6C6 31 00 0F            STA ?b0
E6C9 14 00 0F            RRC ?b0
E6CC 14 00 0F            RRC ?b0
E6CF 2A 00 0F            LDA ?b0
E6D2 2D 80               CMPA #0x80
E6D4 2B F8 00            JNE FAIL
E6D7 14 00 0F            RRC ?b0     ; continue rotating this bit
E6DA 2A 00 0F            LDA ?b0
E6DD 2D 40               CMPA #0x40
E6DF 2B F8 00            JNE FAIL
E6E2 14 00 0F            RRC ?b0
E6E5 2A 00 0F            LDA ?b0
E6E8 2D 20               CMPA #0x20
E6EA 2B F8 00            JNE FAIL
E6ED 14 00 0F            RRC ?b0
E6F0 2A 00 0F            LDA ?b0
E6F3 2D 10               CMPA #0x10
E6F5 2B F8 00            JNE FAIL
E6F8 14 00 0F            RRC ?b0
E6FB 2A 00 0F            LDA ?b0
E6FE 2D 08               CMPA #0x08
E700 2B F8 00            JNE FAIL
E703 14 00 0F            RRC ?b0
E706 2A 00 0F            LDA ?b0
E709 2D 04               CMPA #0x04
E70B 2B F8 00            JNE FAIL
E70E 14 00 0F            RRC ?b0
E711 2A 00 0F            LDA ?b0
E714 2D 02               CMPA #0x02
E716 2B F8 00            JNE FAIL
E719 14 00 0F            RRC ?b0
E71C 2A 00 0F            LDA ?b0
E71F 2D 01               CMPA #0x01
E721 2B F8 00            JNE FAIL
E724 14 00 0F            RRC ?b0
E727 2A 00 0F            LDA ?b0
E72A 2D 00               CMPA #0x00
E72C 2B F8 00            JNE FAIL
E72F 14 00 0F            RRC ?b0
E732 2A 00 0F            LDA ?b0
E735 2D 80               CMPA #0x80
E737 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.15 SRL 0x****   Shift Right Logical on Address
                         ;                    0 -> b7 b6 b5 b4 b3 b2 b1 b0 -> C
                         ; --------------------------------------------------------------------
E73A 30 15      TSTOP15  LDA #0x15
E73C 19                  NOTA
E73D 31 C0 00            STA LEDPORT ; Output to LED port
E740 30 A5               LDA #0xA5
E742 31 00 0F            STA ?b0
E745 15 00 0F            SRL ?b0
E748 2A 00 0F            LDA ?b0
E74B 2D 52               CMPA #0x52
E74D 2B F8 00            JNE FAIL    ; Jump if result not good
E750 2A 1F FB            LDA CARRY   ; Read the Carry Status
E753 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E755 2B F8 00            JNE FAIL    ; Error if different
E758 30 A5               LDA #0xA5
E75A 31 00 0F            STA ?b0
E75D 15 00 0F            SRL ?b0
E760 15 00 0F            SRL ?b0
E763 2A 00 0F            LDA ?b0
E766 2D 29               CMPA #0x29
E768 2B F8 00            JNE FAIL    ; Jump if result not good
E76B 2A 1F FB            LDA CARRY   ; Read the Carry Status
E76E 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E770 2B F8 00            JNE FAIL    ; Error if different
E773 30 A5               LDA #0xA5
E775 31 00 0F            STA ?b0
E778 15 00 0F            SRL ?b0
E77B 15 00 0F            SRL ?b0
E77E 15 00 0F            SRL ?b0
E781 2A 00 0F            LDA ?b0
E784 2D 14               CMPA #0x14
E786 2B F8 00            JNE FAIL    ; Jump if result not good
E789 2A 1F FB            LDA CARRY   ; Read the Carry Status
E78C 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E78E 2B F8 00            JNE FAIL    ; Error if different
E791 30 A5               LDA #0xA5
E793 31 00 0F            STA ?b0
E796 15 00 0F            SRL ?b0
E799 15 00 0F            SRL ?b0
E79C 15 00 0F            SRL ?b0
E79F 15 00 0F            SRL ?b0
E7A2 2A 00 0F            LDA ?b0
E7A5 2D 0A               CMPA #0x0A
E7A7 2B F8 00            JNE FAIL    ; Jump if result not good
E7AA 2A 1F FB            LDA CARRY   ; Read the Carry Status
E7AD 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E7AF 2B F8 00            JNE FAIL    ; Error if different
E7B2 30 A5               LDA #0xA5
E7B4 31 00 0F            STA ?b0
E7B7 15 00 0F            SRL ?b0
E7BA 15 00 0F            SRL ?b0
E7BD 15 00 0F            SRL ?b0
E7C0 15 00 0F            SRL ?b0
E7C3 15 00 0F            SRL ?b0
E7C6 2A 00 0F            LDA ?b0
E7C9 2D 05               CMPA #0x05
E7CB 2B F8 00            JNE FAIL    ; Jump if result not good
E7CE 2A 1F FB            LDA CARRY   ; Read the Carry Status
E7D1 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E7D3 2B F8 00            JNE FAIL    ; Error if different
E7D6 30 A5               LDA #0xA5
E7D8 31 00 0F            STA ?b0
E7DB 15 00 0F            SRL ?b0
E7DE 15 00 0F            SRL ?b0
E7E1 15 00 0F            SRL ?b0
E7E4 15 00 0F            SRL ?b0
E7E7 15 00 0F            SRL ?b0
E7EA 15 00 0F            SRL ?b0
E7ED 2A 00 0F            LDA ?b0
E7F0 2D 02               CMPA #0x02
E7F2 2B F8 00            JNE FAIL    ; Jump if result not good
E7F5 2A 1F FB            LDA CARRY   ; Read the Carry Status
E7F8 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E7FA 2B F8 00            JNE FAIL    ; Error if different
E7FD 30 A5               LDA #0xA5
E7FF 31 00 0F            STA ?b0
E802 15 00 0F            SRL ?b0
E805 15 00 0F            SRL ?b0
E808 15 00 0F            SRL ?b0
E80B 15 00 0F            SRL ?b0
E80E 15 00 0F            SRL ?b0
E811 15 00 0F            SRL ?b0
E814 15 00 0F            SRL ?b0
E817 2A 00 0F            LDA ?b0
E81A 2D 01               CMPA #0x01
E81C 2B F8 00            JNE FAIL    ; Jump if result not good
E81F 2A 1F FB            LDA CARRY   ; Read the Carry Status
E822 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E824 2B F8 00            JNE FAIL    ; Error if different
E827 30 A5               LDA #0xA5
E829 31 00 0F            STA ?b0
E82C 15 00 0F            SRL ?b0
E82F 15 00 0F            SRL ?b0
E832 15 00 0F            SRL ?b0
E835 15 00 0F            SRL ?b0
E838 15 00 0F            SRL ?b0
E83B 15 00 0F            SRL ?b0
E83E 15 00 0F            SRL ?b0
E841 15 00 0F            SRL ?b0
E844 2A 00 0F            LDA ?b0
E847 2D 00               CMPA #0x00
E849 2B F8 00            JNE FAIL    ; Jump if result not good
E84C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E84F 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E851 2B F8 00            JNE FAIL    ; Error if different
E854 30 A5               LDA #0xA5
E856 31 00 0F            STA ?b0
E859 15 00 0F            SRL ?b0
E85C 15 00 0F            SRL ?b0
E85F 15 00 0F            SRL ?b0
E862 15 00 0F            SRL ?b0
E865 15 00 0F            SRL ?b0
E868 15 00 0F            SRL ?b0
E86B 15 00 0F            SRL ?b0
E86E 15 00 0F            SRL ?b0
E871 15 00 0F            SRL ?b0
E874 2A 00 0F            LDA ?b0
E877 2D 00               CMPA #0x00
E879 2B F8 00            JNE FAIL    ; Jump if result not good
E87C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E87F 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E881 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.16 STX 0x****   STORE X REGISTER TO ADDRESS
                         ; --------------------------------------------------------------------
E884 30 16      TSTOP16  LDA #0x16
E886 19                  NOTA
E887 31 C0 00            STA LEDPORT ; Output to LED port
E88A 04 12 34            LDX #0x1234 ; Test a STX using immediate Hex address value
E88D 16 00 00            STX 0x0000  
E890 2A 00 00            LDA 0x0000
E893 2D 12               CMPA #0x12
E895 2B F8 00            JNE FAIL
E898 2A 00 01            LDA 0x0001
E89B 2D 34               CMPA #0x34
E89D 2B F8 00            JNE FAIL
E8A0 04 CA FE            LDX #0xCAFE ; Test a STX at address boundary requiring a carry to MSB
E8A3 16 10 FF            STX 0x10FF  
E8A6 2A 10 FF            LDA 0x10FF
E8A9 2D CA               CMPA #0xCA
E8AB 2B F8 00            JNE FAIL
E8AE 2A 11 00            LDA 0x1100
E8B1 2D FE               CMPA #0xFE
E8B3 2B F8 00            JNE FAIL
E8B6 04 BE EF            LDX #0xBEEF ; Test a STX on another boundary
E8B9 16 12 FF            STX 0x12FF  
E8BC 2A 12 FF            LDA 0x12FF
E8BF 2D BE               CMPA #0xBE
E8C1 2B F8 00            JNE FAIL
E8C4 2A 13 00            LDA 0x1300
E8C7 2D EF               CMPA #0xEF
E8C9 2B F8 00            JNE FAIL
E8CC 04 67 89            LDX #0x6789 ; Test a STX using symbolic address
E8CF 16 00 0E            STX ?b1
E8D2 2A 00 0E            LDA ?b1
E8D5 2D 67               CMPA #0x67
E8D7 2B F8 00            JNE FAIL
E8DA 2A 00 0F            LDA ?b0
E8DD 2D 89               CMPA #0x89
E8DF 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.17 ORA #0x**   LOGICAL OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E8E2 30 17      TSTOP17  LDA #0x17
E8E4 19                  NOTA
E8E5 31 C0 00            STA LEDPORT ; Output to LED port
E8E8 30 FF               LDA #0xFF
E8EA 17 FF               ORA #0xFF
E8EC 2D FF               CMPA #0xFF
E8EE 2B F8 00            JNE FAIL
E8F1 30 00               LDA #0x00
E8F3 17 00               ORA #0x00
E8F5 2D 00               CMPA #0x00
E8F7 2B F8 00            JNE FAIL
E8FA 30 25               LDA #0x25
E8FC 17 D3               ORA #0xD3
E8FE 2D F7               CMPA #0xF7
E900 2B F8 00            JNE FAIL
E903 30 00               LDA #0x00
E905 17 FF               ORA #0xFF
E907 2D FF               CMPA #0xFF
E909 2B F8 00            JNE FAIL
E90C 30 FF               LDA #0xFF
E90E 17 00               ORA #0x00
E910 2D FF               CMPA #0xFF
E912 2B F8 00            JNE FAIL
E915 30 14               LDA #0x14
E917 17 C1               ORA #0xC1
E919 2D D5               CMPA #0xD5
E91B 2B F8 00            JNE FAIL
E91E 30 AA               LDA #0xAA
E920 17 55               ORA #0x55
E922 2D FF               CMPA #0xFF
E924 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.18 XORA #0x**  EXCLUSIVE OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E927 30 18      TSTOP18  LDA #0x18
E929 19                  NOTA
E92A 31 C0 00            STA LEDPORT ; Output to LED port
E92D 30 00               LDA #0x00
E92F 18 00               XORA #0x00
E931 2D 00               CMPA #0x00
E933 2B F8 00            JNE FAIL
E936 30 00               LDA #0x00
E938 18 FF               XORA #0xFF
E93A 2D FF               CMPA #0xFF
E93C 2B F8 00            JNE FAIL
E93F 30 FF               LDA #0xFF
E941 18 FF               XORA #0xFF
E943 2D 00               CMPA #0x00
E945 2B F8 00            JNE FAIL
E948 30 FF               LDA #0xFF
E94A 18 55               XORA #0x55
E94C 2D AA               CMPA #0xAA
E94E 2B F8 00            JNE FAIL
E951 30 CE               LDA #0xCE
E953 18 5A               XORA #0x5A
E955 2D 94               CMPA #0x94
E957 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.19 NOTA  LOGIC NOT ON REG A
                         ; --------------------------------------------------------------------
E95A 30 19      TSTOP19  LDA #0x19
E95C 19                  NOTA
E95D 31 C0 00            STA LEDPORT ; Output to LED port
E960 30 00               LDA #0x00
E962 19                  NOTA
E963 2D FF               CMPA #0xFF
E965 2B F8 00            JNE FAIL
E968 19                  NOTA
E969 2D 00               CMPA #0x00
E96B 2B F8 00            JNE FAIL
E96E 30 55               LDA #0x55
E970 19                  NOTA
E971 2D AA               CMPA #0xAA
E973 2B F8 00            JNE FAIL
E976 19                  NOTA
E977 2D 55               CMPA #0x55
E979 2B F8 00            JNE FAIL
E97C 19                  NOTA
E97D 2D AA               CMPA #0xAA
E97F 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.1A CMPX 0x****   COMPARE X to immediate value
                         ; --------------------------------------------------------------------
E982 30 1A      TSTOP1A  LDA #0x1A
E984 19                  NOTA
E985 31 C0 00            STA LEDPORT ; Output to LED port
E988 04 00 00            LDX #0x0000 ; Load 0x0000 in X  (Testing with immediate hex value)
E98B 1A 00 00            CMPX #0x0000
E98E 2B F8 00            JNE FAIL
E991 1A 00 01            CMPX #0x0001
E994 2C F8 00            JEQ FAIL
E997 1A FF FF            CMPX #0xFFFF
E99A 2C F8 00            JEQ FAIL
E99D 04 FF 00            LDX #0xFF00 ; Load 0xFF00 in X
E9A0 1A FF 00            CMPX #0xFF00
E9A3 2B F8 00            JNE FAIL
E9A6 1A 00 FF            CMPX #0x00FF
E9A9 2C F8 00            JEQ FAIL
E9AC 1A FF FF            CMPX #0xFFFF
E9AF 2C F8 00            JEQ FAIL
E9B2 04 00 FF            LDX #0x00FF ; Load 0x00FF in X
E9B5 1A 00 FF            CMPX #0x00FF
E9B8 2B F8 00            JNE FAIL
E9BB 1A FF 00            CMPX #0xFF00
E9BE 2C F8 00            JEQ FAIL
E9C1 1A FF FF            CMPX #0xFFFF
E9C4 2C F8 00            JEQ FAIL
E9C7 04 FF FF            LDX #0xFFFF ; Load 0xFFFF in X
E9CA 1A FF FF            CMPX #0xFFFF
E9CD 2B F8 00            JNE FAIL
E9D0 1A FF 00            CMPX #0xFF00
E9D3 2C F8 00            JEQ FAIL
E9D6 1A 00 FF            CMPX #0x00FF
E9D9 2C F8 00            JEQ FAIL
E9DC 04 AE C3            LDX #0xAEC3 ; Load 0xAEC3 in X
E9DF 1A AE C3            CMPX #0xAEC3
E9E2 2B F8 00            JNE FAIL
E9E5 1A AE DB            CMPX #0xAEDB
E9E8 2C F8 00            JEQ FAIL
E9EB 1A 12 C3            CMPX #0x12C3
E9EE 2C F8 00            JEQ FAIL
E9F1 1A FF FF            CMPX #0xFFFF
E9F4 2C F8 00            JEQ FAIL
                         ; --------------------------------------------------------------------
                         ; OP.29 ADDA 0x****  
                         ; ADD A WITH BYTE AT ADDRESS, C UPDATE
                         ; --------------------------------------------------------------------
E9F7 30 29      TSTOP29  LDA #0x29
E9F9 19                  NOTA
E9FA 31 C0 00            STA LEDPORT ; Output to LED port
E9FD 30 5F               LDA #0x5F   ; Store a value in RAM
E9FF 31 01 23            STA 0x0123   
EA02 30 63               LDA #0x63
EA04 29 01 23            ADDA 0x0123 ; Add to A the byte at address location
EA07 2D C2               CMPA #0xC2  ; Check the sum
EA09 2B F8 00            JNE FAIL    ; Jump if result not good
EA0C 2A 1F FB            LDA CARRY   ; Read the Carry Status
EA0F 2D 00               CMPA #0x00  ; No carry expected then C should be '0'
EA11 2B F8 00            JNE FAIL    ; Error if carry is set

EA14 30 AC               LDA #0xAC   ; Store another value in RAM
EA16 31 10 56            STA 0x1056   
EA19 30 D9               LDA #0xD9
EA1B 29 10 56            ADDA 0x1056 ; Add to A the byte at address location
EA1E 2D 85               CMPA #0x85  ; Check the sum LSB
EA20 2B F8 00            JNE FAIL    ; Jump if result not as expected
EA23 2A 1F FB            LDA CARRY   ; Read the Carry Status
EA26 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
EA28 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.2A LDA 0x****  
                         ; LOAD A WITH BYTE AT ADDRESS Test LDA #0x** instruction 
                         ; --------------------------------------------------------------------
EA2B 30 2A      TSTOP2A  LDA #0x2A
EA2D 19                  NOTA
EA2E 31 C0 00            STA LEDPORT ; Output to LED port
EA31 30 AA               LDA #0xAA   ; Load immediate in register A
EA33 2D AA               CMPA #0xAA
EA35 2B F8 00            JNE FAIL
EA38 30 01               LDA #0x01
EA3A 2D 01               CMPA #0x01
EA3C 2B F8 00            JNE FAIL
EA3F 30 02               LDA #0x02
EA41 2D 02               CMPA #0x02
EA43 2B F8 00            JNE FAIL
EA46 30 04               LDA #0x04
EA48 2D 04               CMPA #0x04
EA4A 2B F8 00            JNE FAIL
EA4D 30 08               LDA #0x08
EA4F 2D 08               CMPA #0x08
EA51 2B F8 00            JNE FAIL
EA54 30 10               LDA #0x10
EA56 2D 10               CMPA #0x10
EA58 2B F8 00            JNE FAIL
EA5B 30 20               LDA #0x20
EA5D 2D 20               CMPA #0x20
EA5F 2B F8 00            JNE FAIL
EA62 30 40               LDA #0x40
EA64 2D 40               CMPA #0x40
EA66 2B F8 00            JNE FAIL
EA69 30 80               LDA #0x80
EA6B 2D 80               CMPA #0x80
EA6D 2B F8 00            JNE FAIL
EA70 30 55               LDA #0x55
EA72 2D 55               CMPA #0x55
EA74 2B F8 00            JNE FAIL
EA77 30 FF               LDA #0xFF
EA79 2D FF               CMPA #0xFF
EA7B 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2B JNE 0x****  
                         ; JUMP IF E=0
                         ; Only a partial validation because i do not have symbolic address
                         ; processing in the assembler program.
                         ; --------------------------------------------------------------------
EA7E 30 2B      TSTOP2B  LDA #0x2B
EA80 19                  NOTA
EA81 31 C0 00            STA LEDPORT ; Output to LED port
EA84 30 6D               LDA #0x6D   ; Load a value in A
EA86 2D 6D               CMPA #0x6D  ; Compare with the same value
EA88 2B F8 00            JNE FAIL    ; Error if values are different
EA8B 30 10               LDA #0x10
EA8D 2D 10               CMPA #0x10
EA8F 2B F8 00            JNE FAIL
EA92 30 01               LDA #0x01
EA94 2D 01               CMPA #0x01
EA96 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2C JEQ 0x****
                         ; JUMP IF E=1
                         ; --------------------------------------------------------------------
EA99 30 2C      TST2C    LDA #0x2C
EA9B 19                  NOTA
EA9C 31 C0 00            STA LEDPORT ; Output to LED port
EA9F 30 7A               LDA #0x7A   ; Load a value in A
EAA1 2D 28               CMPA #0x28  ; Compare with a different value
EAA3 2C F8 00            JEQ FAIL    ; If appear identical then it's and error
EAA6 30 FE               LDA #0xFE   ; Again with adifference 
EAA8 2D FF               CMPA #0xFF
EAAA 2C F8 00            JEQ FAIL 
EAAD 30 01               LDA #0x01   ; Another with difference
EAAF 2D 10               CMPA #0x10
EAB1 2C F8 00            JEQ FAIL
EAB4 30 AB               LDA #0xAB   ; Now compare when values are identical
EAB6 2D AB               CMPA #0xAB
EAB8 2C EA BE            JEQ TST2C_1 ; Testing if equal?
EABB 32 F8 00            JMP FAIL    ; Result say both are not equal then it's a failure
EABE 30 00      TST2C_1  LDA #0x00   ; Result say the values are identical so we are passing
EAC0 2D 00               CMPA #0x00
EAC2 2C EA C8            JEQ TST2C_2 ; Testing if equal?
EAC5 32 F8 00            JMP FAIL    ; if different then it's a failure
EAC8 30 01      TST2C_2  LDA #0x01
EACA 2D 01               CMPA #0x01
EACC 2C EA D2            JEQ TST2C_3 ; Testing if equal?
EACF 32 F8 00            JMP FAIL    ; if different then it's a failure
EAD2 30 02      TST2C_3  LDA #0x02
EAD4 2D 02               CMPA #0x02
EAD6 2C EA DC            JEQ TST2C_4 ; Testing if equal?
EAD9 32 F8 00            JMP FAIL    ; if different then it's a failure
EADC 30 04      TST2C_4  LDA #0x04
EADE 2D 04               CMPA #0x04
EAE0 2C EA E6            JEQ TST2C_5 ; Testing if equal?
EAE3 32 F8 00            JMP FAIL    ; if different then it's a failure
EAE6 30 08      TST2C_5  LDA #0x08
EAE8 2D 08               CMPA #0x08
EAEA 2C EA F0            JEQ TST2C_6 ; Testing if equal?
EAED 32 F8 00            JMP FAIL    ; if different then it's a failure
EAF0 30 10      TST2C_6  LDA #0x10
EAF2 2D 10               CMPA #0x10
EAF4 2C EA FA            JEQ TST2C_7 ; Testing if equal?
EAF7 32 F8 00            JMP FAIL    ; if different then it's a failure
EAFA 30 20      TST2C_7  LDA #0x20
EAFC 2D 20               CMPA #0x20
EAFE 2C EB 04            JEQ TST2C_8 ; Testing if equal?
EB01 32 F8 00            JMP FAIL    ; if different then it's a failure         
EB04 30 40      TST2C_8  LDA #0x40
EB06 2D 40               CMPA #0x40
EB08 2C EB 0E            JEQ TST2C_9 ; Testing if equal?
EB0B 32 F8 00            JMP FAIL    ; if different then it's a failure         
EB0E 30 80      TST2C_9  LDA #0x80
EB10 2D 80               CMPA #0x80
EB12 2C EB 18            JEQ TST2C_10 ; Testing if equal?
EB15 32 F8 00            JMP FAIL    ; if different then it's a failure         
EB18 09         TST2C_10 NOP
                         ; --------------------------------------------------------------------
                         ; OP.2D CMPA #0x**
                         ; COMPARE A WITH IMMEDIATE VALUE    EQUAL STATUS BIT (E) UPDATED
                         ; --------------------------------------------------------------------
EB19 30 2D      TSTOP2D  LDA #0x2D
EB1B 19                  NOTA
EB1C 31 C0 00            STA LEDPORT ; Output to LED port
EB1F 30 12               LDA #0x12   ; Load a value in A
EB21 2D 12               CMPA #0x12  ; Compare with identical value
EB23 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS 
EB26 2D 01               CMPA #0x01  ; Verify bit<0> E = '1' and all others bits <7:1> are '0'    
EB28 2B F8 00            JNE FAIL    ; If different then it's and error
EB2B 30 AA               LDA #0xAA
EB2D 2D 55               CMPA #0x55  ; Compare with a different value
EB2F 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS
EB32 2D 00               CMPA #0x00  ; Verify bit<0> E = '0' and all others bits <7:1> are '0'    
EB34 2B F8 00            JNE FAIL    ; If different then it's and error
                         ; --------------------------------------------------------------------
                         ; OP.2E ADCA #0x**
                         ; REG A = REG A + IMMEDIATE BYTE + CARRY (C)   
                         ; CARRY STATUS (C) IS UPDATED
                         ; --------------------------------------------------------------------
EB37 30 2E      TSTOP2E  LDA #0x2E
EB39 19                  NOTA
EB3A 31 C0 00            STA LEDPORT ; Output to LED port
EB3D 30 00               LDA #0x00   ; Clear CARRY (C)
EB3F 31 1F FB            STA CARRY      
EB42 30 45               LDA #0x45
EB44 2E 5B               ADCA #0x5B
EB46 2D A0               CMPA #0xA0  ; Verify summ
EB48 2B F8 00            JNE FAIL
EB4B 2A 1F FB            LDA CARRY   ; Check carry
EB4E 2D 00               CMPA #0x00  ; Should be clear
EB50 2B F8 00            JNE FAIL

EB53 30 01               LDA #0x01   ; Set CARRY (C)
EB55 31 1F FB            STA CARRY
EB58 30 56               LDA #0x56
EB5A 2E 6D               ADCA #0x6D
EB5C 2D C4               CMPA #0xC4   ; Verify summ
EB5E 2B F8 00            JNE FAIL
EB61 2A 1F FB            LDA CARRY   ; Check carry
EB64 2D 00               CMPA #0x00  ; Should be clear
EB66 2B F8 00            JNE FAIL

EB69 30 00               LDA #0x00   ; Clear CARRY (C)
EB6B 31 1F FB            STA CARRY
EB6E 30 7F               LDA #0x7F
EB70 2E DE               ADCA #0xDE
EB72 2D 5D               CMPA #0x5D  ; Verify summ
EB74 2B F8 00            JNE FAIL
EB77 2A 1F FB            LDA CARRY   ; Check carry
EB7A 2D 01               CMPA #0x01  ; Should be set
EB7C 2B F8 00            JNE FAIL

EB7F 30 01               LDA #0x01H  ; Set CARRY (C)
EB81 31 1F FB            STA CARRY
EB84 30 FF               LDA #0xFF
EB86 2E FF               ADCA #0xFF
EB88 2D FF               CMPA #0xFF  ; Verify summ
EB8A 2B F8 00            JNE FAIL
EB8D 2A 1F FB            LDA CARRY   ; Check carry
EB90 2D 01               CMPA #0x01  ; Should be set
EB92 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2F ADDA #0x**
                         ; ACCA+M>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
EB95 30 2F      TSTOP2F  LDA #0x2F
EB97 19                  NOTA
EB98 31 C0 00            STA LEDPORT ; Output to LED port
EB9B 30 23               LDA #0x23
EB9D 2F 45               ADDA #0x45
EB9F 2D 68               CMPA #0x68
EBA1 2B F8 00            JNE FAIL
EBA4 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
EBA7 2D 00               CMPA #0x00  ; Expecting C=0
EBA9 2B F8 00            JNE FAIL
EBAC 30 8A               LDA #0x8A
EBAE 2F BD               ADDA #0xBD
EBB0 2D 47               CMPA #0x47   
EBB2 2B F8 00            JNE FAIL
EBB5 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
EBB8 2D 01               CMPA #0x01  ; Expecting C=1
EBBA 2B F8 00            JNE FAIL
EBBD 30 01               LDA #0x01
EBBF 2F 02               ADDA #0x02
EBC1 2D 03               CMPA #0x03
EBC3 2B F8 00            JNE FAIL
EBC6 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
EBC9 2D 00               CMPA #0x00  ; Expecting C=0
EBCB 2B F8 00            JNE FAIL
EBCE 30 FF               LDA #0xFF
EBD0 2F FF               ADDA #0xFF
EBD2 2D FE               CMPA #0xFE
EBD4 2B F8 00            JNE FAIL
EBD7 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
EBDA 2D 01               CMPA #0x01   ; Expecting C=1
EBDC 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.30 LDA #0x**  
                         ; LOAD IMMEDIATE VALUE IN REGISTER A
                         ; --------------------------------------------------------------------
EBDF 30 30      TSTOP30  LDA #0x30
EBE1 19                  NOTA
EBE2 31 C0 00            STA LEDPORT ; Output to LED port
EBE5 30 00               LDA #0x00
EBE7 2D 00               CMPA #0x00
EBE9 2B F8 00            JNE FAIL
EBEC 30 01               LDA #0x01
EBEE 2D 01               CMPA #0x01
EBF0 2B F8 00            JNE FAIL
EBF3 30 02               LDA #0x02
EBF5 2D 02               CMPA #0x02
EBF7 2B F8 00            JNE FAIL
EBFA 30 04               LDA #0x04
EBFC 2D 04               CMPA #0x04
EBFE 2B F8 00            JNE FAIL
EC01 30 08               LDA #0x08
EC03 2D 08               CMPA #0x08
EC05 2B F8 00            JNE FAIL
EC08 30 10               LDA #0x10
EC0A 2D 10               CMPA #0x10
EC0C 2B F8 00            JNE FAIL
EC0F 30 20               LDA #0x20
EC11 2D 20               CMPA #0x20
EC13 2B F8 00            JNE FAIL
EC16 30 40               LDA #0x40
EC18 2D 40               CMPA #0x40
EC1A 2B F8 00            JNE FAIL
EC1D 30 80               LDA #0x80
EC1F 2D 80               CMPA #0x80
EC21 2B F8 00            JNE FAIL
EC24 30 55               LDA #0x55
EC26 2D 55               CMPA #0x55
EC28 2B F8 00            JNE FAIL
EC2B 30 AA               LDA #0xAA
EC2D 2D AA               CMPA #0xAA
EC2F 2B F8 00            JNE FAIL
EC32 30 FF               LDA #0xFF
EC34 2D FF               CMPA #0xFF
EC36 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.31 STA 0x**** 
                         ; STORE REG.A TO ADDRESSE
                         ; --------------------------------------------------------------------
EC39 30 31      TSTOP31  LDA #0x31
EC3B 19                  NOTA
EC3C 31 C0 00            STA LEDPORT ; Output to LED port
EC3F 30 12               LDA #0x12   ; Write to RAM
EC41 31 00 00            STA 0x0000
EC44 30 23               LDA #0x23
EC46 31 00 01            STA 0x0001
EC49 30 34               LDA #0x34
EC4B 31 00 02            STA 0x0002
EC4E 30 45               LDA #0x45
EC50 31 00 04            STA 0x0004
EC53 30 56               LDA #0x56
EC55 31 00 08            STA 0x0008
EC58 30 67               LDA #0x67
EC5A 31 00 10            STA 0x0010
EC5D 30 78               LDA #0x78
EC5F 31 00 20            STA 0x0020
EC62 30 89               LDA #0x89
EC64 31 00 40            STA 0x0040
EC67 30 AB               LDA #0xAB
EC69 31 00 80            STA 0x0080
EC6C 30 BC               LDA #0xBC
EC6E 31 01 00            STA 0x0100
EC71 30 CD               LDA #0xCD
EC73 31 02 00            STA 0x0200
EC76 30 DE               LDA #0xDE
EC78 31 04 00            STA 0x0400
EC7B 30 22               LDA #0x22
EC7D 31 08 00            STA 0x0800
EC80 30 33               LDA #0x33
EC82 31 10 00            STA 0x1000
EC85 30 44               LDA #0x44
EC87 31 17 00            STA 0x1700
EC8A 2A 00 00            LDA 0x0000  ; Read from RAM and compare
EC8D 2D 12               CMPA #0x12
EC8F 2B F8 00            JNE FAIL
EC92 2A 00 01            LDA 0x0001
EC95 2D 23               CMPA #0x23
EC97 2B F8 00            JNE FAIL
EC9A 2A 00 02            LDA 0x0002
EC9D 2D 34               CMPA #0x34
EC9F 2B F8 00            JNE FAIL
ECA2 2A 00 04            LDA 0x0004
ECA5 2D 45               CMPA #0x45
ECA7 2B F8 00            JNE FAIL
ECAA 2A 00 08            LDA 0x0008
ECAD 2D 56               CMPA #0x56
ECAF 2B F8 00            JNE FAIL
ECB2 2A 00 10            LDA 0x0010
ECB5 2D 67               CMPA #0x67
ECB7 2B F8 00            JNE FAIL
ECBA 2A 00 20            LDA 0x0020
ECBD 2D 78               CMPA #0x78
ECBF 2B F8 00            JNE FAIL
ECC2 2A 00 40            LDA 0x0040
ECC5 2D 89               CMPA #0x89
ECC7 2B F8 00            JNE FAIL
ECCA 2A 00 80            LDA 0x0080
ECCD 2D AB               CMPA #0xAB
ECCF 2B F8 00            JNE FAIL
ECD2 2A 01 00            LDA 0x0100
ECD5 2D BC               CMPA #0xBC
ECD7 2B F8 00            JNE FAIL
ECDA 2A 02 00            LDA 0x0200
ECDD 2D CD               CMPA #0xCD
ECDF 2B F8 00            JNE FAIL
ECE2 2A 04 00            LDA 0x0400
ECE5 2D DE               CMPA #0xDE
ECE7 2B F8 00            JNE FAIL
ECEA 2A 08 00            LDA 0x0800
ECED 2D 22               CMPA #0x22
ECEF 2B F8 00            JNE FAIL
ECF2 2A 10 00            LDA 0x1000
ECF5 2D 33               CMPA #0x33
ECF7 2B F8 00            JNE FAIL
ECFA 2A 17 00            LDA 0x1700
ECFD 2D 44               CMPA #0x44
ECFF 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.32 JMP 0x**** 
                         ; JUMP INCONDITIONAL TO ADDRESS
                         ; --------------------------------------------------------------------
                         ;LDA #0x32
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.33 ANDA #0x**  REGISTER A AND LOGICAL IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
ED02 30 33      TSTOP33  LDA #0x33
ED04 19                  NOTA
ED05 31 C0 00            STA LEDPORT ; Output to LED port
ED08 30 FF               LDA #0xFF
ED0A 33 52               ANDA #0x52
ED0C 2D 52               CMPA #0x52
ED0E 2B F8 00            JNE FAIL
ED11 30 E7               LDA #0xE7
ED13 33 3C               ANDA #0x3C
ED15 2D 24               CMPA #0x24
ED17 2B F8 00            JNE FAIL
ED1A 30 00               LDA #0x00
ED1C 33 00               ANDA #0x00
ED1E 2D 00               CMPA #0x00
ED20 2B F8 00            JNE FAIL
ED23 30 FF               LDA #0xFF
ED25 33 FF               ANDA #0xFF
ED27 2D FF               CMPA #0xFF
ED29 2B F8 00            JNE FAIL
ED2C 30 FF               LDA #0xFF
ED2E 33 55               ANDA #0x55
ED30 2D 55               CMPA #0x55
ED32 2B F8 00            JNE FAIL
ED35 30 FF               LDA #0xFF
ED37 33 00               ANDA #0x00
ED39 2D 00               CMPA #0x00
ED3B 2B F8 00            JNE FAIL

                         ; --------------------------------------------------------------------
                         ; FIBONACCI TEST
                         ; --------------------------------------------------------------------         
ED3E 30 40      TSTFIBON LDA #0x40
ED40 19                  NOTA
ED41 31 C0 00            STA LEDPORT ; Output to LED port
                                     ;
ED44 30 00               LDA #0x00   ; Init first number with 00H
ED46 31 10 00            STA 0x1000
ED49 30 01               LDA #0x01   ; Init second number with 01H
ED4B 31 10 01            STA 0x1001
ED4E 2A 10 00            LDA 0x1000  ; Load first number in A
ED51 29 10 01            ADDA 0x1001 ; Add second number to A
ED54 31 10 02            STA 0x1002  ; Store the summ
ED57 2D 01               CMPA #0x01  ; HEX   Decimal  Real Value (in 8 bit storage only)
ED59 2B F8 00            JNE FAIL    ; x01   1        1

ED5C 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED5F 31 10 00            STA 0x1000
ED62 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED65 31 10 01            STA 0x1001
ED68 2A 10 00            LDA 0x1000  ; Load first number in A
ED6B 29 10 01            ADDA 0x1001 ; Add second number to A
ED6E 31 10 02            STA 0x1002  ; Store the summ
ED71 2D 02               CMPA #0x02  ; HEX   Decimal  Real Value
ED73 2B F8 00            JNE FAIL    ; x02   2        2

ED76 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED79 31 10 00            STA 0x1000
ED7C 2A 10 02            LDA 0x1002   ; Move summ to the second number
ED7F 31 10 01            STA 0x1001
ED82 2A 10 00            LDA 0x1000  ; Load first number in A
ED85 29 10 01            ADDA 0x1001 ; Add second number to A
ED88 31 10 02            STA 0x1002  ; Store the summ
ED8B 2D 03               CMPA #0x03  ; HEX   Decimal  Real Value
ED8D 2B F8 00            JNE FAIL    ; x03   3        3

ED90 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED93 31 10 00            STA 0x1000
ED96 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED99 31 10 01            STA 0x1001
ED9C 2A 10 00            LDA 0x1000  ; Load first number in A
ED9F 29 10 01            ADDA 0x1001 ; Add second number to A
EDA2 31 10 02            STA 0x1002  ; Store the summ
EDA5 2D 05               CMPA #0x05  ; HEX   Decimal  Real Value
EDA7 2B F8 00            JNE FAIL    ; x05   5        5

EDAA 2A 10 01            LDA 0x1001  ; Move second number to the first number
EDAD 31 10 00            STA 0x1000
EDB0 2A 10 02            LDA 0x1002  ; Move summ to the second number
EDB3 31 10 01            STA 0x1001
EDB6 2A 10 00            LDA 0x1000  ; Load first number in A
EDB9 29 10 01            ADDA 0x1001 ; Add second number to A
EDBC 31 10 02            STA 0x1002  ; Store the summ
EDBF 2D 08               CMPA #0x08  ; HEX   Decimal  Real Value
EDC1 2B F8 00            JNE FAIL    ; x08   8        8

EDC4 2A 10 01            LDA 0x1001  ; Move second number to the first number
EDC7 31 10 00            STA 0x1000
EDCA 2A 10 02            LDA 0x1002  ; Move summ to the second number
EDCD 31 10 01            STA 0x1001
EDD0 2A 10 00            LDA 0x1000  ; Load first number in A
EDD3 29 10 01            ADDA 0x1001 ; Add second number to A
EDD6 31 10 02            STA 0x1002  ; Store the summ
EDD9 2D 0D               CMPA #0x0D  ; HEX   Decimal  Real Value
EDDB 2B F8 00            JNE FAIL    ; x0D   13       13

EDDE 2A 10 01            LDA 0x1001  ; Move second number to the first number
EDE1 31 10 00            STA 0x1000
EDE4 2A 10 02            LDA 0x1002  ; Move summ to the second number
EDE7 31 10 01            STA 0x1001
EDEA 2A 10 00            LDA 0x1000  ; Load first number in A
EDED 29 10 01            ADDA 0x1001 ; Add second number to A
EDF0 31 10 02            STA 0x1002  ; Store the summ
EDF3 2D 15               CMPA #0x15  ; HEX   Decimal  Real Value
EDF5 2B F8 00            JNE FAIL    ; x15   21       21

EDF8 2A 10 01            LDA 0x1001  ; Move second number to the first number
EDFB 31 10 00            STA 0x1000
EDFE 2A 10 02            LDA 0x1002  ; Move summ to the second number
EE01 31 10 01            STA 0x1001
EE04 2A 10 00            LDA 0x1000  ; Load first number in A
EE07 29 10 01            ADDA 0x1001 ; Add second number to A
EE0A 31 10 02            STA 0x1002  ; Store the summ
EE0D 2D 22               CMPA #0x22  ; HEX   Decimal  Real Value
EE0F 2B F8 00            JNE FAIL    ; x22   34       34

EE12 2A 10 01            LDA 0x1001  ; Move second number to the first number
EE15 31 10 00            STA 0x1000
EE18 2A 10 02            LDA 0x1002  ; Move summ to the second number
EE1B 31 10 01            STA 0x1001
EE1E 2A 10 00            LDA 0x1000  ; Load first number in A
EE21 29 10 01            ADDA 0x1001 ; Add second number to A
EE24 31 10 02            STA 0x1002  ; Store the summ
EE27 2D 37               CMPA #0x37  ; HEX   Decimal  Real Value
EE29 2B F8 00            JNE FAIL    ; x37   55       55

EE2C 2A 10 01            LDA 0x1001  ; Move second number to the first number
EE2F 31 10 00            STA 0x1000
EE32 2A 10 02            LDA 0x1002  ; Move summ to the second number
EE35 31 10 01            STA 0x1001
EE38 2A 10 00            LDA 0x1000  ; Load first number in A
EE3B 29 10 01            ADDA 0x1001 ; Add second number to A
EE3E 31 10 02            STA 0x1002  ; Store the summ
EE41 2D 59               CMPA #0x59  ; HEX   Decimal  Real Value
EE43 2B F8 00            JNE FAIL    ; x59   89       89

EE46 2A 10 01            LDA 0x1001  ; Move second number to the first number
EE49 31 10 00            STA 0x1000
EE4C 2A 10 02            LDA 0x1002  ; Move summ to the second number
EE4F 31 10 01            STA 0x1001
EE52 2A 10 00            LDA 0x1000  ; Load first number in A
EE55 29 10 01            ADDA 0x1001 ; Add second number to A
EE58 31 10 02            STA 0x1002  ; Store the summ
EE5B 2D 90               CMPA #0x90  ; HEX   Decimal  Real Value
EE5D 2B F8 00            JNE FAIL    ; x90   144      144

EE60 2A 10 01            LDA 0x1001  ; Move second number to the first number
EE63 31 10 00            STA 0x1000
EE66 2A 10 02            LDA 0x1002  ; Move summ to the second number
EE69 31 10 01            STA 0x1001
EE6C 2A 10 00            LDA 0x1000  ; Load first number in A
EE6F 29 10 01            ADDA 0x1001 ; Add second number to A
EE72 31 10 02            STA 0x1002  ; Store the summ
EE75 2D E9               CMPA #0xE9  ; HEX   Decimal  Real Value
EE77 2B F8 00            JNE FAIL    ; xE9   233      233

EE7A 2A 10 01            LDA 0x1001  ; Move second number to the first number
EE7D 31 10 00            STA 0x1000
EE80 2A 10 02            LDA 0x1002  ; Move summ to the second number
EE83 31 10 01            STA 0x1001
EE86 2A 10 00            LDA 0x1000  ; Load first number in A
EE89 29 10 01            ADDA 0x1001 ; Add second number to A
EE8C 31 10 02            STA 0x1002  ; Store the summ
EE8F 2D 79               CMPA #0x79  ; HEX   Decimal  Real Value
EE91 2B F8 00            JNE FAIL    ; x79   121      377 - (256*1) = 121

EE94 2A 10 01            LDA 0x1001  ; Move second number to the first number
EE97 31 10 00            STA 0x1000
EE9A 2A 10 02            LDA 0x1002  ; Move summ to the second number
EE9D 31 10 01            STA 0x1001
EEA0 2A 10 00            LDA 0x1000  ; Load first number in A
EEA3 29 10 01            ADDA 0x1001 ; Add second number to A
EEA6 31 10 02            STA 0x1002  ; Store the summ
EEA9 2D 62               CMPA #0x62  ; HEX   Decimal  Real Value
EEAB 2B F8 00            JNE FAIL    ; x62   98       610 - (256*2) = 98

EEAE 2A 10 01            LDA 0x1001  ; Move second number to the first number
EEB1 31 10 00            STA 0x1000
EEB4 2A 10 02            LDA 0x1002  ; Move summ to the second number
EEB7 31 10 01            STA 0x1001
EEBA 2A 10 00            LDA 0x1000  ; Load first number in A
EEBD 29 10 01            ADDA 0x1001 ; Add second number to A
EEC0 31 10 02            STA 0x1002  ; Store the summ
EEC3 2D DB               CMPA #0xDB  ; HEX   Decimal  Real Value
EEC5 2B F8 00            JNE FAIL    ; xDB   219      987 - (256*3) = 219         

                         ; --------------------------------------------------------------------      
                         ; END OF FIBONACCI TEST
                         ; --------------------------------------------------------------------      

                         ; ---------
                         ; Loop test
                         ; ---------
EEC8 30 41      LOOPTST  LDA #0x41
EECA 19                  NOTA
EECB 31 C0 00            STA LEDPORT    ; Output to LED port
EECE 30 05               LDA #0x05      ; Init a counter of iterations
EED0 31 00 0F            STA ?b0
EED3 2A 00 0F   LOOPTST1 LDA ?b0        ; Read counter
EED6 2D 00               CMPA #0x00     ; Is it 0?
EED8 2C EE E2            JEQ LOOPTST2   ; Yes then it's the end fo the test
EEDB 2F FF               ADDA #0xFF     ; Add -1 in complement 2 (equivalent to decrement)
EEDD 31 00 0F            STA ?b0        ; Save decremented count
EEE0 0C F1               JRA LOOPTST1
EEE2 09         LOOPTST2 NOP            ; End of decrement loop         

                         ; -----------------
                         ; Math Library Test
                         ; -----------------
                         ; Test add16_w0_w0_w1  w0 <= w0 + w1
EEE3 30 42               LDA #0x42
EEE5 19                  NOTA
EEE6 31 C0 00            STA LEDPORT ; Output to LED port
EEE9 30 BE               LDA #0xBE   ; w0 = 0xBEEF
EEEB 31 00 0E            STA ?b1
EEEE 30 EF               LDA #0xEF
EEF0 31 00 0F            STA ?b0
EEF3 30 DE               LDA #0xDE   ; w1 = 0xDEAD
EEF5 31 00 0C            STA ?b3
EEF8 30 AD               LDA #0xAD
EEFA 31 00 0D            STA ?b2
EEFD 06 F1 6F            JSR ?add16_w0_w0_w1  ; w0 <= w0 + w1
EF00 2A 00 0E            LDA ?b1              ; Expected w0 = 9D9C + C set
EF03 2D 9D               CMPA #0x9D
EF05 2B F8 00            JNE FAIL
EF08 2A 00 0F            LDA ?b0
EF0B 2D 9C               CMPA #0x9C
EF0D 2B F8 00            JNE FAIL
EF10 2A 1F FB            LDA CARRY
EF13 2D 01               CMPA #0x01
EF15 2B F8 00            JNE FAIL

                         ; Test add32_l0_l0_l1  l0 <= l0 + l1
EF18 30 43               LDA #0x43
EF1A 19                  NOTA
EF1B 31 C0 00            STA LEDPORT ; Output to LED port
EF1E 30 89               LDA #0x89   ; l0 = 0x89ABCDEF
EF20 31 00 0C            STA ?b3
EF23 30 AB               LDA #0xAB
EF25 31 00 0D            STA ?b2
EF28 30 CD               LDA #0xCD
EF2A 31 00 0E            STA ?b1
EF2D 30 EF               LDA #0xEF
EF2F 31 00 0F            STA ?b0
EF32 30 DE               LDA #0xDE   ; l1 = DEADBEEF
EF34 31 00 08            STA ?b7
EF37 30 AD               LDA #0xAD
EF39 31 00 09            STA ?b6
EF3C 30 BE               LDA #0xBE
EF3E 31 00 0A            STA ?b5
EF41 30 EF               LDA #0xEF
EF43 31 00 0B            STA ?b4
EF46 06 F1 82            JSR ?add32_l0_l0_l1  ; l0 <= l0 + l1
EF49 2A 00 0C            LDA ?b3              ; Expected l0 = 0x68598CDE + C set
EF4C 2D 68               CMPA #0x68
EF4E 2B F8 00            JNE FAIL
EF51 2A 00 0D            LDA ?b2
EF54 2D 59               CMPA #0x59
EF56 2B F8 00            JNE FAIL
EF59 2A 00 0E            LDA ?b1
EF5C 2D 8C               CMPA #0x8C
EF5E 2B F8 00            JNE FAIL
EF61 2A 00 0F            LDA ?b0
EF64 2D DE               CMPA #0xDE
EF66 2B F8 00            JNE FAIL
EF69 2A 1F FB            LDA CARRY
EF6C 2D 01               CMPA #0x01
EF6E 2B F8 00            JNE FAIL

                         ; Test ?inc32_l0_l0   l0 <= l0 + 1
EF71 30 44               LDA #0x44
EF73 19                  NOTA
EF74 31 C0 00            STA LEDPORT ; Output to LED port
EF77 30 FF               LDA #0xFF   ; l0 = 0xFFFFFFFF
EF79 31 00 0C            STA ?b3
EF7C 30 FF               LDA #0xFF
EF7E 31 00 0D            STA ?b2
EF81 30 FF               LDA #0xFF
EF83 31 00 0E            STA ?b1
EF86 30 FF               LDA #0xFF
EF88 31 00 0F            STA ?b0
EF8B 06 F1 A7            JSR ?inc32_l0_l0  ; l0 <= l0 + 1
                         ; Expected l0 = 0x00000000
EF8E 2A 00 0C            LDA ?b3     ; Expected l0 = 0x00000000
EF91 2D 00               CMPA #0x00
EF93 2B F8 00            JNE FAIL
EF96 2A 00 0D            LDA ?b2
EF99 2D 00               CMPA #0x00
EF9B 2B F8 00            JNE FAIL
EF9E 2A 00 0E            LDA ?b1
EFA1 2D 00               CMPA #0x00
EFA3 2B F8 00            JNE FAIL
EFA6 2A 00 0F            LDA ?b0
EFA9 2D 00               CMPA #0x00
EFAB 2B F8 00            JNE FAIL
EFAE 06 F1 A7            JSR ?inc32_l0_l0  ; l0 <= l0 + 1
EFB1 2A 00 0C            LDA ?b3
EFB4 2D 00               CMPA #0x00
EFB6 2B F8 00            JNE FAIL
EFB9 2A 00 0D            LDA ?b2
EFBC 2D 00               CMPA #0x00
EFBE 2B F8 00            JNE FAIL
EFC1 2A 00 0E            LDA ?b1
EFC4 2D 00               CMPA #0x00
EFC6 2B F8 00            JNE FAIL
EFC9 2A 00 0F            LDA ?b0
EFCC 2D 01               CMPA #0x01
EFCE 2B F8 00            JNE FAIL
EFD1 06 F1 A7            JSR ?inc32_l0_l0
EFD4 06 F1 A7            JSR ?inc32_l0_l0
EFD7 06 F1 A7            JSR ?inc32_l0_l0
EFDA 06 F1 A7            JSR ?inc32_l0_l0
EFDD 06 F1 A7            JSR ?inc32_l0_l0
EFE0 06 F1 A7            JSR ?inc32_l0_l0
EFE3 06 F1 A7            JSR ?inc32_l0_l0
EFE6 06 F1 A7            JSR ?inc32_l0_l0
EFE9 06 F1 A7            JSR ?inc32_l0_l0
EFEC 06 F1 A7            JSR ?inc32_l0_l0
EFEF 06 F1 A7            JSR ?inc32_l0_l0
EFF2 06 F1 A7            JSR ?inc32_l0_l0
EFF5 06 F1 A7            JSR ?inc32_l0_l0
EFF8 06 F1 A7            JSR ?inc32_l0_l0
EFFB 06 F1 A7            JSR ?inc32_l0_l0
EFFE 06 F1 A7            JSR ?inc32_l0_l0
F001 06 F1 A7            JSR ?inc32_l0_l0
F004 2A 00 0C            LDA ?b3
F007 2D 00               CMPA #0x00
F009 2B F8 00            JNE FAIL
F00C 2A 00 0D            LDA ?b2
F00F 2D 00               CMPA #0x00
F011 2B F8 00            JNE FAIL
F014 2A 00 0E            LDA ?b1
F017 2D 00               CMPA #0x00
F019 2B F8 00            JNE FAIL
F01C 2A 00 0F            LDA ?b0
F01F 2D 12               CMPA #0x12
F021 2B F8 00            JNE FAIL

                         ; Test  MUL 8-bit
                         ; mul8_w1_b1_b0   w1 (b3,b2) <= b1 * b0
F024 30 45               LDA #0x45
F026 19                  NOTA
F027 31 C0 00            STA LEDPORT ; Output to LED port
F02A 30 02               LDA #0x02   ; 3 * 2 = 6
F02C 31 00 0F            STA ?b0
F02F 30 03               LDA #0x03
F031 31 00 0E            STA ?b1
F034 06 F1 CD            JSR ?mul8_w1_b1_b0
F037 2A 00 0C            LDA ?b3
F03A 2D 00               CMPA #0x00
F03C 2B F8 00            JNE FAIL
F03F 2A 00 0D            LDA ?b2
F042 2D 06               CMPA #0x06
F044 2B F8 00            JNE FAIL

F047 30 FF               LDA #0xFF   ; 255 * 255 = 65025 (0xFF * 0xFF = 0xFE01)
F049 31 00 0F            STA ?b0
F04C 31 00 0E            STA ?b1
F04F 06 F1 CD            JSR ?mul8_w1_b1_b0
F052 2A 00 0C            LDA ?b3
F055 2D FE               CMPA #0xFE
F057 2B F8 00            JNE FAIL
F05A 2A 00 0D            LDA ?b2
F05D 2D 01               CMPA #0x01
F05F 2B F8 00            JNE FAIL

F062 30 AB               LDA #0xAB   ; 171 * 205 = 35055 (0xAB * 0xCD = 0x88EF)
F064 31 00 0F            STA ?b0
F067 30 CD               LDA #0xCD
F069 31 00 0E            STA ?b1
F06C 06 F1 CD            JSR ?mul8_w1_b1_b0
F06F 2A 00 0C            LDA ?b3
F072 2D 88               CMPA #0x88
F074 2B F8 00            JNE FAIL
F077 2A 00 0D            LDA ?b2
F07A 2D EF               CMPA #0xEF
F07C 2B F8 00            JNE FAIL

F07F 30 00               LDA #0x00   ; 0 * 0 = 0 (0x00 * 0x00 = 0x0000)
F081 31 00 0F            STA ?b0
F084 31 00 0E            STA ?b1
F087 06 F1 CD            JSR ?mul8_w1_b1_b0
F08A 2A 00 0C            LDA ?b3
F08D 2D 00               CMPA #0x00
F08F 2B F8 00            JNE FAIL
F092 2A 00 0D            LDA ?b2
F095 2D 00               CMPA #0x00
F097 2B F8 00            JNE FAIL

                         ; Test  MUL 16-bit
                         ; Total time for 3 multiplications 140ms @ 2 MHz
                         ; 46ms per 16bit mult (21.7 multiplications per second)
                         ; l1 <= w1 * w0      (b7,b6,b5,b4) = (b3,b2) * (b1,b0)
F09A 30 46               LDA #0x46
F09C 19                  NOTA
F09D 31 C0 00            STA LEDPORT ; Output to LED port

F0A0 30 00               LDA #0x00   ; 0 * 0 = 0 (0x0000 * 0x0000 = 0x00000000)
F0A2 31 00 0F            STA ?b0
F0A5 31 00 0E            STA ?b1
F0A8 31 00 0D            STA ?b2
F0AB 31 00 0C            STA ?b3
F0AE 06 F1 EE            JSR ?mul16_l1_w1_w0
F0B1 2A 00 08            LDA ?b7
F0B4 2D 00               CMPA #0x00
F0B6 2B F8 00            JNE FAIL
F0B9 2A 00 09            LDA ?b6
F0BC 2D 00               CMPA #0x00
F0BE 2B F8 00            JNE FAIL
F0C1 2A 00 0A            LDA ?b5
F0C4 2D 00               CMPA #0x00
F0C6 2B F8 00            JNE FAIL
F0C9 2A 00 0B            LDA ?b4
F0CC 2D 00               CMPA #0x00
F0CE 2B F8 00            JNE FAIL

F0D1 30 FF               LDA #0xFF   ; 65535 * 65535 = 4294836225  (0xFFFF * 0xFFFF = 0xFFFE0001)
F0D3 31 00 0F            STA ?b0
F0D6 31 00 0E            STA ?b1
F0D9 31 00 0D            STA ?b2
F0DC 31 00 0C            STA ?b3
F0DF 06 F1 EE            JSR ?mul16_l1_w1_w0
F0E2 2A 00 08            LDA ?b7
F0E5 2D FF               CMPA #0xFF
F0E7 2B F8 00            JNE FAIL
F0EA 2A 00 09            LDA ?b6
F0ED 2D FE               CMPA #0xFE
F0EF 2B F8 00            JNE FAIL
F0F2 2A 00 0A            LDA ?b5
F0F5 2D 00               CMPA #0x00
F0F7 2B F8 00            JNE FAIL
F0FA 2A 00 0B            LDA ?b4
F0FD 2D 01               CMPA #0x01
F0FF 2B F8 00            JNE FAIL

F102 30 31               LDA #0x31   ; 12345 * 54321 = 670592745  (0x3039 * 0xD431 = 0x27F86EE9)
F104 31 00 0F            STA ?b0
F107 30 D4               LDA #0xD4
F109 31 00 0E            STA ?b1
F10C 30 39               LDA #0x39
F10E 31 00 0D            STA ?b2
F111 30 30               LDA #0x30
F113 31 00 0C            STA ?b3
F116 06 F1 EE            JSR ?mul16_l1_w1_w0   
F119 2A 00 08            LDA ?b7
F11C 2D 27               CMPA #0x27
F11E 2B F8 00            JNE FAIL
F121 2A 00 09            LDA ?b6
F124 2D F8               CMPA #0xF8
F126 2B F8 00            JNE FAIL
F129 2A 00 0A            LDA ?b5
F12C 2D 6E               CMPA #0x6E
F12E 2B F8 00            JNE FAIL
F131 2A 00 0B            LDA ?b4
F134 2D E9               CMPA #0xE9
F136 2B F8 00            JNE FAIL  

                         ; ---------------------
                         ; END Math Library Test
                         ; ---------------------

                         ; TEST EXECUTION FROM RAM
                         ; Copy a block of code from EEPROM to RAM
                         ; then call to execute this block in RAM. Resume execution from EEPROM
F139 30 47               LDA #0x47
F13B 19                  NOTA
F13C 31 C0 00            STA LEDPORT ; Output to LED port
F13F 32 F1 60            JMP BLKCODEEND   ; We skip the nex block of code to be copied in RAM
                               ; Simple 8 bit multiplication test code
F142 30 56      BLKCODESTART   LDA #0x56   ; 86 * 171 = 14706   (0x56 * 0xAB = 0x3972)
F144 31 00 0F                  STA ?b0
F147 30 AB                     LDA #0xAB
F149 31 00 0E                  STA ?b1
F14C 06 F1 CD                  JSR ?mul8_w1_b1_b0
F14F 2A 00 0C                  LDA ?b3
F152 2D 39                     CMPA #0x39
F154 2B F8 00                  JNE FAIL
F157 2A 00 0D                  LDA ?b2
F15A 2D 72                     CMPA #0x72
F15C 2B F8 00                  JNE FAIL
F15F 07                        RTS
                               ; Copy the Block of code from EEPROM to RAM
F160 04 F1 42   BLKCODEEND     LDX #BLKCODESTART ; Load address of BLKCODESTART
F163 16 00 0E                  STX ?b1           ; Store this adddress in ?b1:?b0
                RAMDESTSTART   EQU 0x1000
F166 04 10 00                  LDX #RAMDESTSTART ; Load address of RAM destination
F169 16 00 0C                  STX ?b3           ; Store this adddress in ?b3:?b2
                               ; copy a byte from source to destination
                               ;LDX ?b1           ; Load X with source address in ?b1:?b0
                               ;LDA (X)           ; Load byte pointed by X
                               ;LDX ?b3           ; Load X with destination address in ?b3:?b2
                               ;STA (X)           ; Store byte to address pointed by X
                               ; Check if last byte copied
                               ;CMPX 
                               ; if yes then 


F16C 32 E0 00            JMP 0xE000  ; Loop from start of diag test

                         ; ---------------------
                         ; Math library routines
                         ; ---------------------
                         ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |    ?w5      ?w4   |   ?w3     ?w2   |   ?w1     ?w0   | 16 bits
                ;         ?l3         |         ?l2       |       ?l1       |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                                  ; Addition on 16 bits  
                                  ; w0 <= w0 + w1
F16F 2A 00 0F   ?add16_w0_w0_w1   LDA ?b0  
F172 29 00 0D                     ADDA ?b2
F175 31 00 0F                     STA ?b0
F178 2A 00 0E                     LDA ?b1
F17B 28 00 0C                     ADCA ?b3
F17E 31 00 0E                     STA ?b1
F181 07                           RTS

                                  ; Addition on 32 bits
                                  ; l0 <= l0 + l1
F182 2A 00 0F   ?add32_l0_l0_l1   LDA ?b0  
F185 29 00 0B                     ADDA ?b4
F188 31 00 0F                     STA ?b0
F18B 2A 00 0E                     LDA ?b1
F18E 28 00 0A                     ADCA ?b5
F191 31 00 0E                     STA ?b1
F194 2A 00 0D                     LDA ?b2
F197 28 00 09                     ADCA ?b6
F19A 31 00 0D                     STA ?b2
F19D 2A 00 0C                     LDA ?b3
F1A0 28 00 08                     ADCA ?b7
F1A3 31 00 0C                     STA ?b3
F1A6 07                           RTS

                                  ; INC 32 bit
                                  ; l0 <= l0 + 1
F1A7 2A 00 0F   ?inc32_l0_l0      LDA ?b0
F1AA 03                           INCA
F1AB 31 00 0F                     STA ?b0
F1AE 2B F1 CC                     JNE ?inc32_0x_0x_JP
F1B1 2A 00 0E                     LDA ?b1
F1B4 03                           INCA
F1B5 31 00 0E                     STA ?b1
F1B8 2B F1 CC                     JNE ?inc32_0x_0x_JP
F1BB 2A 00 0D                     LDA ?b2
F1BE 03                           INCA
F1BF 31 00 0D                     STA ?b2
F1C2 2B F1 CC                     JNE ?inc32_0x_0x_JP
F1C5 2A 00 0C                     LDA ?b3
F1C8 03                           INCA
F1C9 31 00 0C                     STA ?b3
F1CC 07         ?inc32_0x_0x_JP   RTS

                                  ; MUL 8-bit
                                  ; w1 (b3,b2) <= b1 * b0
F1CD 30 00      ?mul8_w1_b1_b0    LDA #0x00   ; Only clear ?b3
F1CF 31 00 0C                     STA ?b3
F1D2 04 00 08                     LDX #0x0008 ; Loop counter (8 bits)
F1D5 15 00 0F   ?mul8_w1_b1_loop  SRL ?b0     ; Shift right ?b0 (check LSB)
F1D8 0F 09                        JRNC ?mul8_skip_add  ; Conditional relative jump if not Carry ( If LSB was 0, skip addition)
F1DA 2A 00 0C                     LDA ?b3
F1DD 29 00 0E                     ADDA ?b1    ; Add multiplicand
F1E0 31 00 0C                     STA ?b3     ; Store back
F1E3 14 00 0C   ?mul8_skip_add    RRC ?b3     ; Shift right ?b3 ?b2   C -> 7 6 5 4 3 2 1 0 -> C
F1E6 14 00 0D                     RRC ?b2     ;                       C -> 7 6 5 4 3 2 1 0 -> C
F1E9 13                           DECXL       ; Decrement loop counter
F1EA 2B F1 D5                     JNE ?mul8_w1_b1_loop
F1ED 07                           RTS

                                  ; MUL 16-bit
                                  ; l1 <= w1 * w0      (b7,b6,b5,b4) = (b3,b2) * (b1,b0)
F1EE 30 00      ?mul16_l1_w1_w0   LDA #0x00   ; Only clear ?b7 and ?b6
F1F0 31 00 08                     STA ?b7
F1F3 31 00 09                     STA ?b6
F1F6 04 00 10                     LDX #0x0010 ; Loop counter (16 bits)
F1F9 15 00 0E   ?mul16_l1_w1_loop SRL ?b1     ; Shift right ?w0 (check LSB)  '0' -> 7 6 5 4 3 2 1 0 -> C
F1FC 14 00 0F                     RRC ?b0     ; C  -> 7 6 5 4 3 2 1 0 -> C
F1FF 0F 12                        JRNC ?mul16_skip_add  ; Conditional relative jump if not Carry ( If LSB was 0, skip addition)
F201 2A 00 09                     LDA ?b6
F204 29 00 0D                     ADDA ?b2    ; Add multiplicand
F207 31 00 09                     STA ?b6     ; Store back
F20A 2A 00 08                     LDA ?b7
F20D 28 00 0C                     ADCA ?b3
F210 31 00 08                     STA ?b7
F213 14 00 08   ?mul16_skip_add   RRC ?b7     ; Shift right ?b7 ?b6 ?b5 ?b4   C -> 7 6 5 4 3 2 1 0 -> C 
F216 14 00 09                     RRC ?b6     ;                               C -> 7 6 5 4 3 2 1 0 -> C
F219 14 00 0A                     RRC ?b5
F21C 14 00 0B                     RRC ?b4
F21F 13                           DECXL       ; Decrement loop counter
F220 2B F1 F9                     JNE ?mul16_l1_w1_loop
F223 07                           RTS

                         ; --------------------------------------------------------------------
                         ; Error routine
                         ; --------------------------------------------------------------------
                         ORG/0xF800  ; Diagnostic Error routine   
                         ;STOP        ; Stop execution
F800 32 F8 00   FAIL     JMP FAIL    ; Infinite Loop on error

                         ; --------------------------------------------------------------------
                         ; JSR and RTS Test subroutine
                         ; --------------------------------------------------------------------
                         ORG/0xFFC0
FFC0 30 11      TJSR1    LDA #0x11
FFC2 07                  RTS
                         ORG/0xFFC3
FFC3 30 22      TJSR2    LDA #0x22
FFC5 06 FF C0            JSR TJSR1
FFC8 07                  RTS
                         ORG/0xFFC9
FFC9 30 33      TJSR3    LDA #0x33
FFCB 06 FF C3            JSR TJSR2
FFCE 07                  RTS
                         ORG/0xFFCF
FFCF 30 44      TJSR4    LDA #0x44
FFD1 06 FF C9            JSR TJSR3
FFD4 07                  RTS
                         ORG/0xFFD5
FFD5 30 44      TJSR5    LDA #0x44
FFD7 06 FF CF            JSR TJSR4
FFDA 07                  RTS
                         ORG/0xFFDB
FFDB 30 55      TJSR6    LDA #0x55
FFDD 06 FF D5            JSR TJSR5
FFE0 07                  RTS
                         ORG/0xFFE1
FFE1 30 66      TJSR7    LDA #0x66
FFE3 06 FF DB            JSR TJSR6
FFE6 07                  RTS
                         ORG/0xFFE7
FFE7 30 77      TJSR8    LDA #0x77
FFE9 06 FF E1            JSR TJSR7
FFEC 07                  RTS
                         ORG/0xFFED
FFED 30 88      TJSR9    LDA #0x88
FFEF 06 FF E7            JSR TJSR8
FFF2 07                  RTS
                         ORG/0xFFF3
FFF3 30 99      TJSR10   LDA #0x99
FFF5 06 FF ED            JSR TJSR9
FFF8 07                  RTS
                         ; --------------------------------------------------------------------
                         ; Reset Vector
                         ; --------------------------------------------------------------------
                         ORG/0xFFFE  ; Set the Reset vector
FFFE E0                  DB 0xE0     ; MSB Reset Vector
FFFF 00                  DB 0x00     ; LSB Reset Vector


Symbol Table:
?b15                0000
?b14                0001
?b13                0002
?b12                0003
?b11                0004
?b10                0005
?b9                 0006
?b8                 0007
?b7                 0008
?b6                 0009
?b5                 000A
?b4                 000B
?b3                 000C
?b2                 000D
?b1                 000E
?b0                 000F
?w7                 0000
?w6                 0002
?w5                 0004
?w4                 0006
?w3                 0008
?w2                 000A
?w1                 000C
?w0                 000E
?l3                 0000
?l2                 0004
?l1                 0008
?l0                 000C
SP                  1FF0
JSH                 1FF1
JSL                 1FF2
XH                  1FF3
XL                  1FF4
EQUAL               1FFA
CARRY               1FFB
REG_A               1FFC
IPH                 1FFE
IPL                 1FFF
LEDPORT             C000
START               E000
TST01               E006
TST02               E033
TSTOP03             E060
TSTOP04             E0F7
TSTOP05             E149
TSTOP06             E1C1
TSTOP09             E1E5
TSTOP0A             E1EE
TSTOP0B             E22C
TST0B_0             E288
TST0B_1             E28B
TST0B_2             E28F
TST0B_3             E294
TST0B_4             E29B
TST0B_5             E2AD
TST0B_6             E2B2
TST0B_7             E2C8
TST0B_8             E2CF
TST0B_9             E2D1
TST0B_10            E2D3
TST0B_11            E2E8
TST0B_12            E365
TST0B_13            E368
TSTOP0D             E369
TSTOP0E             E423
TSTOP0F             E4DD
TST0F_0             E4ED
TST0F_1             E4F7
TST0F_2             E4FA
TSTOP10             E4FB
TSTOP11             E57E
TSTOP12             E5A3
TSTOP13             E5C8
TSTOP14             E65E
TSTOP15             E73A
TSTOP16             E884
TSTOP17             E8E2
TSTOP18             E927
TSTOP19             E95A
TSTOP1A             E982
TSTOP29             E9F7
TSTOP2A             EA2B
TSTOP2B             EA7E
TST2C               EA99
TST2C_1             EABE
TST2C_2             EAC8
TST2C_3             EAD2
TST2C_4             EADC
TST2C_5             EAE6
TST2C_6             EAF0
TST2C_7             EAFA
TST2C_8             EB04
TST2C_9             EB0E
TST2C_10            EB18
TSTOP2D             EB19
TSTOP2E             EB37
TSTOP2F             EB95
TSTOP30             EBDF
TSTOP31             EC39
TSTOP33             ED02
TSTFIBON            ED3E
LOOPTST             EEC8
LOOPTST1            EED3
LOOPTST2            EEE2
BLKCODESTART        F142
BLKCODEEND          F160
RAMDESTSTART        1000
?add16_w0_w0_w1     F16F
?add32_l0_l0_l1     F182
?inc32_l0_l0        F1A7
?inc32_0x_0x_JP     F1CC
?mul8_w1_b1_b0      F1CD
?mul8_w1_b1_loop    F1D5
?mul8_skip_add      F1E3
?mul16_l1_w1_w0     F1EE
?mul16_l1_w1_loop   F1F9
?mul16_skip_add     F213
FAIL                F800
TJSR1               FFC0
TJSR2               FFC3
TJSR3               FFC9
TJSR4               FFCF
TJSR5               FFD5
TJSR6               FFDB
TJSR7               FFE1
TJSR8               FFE7
TJSR9               FFED
TJSR10              FFF3
Assembly complete
