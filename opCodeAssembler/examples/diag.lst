; -----------------------------------------------------------------
; Homebrew MyCPU diagnostic program
; Author: Sylvain Fortin
; Date : 8 march 2024
; Documentation : diag.asm is used to test the assembler
;                 instructions of MyCPU.
; Memory map of the computer
; 0000H - 17FFH Total RAM space
; 0000H - 00FFH Stack
; 0100H - 17EF  Free for application
; 1FF0H SP      Stack Pointer 8 bit
; 1FF1H JSH     Temporary storage for JSR MSB address
; 1FF2H JSL          "       "     "   "  LSB    "
; 1FF3H X MSB   X Register MSB
; 1FF4H X LSB   X Register LSB
; 1FFAH E       bit<0> Equal Status bit
; 1FFBH C       bit<0> Carry Status bit
; 1FFCH A       A Register
; 1FFEH IPH	    Instruction Pointer MSB
; 1FFFH IPL          "         "    LSB
; C000H         LED port
; E000H - F000H EEPROM for application program
; -----------------------------------------------------------------
                                     ; 
                         ORG/E000H   ; EEPROM Start
E000 30 00               LDA #00H    ; Clear LED
E002 36                  NOTA
E003 31 C0 00            STA C000H   ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; Test Carry Status bit integrity
                         ; --------------------------------------------------------------------
E006 30 01               LDA #01H
E008 36                  NOTA
E009 31 C0 00            STA C000H   ; Output to LED port
E00C 30 00               LDA #00H
E00E 31 1F FB            STA 1FFBH   ; Write 0 to carry bit <0>
E011 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E014 2D 00               CMPA #00H
E016 2B F8 00            JNE F800H
E019 30 01               LDA #01H
E01B 31 1F FB            STA 1FFBH   ; Write 1 to carry bit <0>
E01E 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E021 2D 01               CMPA #01H
E023 2B F8 00            JNE F800H
E026 30 00               LDA #00H
E028 31 1F FB            STA 1FFBH   ; Write 0 to carry bit <0>
E02B 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E02E 2D 00               CMPA #00H
E030 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; Test Equal Status bit integrity
                         ; --------------------------------------------------------------------
E033 30 02               LDA #02H
E035 36                  NOTA
E036 31 C0 00            STA C000H   ; Output to LED port
E039 30 00               LDA #00H
E03B 31 1F FA            STA 1FFAH   ; Write 0 to Equal Status bit <0>
E03E 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E041 2D 00               CMPA #00H
E043 2B F8 00            JNE F800H
E046 30 01               LDA #01H
E048 31 1F FA            STA 1FFAH   ; Write 1 to Equal Status bit <0>
E04B 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E04E 2D 01               CMPA #01H
E050 2B F8 00            JNE F800H
E053 30 00               LDA #00H
E055 31 1F FA            STA 1FFAH   ; Write 0 to Equal Status bit <0>
E058 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E05B 2D 00               CMPA #00H
E05D 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.06 JSR    Jump to SubRoutine
                         ; --------------------------------------------------------------------
E060 30 06               LDA #06H
E062 36                  NOTA
E063 31 C0 00            STA C000H   ; Output to LED port
E066 06 FF C0            JSR FFC0H   ; 1 layer
E069 06 FF C3            JSR FFC3H   ; 2
E06C 06 FF C9            JSR FFC9H   ; 3
E06F 06 FF CF            JSR FFCFH   ; 4
E072 06 FF D5            JSR FFD5H   ; 5
E075 06 FF DB            JSR FFDBH   ; 6
E078 06 FF E1            JSR FFE1H   ; 7
E07B 06 FF E7            JSR FFE7H   ; 8
E07E 06 FF ED            JSR FFEDH   ; 9
E081 06 FF F3            JSR FFF3H   ; 10
                         ; --------------------------------------------------------------------
                         ; OP.07 RTS    ReTurn from Subroutine
                         ; Tested in OP.06 JSR
                         ; --------------------------------------------------------------------
                         ;LDA #07H
                         ;NOTA
                         ;STA C000H   ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.08 STOP
                         ; STOP EXECUTING
                         ; Cannot test here it will stop execution...
                         ; A diagnostic test failure is expected to call this instruction ending 
                         ; program exectution.
                         ; --------------------------------------------------------------------
                         ;LDA #08H
                         ;NOTA
                         ;STA C000H   ; Output to LED port
                         ;STOP
                         ; --------------------------------------------------------------------
                         ; OP.09 NOP   NO OPERATION
                         ; --------------------------------------------------------------------
E084 30 09               LDA #09H
E086 36                  NOTA
E087 31 C0 00            STA C000H   ; Output to LED port
E08A 09                  NOP
E08B 09                  NOP
E08C 09                  NOP
                         ; --------------------------------------------------------------------
                         ; OP.0A LDA (X) Load Reg A Indexed
                         ; --------------------------------------------------------------------
E08D 30 0A               LDA #0AH
E08F 36                  NOTA
E090 31 C0 00            STA C000H   ; Output to LED port
E093 30 55               LDA #55H    ; Store some value in RAM
E095 31 01 00            STA 0100H
E098 30 AA               LDA #AAH
E09A 31 01 01            STA 0101H
E09D 30 DE               LDA #DEH
E09F 31 01 F0            STA 01F0H
E0A2 30 CA               LDA #CAH
E0A4 31 01 FF            STA 01FFH
E0A7 38 01 00            LDX #0100H  ; Verify each locations
E0AA 0A                  LDA (X)
E0AB 2D 55               CMPA #55H
E0AD 2B F8 00            JNE F800H   ; Jump if result not good
E0B0 38 01 01            LDX #0101H
E0B3 0A                  LDA (X)
E0B4 2D AA               CMPA #AAH
E0B6 2B F8 00            JNE F800H
E0B9 38 01 F0            LDX #01F0H
E0BC 0A                  LDA (X)
E0BD 2D DE               CMPA #DEH
E0BF 2B F8 00            JNE F800H
E0C2 38 01 FF            LDX #01FFH
E0C5 0A                  LDA (X)
E0C6 2D CA               CMPA #CAH
E0C8 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.0B STA (X) Store Reg A Indexed
                         ; --------------------------------------------------------------------
E0CB 30 0B               LDA #0BH
E0CD 36                  NOTA
E0CE 31 C0 00            STA C000H   ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.0C JRA **H Unconditional relative jump
                         ; --------------------------------------------------------------------
E0D1 30 0C               LDA #0CH
E0D3 36                  NOTA
E0D4 31 C0 00            STA C000H   ; Output to LED port
E0D7 0C 00               JRA 00H     ; Test jump foward, Execute next instruction
E0D9 0C 01               JRA 01H     ; Skip next instruction
E0DB 09                  NOP         ; 1
E0DC 0C 02               JRA 02H     ; Skip next 2 instructions
E0DE 09                  NOP         ; 1
E0DF 09                  NOP         ; 2
E0E0 0C 03               JRA 03H     ; Skip next 3 instructions
E0E2 09                  NOP         ; 1 
E0E3 09                  NOP         ; 2
E0E4 09                  NOP         ; 3
E0E5 0C 05               JRA 05H     ; Skip next 5 instructions
E0E7 09                  NOP         ; 1
E0E8 09                  NOP         ; 2
E0E9 09                  NOP         ; 3
E0EA 09                  NOP         ; 4
E0EB 09                  NOP         ; 5
E0EC 0C 10               JRA 10H     ; Skip next 16 instructions
E0EE 09                  NOP         ; 1
E0EF 09                  NOP         ; 2
E0F0 09                  NOP         ; 3
E0F1 09                  NOP         ; 4
E0F2 09                  NOP         ; 5
E0F3 09                  NOP         ; 6
E0F4 09                  NOP         ; 7
E0F5 09                  NOP         ; 8
E0F6 09                  NOP         ; 9
E0F7 09                  NOP         ; 10
E0F8 09                  NOP         ; 11
E0F9 09                  NOP         ; 12
E0FA 09                  NOP         ; 13
E0FB 09                  NOP         ; 14
E0FC 09                  NOP         ; 15
E0FD 09                  NOP         ; 16
E0FE 0C 22               JRA 22H     ; Skip next 32 bytes
E100 09                  NOP         ; 1
E101 09                  NOP         ; 2
E102 09                  NOP         ; 3
E103 0C 1F               JRA 1FH     ; 4-5   Final jump to the end of thest
E105 09                  NOP         ; 6
E106 09                  NOP         ; 7
E107 09                  NOP         ; 8
E108 09                  NOP         ; 9
E109 09                  NOP         ; 10
E10A 09                  NOP         ; 11
E10B 09                  NOP         ; 12
E10C 09                  NOP         ; 13
E10D 09                  NOP         ; 14
E10E 09                  NOP         ; 15
E10F 09                  NOP         ; 16
E110 09                  NOP         ; 17
E111 09                  NOP         ; 18
E112 09                  NOP         ; 19
E113 09                  NOP         ; 20
E114 09                  NOP         ; 21
E115 09                  NOP         ; 22
E116 09                  NOP         ; 23
E117 09                  NOP         ; 24
E118 09                  NOP         ; 25
E119 0C E8               JRA E8H     ; 26-27 Third Backward jump
E11B 09                  NOP         ; 28
E11C 09                  NOP         ; 29
E11D 09                  NOP         ; 30
E11E 09                  NOP         ; 31
E11F 09                  NOP         ; 32
E120 0C F7               JRA F7H     ; Second Backward jump
E122 0C FC               JRA FCH     ; First Backward jump
E124 09                  NOP         ; Arrival of the last jump to end the test
                         ; --------------------------------------------------------------------
                         ; OP.29 ADDA ****H  
                         ; ADD A WITH BYTE AT ADDRESS, C UPDATE
                         ; --------------------------------------------------------------------
E125 30 29               LDA #29H
E127 36                  NOTA
E128 31 C0 00            STA C000H   ; Output to LED port
E12B 30 5F               LDA #5FH    ; Store a value in RAM
E12D 31 01 23            STA 0123H   
E130 30 63               LDA #63H
E132 29 01 23            ADDA 0123H  ; Add to A the byte at address location
E135 2D C2               CMPA #C2H   ; Check the sum
E137 2B F8 00            JNE F800H   ; Jump if result not good
E13A 2A 1F FB            LDA 1FFBH   ; Read the Carry Status
E13D 2D 00               CMPA #00H   ; No carry expected then C should be '0'
E13F 2B F8 00            JNE F800H   ; Error if carry is set

E142 30 AC               LDA #ACH    ; Store another value in RAM
E144 31 10 56            STA 1056H   
E147 30 D9               LDA #D9H
E149 29 10 56            ADDA 1056H  ; Add to A the byte at address location
E14C 2D 85               CMPA #85H   ; Check the sum LSB
E14E 2B F8 00            JNE F800H   ; Jump if result not as expected
E151 2A 1F FB            LDA 1FFBH   ; Read the Carry Status
E154 2D 01               CMPA #01H   ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E156 2B F8 00            JNE F800H   ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.2A LDA ****H  
                         ; LOAD A WITH BYTE AT ADDRESS Test LDA #**H instruction 
                         ; --------------------------------------------------------------------
E159 30 2A               LDA #2AH
E15B 36                  NOTA
E15C 31 C0 00            STA C000H   ; Output to LED port
E15F 30 AA               LDA #AAH    ; Load immediate in register A
E161 2D AA               CMPA #AAH
E163 2B F8 00            JNE F800H
E166 30 01               LDA #01H
E168 2D 01               CMPA #01H
E16A 2B F8 00            JNE F800H
E16D 30 02               LDA #02H
E16F 2D 02               CMPA #02H
E171 2B F8 00            JNE F800H
E174 30 04               LDA #04H
E176 2D 04               CMPA #04H
E178 2B F8 00            JNE F800H
E17B 30 08               LDA #08H
E17D 2D 08               CMPA #08H
E17F 2B F8 00            JNE F800H
E182 30 10               LDA #10H
E184 2D 10               CMPA #10H
E186 2B F8 00            JNE F800H
E189 30 20               LDA #20H
E18B 2D 20               CMPA #20H
E18D 2B F8 00            JNE F800H
E190 30 40               LDA #40H
E192 2D 40               CMPA #40H
E194 2B F8 00            JNE F800H
E197 30 80               LDA #80H
E199 2D 80               CMPA #80H
E19B 2B F8 00            JNE F800H
E19E 30 55               LDA #55H
E1A0 2D 55               CMPA #55H
E1A2 2B F8 00            JNE F800H
E1A5 30 FF               LDA #FFH
E1A7 2D FF               CMPA #FFH
E1A9 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.2B JNE ****H  
                         ; JUMP IF E=0
                         ; Only a partial validation because i do not have symbolic address
                         ; processing in the assembler program.
                         ; --------------------------------------------------------------------
E1AC 30 2B               LDA #2BH
E1AE 36                  NOTA
E1AF 31 C0 00            STA C000H   ; Output to LED port
E1B2 30 6D               LDA #6DH    ; Load a value in A
E1B4 2D 6D               CMPA #6DH   ; Compare with the same value
E1B6 2B F8 00            JNE F800H   ; Error if values are different
E1B9 30 10               LDA #10H
E1BB 2D 10               CMPA #10H
E1BD 2B F8 00            JNE F800H
E1C0 30 01               LDA #01H
E1C2 2D 01               CMPA #01H
E1C4 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.2C JEQ ****H
                         ; JUMP IF E=1
                         ; Partial validation
                         ; --------------------------------------------------------------------
E1C7 30 2C               LDA #2CH
E1C9 36                  NOTA
E1CA 31 C0 00            STA C000H   ; Output to LED port
E1CD 30 7A               LDA #7AH    ; Load a value in A
E1CF 2D 28               CMPA #28H   ; Compare with a different value
E1D1 2C F8 00            JEQ F800H   ; If appear identical then it's and error
E1D4 30 FE               LDA #FEH
E1D6 2D FF               CMPA #FFH
E1D8 2C F8 00            JEQ F800H
E1DB 30 01               LDA #01H
E1DD 2D 10               CMPA #10H
E1DF 2C F8 00            JEQ F800H
                         ; --------------------------------------------------------------------
                         ; OP.2D CMPA #**H
                         ; COMPARE A WITH IMMEDIATE VALUE    EQUAL STATUS BIT (E) UPDATED
                         ; --------------------------------------------------------------------
E1E2 30 2D               LDA #2DH
E1E4 36                  NOTA
E1E5 31 C0 00            STA C000H   ; Output to LED port
E1E8 30 12               LDA #12H    ; Load a value in A
E1EA 2D 12               CMPA #12H   ; Compare with identical value
E1EC 2A 1F FA            LDA 1FFAH   ; Inspect EQUAL STATUS 
E1EF 2D 01               CMPA #01H   ; Verify bit<0> E = '1' and all others bits <7:1> are '0'    
E1F1 2B F8 00            JNE F800H   ; If different then it's and error
E1F4 30 AA               LDA #AAH
E1F6 2D 55               CMPA #55H   ; Compare with a different value
E1F8 2A 1F FA            LDA 1FFAH   ; Inspect EQUAL STATUS
E1FB 2D 00               CMPA #00H   ; Verify bit<0> E = '0' and all others bits <7:1> are '0'    
E1FD 2B F8 00            JNE F800H   ; If different then it's and error
                         ; --------------------------------------------------------------------
                         ; OP.2E ADCA #**H
                         ; REG A = REG A + IMMEDIATE BYTE + CARRY (C)   
                         ; CARRY STATUS (C) IS UPDATED
                         ; --------------------------------------------------------------------
E200 30 2E               LDA #2EH
E202 36                  NOTA
E203 31 C0 00            STA C000H   ; Output to LED port
E206 30 00               LDA #00H    ; Clear CARRY (C)
E208 31 1F FB            STA 1FFBH      
E20B 30 45               LDA #45H
E20D 2E 5B               ADCA #5BH
E20F 2D A0               CMPA #A0H   ; Verify summ
E211 2B F8 00            JNE F800H
E214 2A 1F FB            LDA 1FFBH   ; Check carry
E217 2D 00               CMPA #00H   ; Should be clear
E219 2B F8 00            JNE F800H

E21C 30 01               LDA #01H    ; Set CARRY (C)
E21E 31 1F FB            STA 1FFBH
E221 30 56               LDA #56H
E223 2E 6D               ADCA #6DH
E225 2D C4               CMPA #C4H   ; Verify summ
E227 2B F8 00            JNE F800H
E22A 2A 1F FB            LDA 1FFBH   ; Check carry
E22D 2D 00               CMPA #00H   ; Should be clear
E22F 2B F8 00            JNE F800H

E232 30 00               LDA #00H    ; Clear CARRY (C)
E234 31 1F FB            STA 1FFBH
E237 30 7F               LDA #7FH
E239 2E DE               ADCA #DEH
E23B 2D 5D               CMPA #5DH   ; Verify summ
E23D 2B F8 00            JNE F800H
E240 2A 1F FB            LDA 1FFBH   ; Check carry
E243 2D 01               CMPA #01H   ; Should be set
E245 2B F8 00            JNE F800H

E248 30 01               LDA #01H    ; Set CARRY (C)
E24A 31 1F FB            STA 1FFBH
E24D 30 FF               LDA #FFH
E24F 2E FF               ADCA #FFH
E251 2D FF               CMPA #FFH   ; Verify summ
E253 2B F8 00            JNE F800H
E256 2A 1F FB            LDA 1FFBH   ; Check carry
E259 2D 01               CMPA #01H   ; Should be set
E25B 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.2F ADDA #**H
                         ; ACCA+M>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
E25E 30 2F               LDA #2FH
E260 36                  NOTA
E261 31 C0 00            STA C000H   ; Output to LED port
E264 30 23               LDA #23H
E266 2F 45               ADDA #45H
E268 2D 68               CMPA #68H
E26A 2B F8 00            JNE F800H
E26D 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E270 2D 00               CMPA #00H   ; Expecting C=0
E272 2B F8 00            JNE F800H
E275 30 8A               LDA #8AH
E277 2F BD               ADDA #BDH
E279 2D 47               CMPA #47H   
E27B 2B F8 00            JNE F800H
E27E 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E281 2D 01               CMPA #01H   ; Expecting C=1
E283 2B F8 00            JNE F800H
E286 30 01               LDA #01H
E288 2F 02               ADDA #02H
E28A 2D 03               CMPA #03H
E28C 2B F8 00            JNE F800H
E28F 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E292 2D 00               CMPA #00H   ; Expecting C=0
E294 2B F8 00            JNE F800H
E297 30 FF               LDA #FFH
E299 2F FF               ADDA #FFH
E29B 2D FE               CMPA #FEH
E29D 2B F8 00            JNE F800H
E2A0 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E2A3 2D 01               CMPA #01H   ; Expecting C=1
E2A5 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.30 LDA #**H  
                         ; LOAD IMMEDIATE VALUE IN REGISTER A
                         ; --------------------------------------------------------------------
E2A8 30 30               LDA #30H
E2AA 36                  NOTA
E2AB 31 C0 00            STA C000H   ; Output to LED port
E2AE 30 00               LDA #00H
E2B0 2D 00               CMPA #00H
E2B2 2B F8 00            JNE F800H
E2B5 30 01               LDA #01H
E2B7 2D 01               CMPA #01H
E2B9 2B F8 00            JNE F800H
E2BC 30 02               LDA #02H
E2BE 2D 02               CMPA #02H
E2C0 2B F8 00            JNE F800H
E2C3 30 04               LDA #04H
E2C5 2D 04               CMPA #04H
E2C7 2B F8 00            JNE F800H
E2CA 30 08               LDA #08H
E2CC 2D 08               CMPA #08H
E2CE 2B F8 00            JNE F800H
E2D1 30 10               LDA #10H
E2D3 2D 10               CMPA #10H
E2D5 2B F8 00            JNE F800H
E2D8 30 20               LDA #20H
E2DA 2D 20               CMPA #20H
E2DC 2B F8 00            JNE F800H
E2DF 30 40               LDA #40H
E2E1 2D 40               CMPA #40H
E2E3 2B F8 00            JNE F800H
E2E6 30 80               LDA #80H
E2E8 2D 80               CMPA #80H
E2EA 2B F8 00            JNE F800H
E2ED 30 55               LDA #55H
E2EF 2D 55               CMPA #55H
E2F1 2B F8 00            JNE F800H
E2F4 30 AA               LDA #AAH
E2F6 2D AA               CMPA #AAH
E2F8 2B F8 00            JNE F800H
E2FB 30 FF               LDA #FFH
E2FD 2D FF               CMPA #FFH
E2FF 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.31 STA ****H 
                         ; STORE REG.A TO ADDRESSE
                         ; --------------------------------------------------------------------
E302 30 31               LDA #31H
E304 36                  NOTA
E305 31 C0 00            STA C000H   ; Output to LED port
E308 30 12               LDA #12H    ; Write to RAM
E30A 31 00 00            STA 0000H
E30D 30 23               LDA #23H
E30F 31 00 01            STA 0001H
E312 30 34               LDA #34H
E314 31 00 02            STA 0002H
E317 30 45               LDA #45H
E319 31 00 04            STA 0004H
E31C 30 56               LDA #56H
E31E 31 00 08            STA 0008H
E321 30 67               LDA #67H
E323 31 00 10            STA 0010H
E326 30 78               LDA #78H
E328 31 00 20            STA 0020H
E32B 30 89               LDA #89H
E32D 31 00 40            STA 0040H
E330 30 AB               LDA #ABH
E332 31 00 80            STA 0080H
E335 30 BC               LDA #BCH
E337 31 01 00            STA 0100H
E33A 30 CD               LDA #CDH
E33C 31 02 00            STA 0200H
E33F 30 DE               LDA #DEH
E341 31 04 00            STA 0400H
E344 30 22               LDA #22H
E346 31 08 00            STA 0800H
E349 30 33               LDA #33H
E34B 31 10 00            STA 1000H
E34E 30 44               LDA #44H
E350 31 17 00            STA 1700H
E353 2A 00 00            LDA 0000H   ; Read from RAM and compare
E356 2D 12               CMPA #12H
E358 2B F8 00            JNE F800H
E35B 2A 00 01            LDA 0001H
E35E 2D 23               CMPA #23H
E360 2B F8 00            JNE F800H
E363 2A 00 02            LDA 0002H
E366 2D 34               CMPA #34H
E368 2B F8 00            JNE F800H
E36B 2A 00 04            LDA 0004H
E36E 2D 45               CMPA #45H
E370 2B F8 00            JNE F800H
E373 2A 00 08            LDA 0008H
E376 2D 56               CMPA #56H
E378 2B F8 00            JNE F800H
E37B 2A 00 10            LDA 0010H
E37E 2D 67               CMPA #67H
E380 2B F8 00            JNE F800H
E383 2A 00 20            LDA 0020H
E386 2D 78               CMPA #78H
E388 2B F8 00            JNE F800H
E38B 2A 00 40            LDA 0040H
E38E 2D 89               CMPA #89H
E390 2B F8 00            JNE F800H
E393 2A 00 80            LDA 0080H
E396 2D AB               CMPA #ABH
E398 2B F8 00            JNE F800H
E39B 2A 01 00            LDA 0100H
E39E 2D BC               CMPA #BCH
E3A0 2B F8 00            JNE F800H
E3A3 2A 02 00            LDA 0200H
E3A6 2D CD               CMPA #CDH
E3A8 2B F8 00            JNE F800H
E3AB 2A 04 00            LDA 0400H
E3AE 2D DE               CMPA #DEH
E3B0 2B F8 00            JNE F800H
E3B3 2A 08 00            LDA 0800H
E3B6 2D 22               CMPA #22H
E3B8 2B F8 00            JNE F800H
E3BB 2A 10 00            LDA 1000H
E3BE 2D 33               CMPA #33H
E3C0 2B F8 00            JNE F800H
E3C3 2A 17 00            LDA 1700H
E3C6 2D 44               CMPA #44H
E3C8 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.32 JMP ****H 
                         ; JUMP INCONDITIONAL TO ADDRESS
                         ; --------------------------------------------------------------------
                         ;LDA #32H
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.33 ANDA #**H  REGISTER A AND LOGICAL IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E3CB 30 33               LDA #33H
E3CD 36                  NOTA
E3CE 31 C0 00            STA C000H   ; Output to LED port
E3D1 30 FF               LDA #FFH
E3D3 33 52               ANDA #52H
E3D5 2D 52               CMPA #52H
E3D7 2B F8 00            JNE F800H
E3DA 30 E7               LDA #E7H
E3DC 33 3C               ANDA #3CH
E3DE 2D 24               CMPA #24H
E3E0 2B F8 00            JNE F800H
E3E3 30 00               LDA #00H
E3E5 33 00               ANDA #00H
E3E7 2D 00               CMPA #00H
E3E9 2B F8 00            JNE F800H
E3EC 30 FF               LDA #FFH
E3EE 33 FF               ANDA #FFH
E3F0 2D FF               CMPA #FFH
E3F2 2B F8 00            JNE F800H
E3F5 30 FF               LDA #FFH
E3F7 33 55               ANDA #55H
E3F9 2D 55               CMPA #55H
E3FB 2B F8 00            JNE F800H
E3FE 30 FF               LDA #FFH
E400 33 00               ANDA #00H
E402 2D 00               CMPA #00H
E404 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.34 ORA #**H   LOGICAL OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E407 30 34               LDA #34H
E409 36                  NOTA
E40A 31 C0 00            STA C000H   ; Output to LED port
E40D 30 FF               LDA #FFH
E40F 34 FF               ORA #FFH
E411 2D FF               CMPA #FFH
E413 2B F8 00            JNE F800H
E416 30 00               LDA #00H
E418 34 00               ORA #00H
E41A 2D 00               CMPA #00H
E41C 2B F8 00            JNE F800H
E41F 30 25               LDA #25H
E421 34 D3               ORA #D3H
E423 2D F7               CMPA #F7H
E425 2B F8 00            JNE F800H
E428 30 00               LDA #00H
E42A 34 FF               ORA #FFH
E42C 2D FF               CMPA #FFH
E42E 2B F8 00            JNE F800H
E431 30 FF               LDA #FFH
E433 34 00               ORA #00H
E435 2D FF               CMPA #FFH
E437 2B F8 00            JNE F800H
E43A 30 14               LDA #14H
E43C 34 C1               ORA #C1H
E43E 2D D5               CMPA #D5H
E440 2B F8 00            JNE F800H
E443 30 AA               LDA #AAH
E445 34 55               ORA #55H
E447 2D FF               CMPA #FFH
E449 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.35 XORA #**H  EXCLUSIVE OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E44C 30 35               LDA #35H
E44E 36                  NOTA
E44F 31 C0 00            STA C000H   ; Output to LED port
E452 30 00               LDA #00H
E454 35 00               XORA #00H
E456 2D 00               CMPA #00H
E458 2B F8 00            JNE F800H
E45B 30 00               LDA #00H
E45D 35 FF               XORA #FFH
E45F 2D FF               CMPA #FFH
E461 2B F8 00            JNE F800H
E464 30 FF               LDA #FFH
E466 35 FF               XORA #FFH
E468 2D 00               CMPA #00H
E46A 2B F8 00            JNE F800H
E46D 30 FF               LDA #FFH
E46F 35 55               XORA #55H
E471 2D AA               CMPA #AAH
E473 2B F8 00            JNE F800H
E476 30 CE               LDA #CEH
E478 35 5A               XORA #5AH
E47A 2D 94               CMPA #94H
E47C 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.36 NOTA  LOGIC NOT ON REG A
                         ; --------------------------------------------------------------------
E47F 30 36               LDA #36H
E481 36                  NOTA
E482 31 C0 00            STA C000H   ; Output to LED port
E485 30 00               LDA #00H
E487 36                  NOTA
E488 2D FF               CMPA #FFH
E48A 2B F8 00            JNE F800H
E48D 36                  NOTA
E48E 2D 00               CMPA #00H
E490 2B F8 00            JNE F800H
E493 30 55               LDA #55H
E495 36                  NOTA
E496 2D AA               CMPA #AAH
E498 2B F8 00            JNE F800H
E49B 36                  NOTA
E49C 2D 55               CMPA #55H
E49E 2B F8 00            JNE F800H
E4A1 36                  NOTA
E4A2 2D AA               CMPA #AAH
E4A4 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.37 INCA  A = A + 1  INCREMENT REGISTRE A
                         ; NO UPDATE ON C (CARRY)
                         ; --------------------------------------------------------------------
E4A7 30 37               LDA #37H
E4A9 36                  NOTA
E4AA 31 C0 00            STA C000H   ; Output to LED port
E4AD 30 00               LDA #00H
E4AF 37                  INCA
E4B0 2D 01               CMPA #01H
E4B2 2B F8 00            JNE F800H
E4B5 30 01               LDA #01H
E4B7 37                  INCA
E4B8 2D 02               CMPA #02H
E4BA 2B F8 00            JNE F800H
E4BD 30 7C               LDA #7CH
E4BF 37                  INCA
E4C0 37                  INCA
E4C1 37                  INCA
E4C2 37                  INCA
E4C3 37                  INCA
E4C4 37                  INCA
E4C5 37                  INCA
E4C6 37                  INCA
E4C7 37                  INCA
E4C8 37                  INCA
E4C9 2D 86               CMPA #86H
E4CB 2B F8 00            JNE F800H
E4CE 30 FE               LDA #FEH
E4D0 37                  INCA
E4D1 2D FF               CMPA #FFH
E4D3 2B F8 00            JNE F800H
E4D6 30 FF               LDA #FFH
E4D8 37                  INCA
E4D9 2D 00               CMPA #00H
E4DB 2B F8 00            JNE F800H
E4DE 30 FF               LDA #FFH
E4E0 37                  INCA
E4E1 37                  INCA
E4E2 2D 01               CMPA #01H
E4E4 2B F8 00            JNE F800H
E4E7 37                  INCA
E4E8 37                  INCA
E4E9 37                  INCA
E4EA 37                  INCA
E4EB 2D 05               CMPA #05H
E4ED 2B F8 00            JNE F800H
E4F0 37                  INCA
E4F1 37                  INCA
E4F2 37                  INCA
E4F3 37                  INCA
E4F4 37                  INCA
E4F5 37                  INCA
E4F6 37                  INCA
E4F7 37                  INCA
E4F8 2D 0D               CMPA #0DH
E4FA 2B F8 00            JNE F800H
E4FD 30 00               LDA #00H    ; Test Carry is not updated
E4FF 31 1F FB            STA 1FFBH   ; Clear Carry 
E502 30 FF               LDA #FFH
E504 37                  INCA
E505 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E508 2D 00               CMPA #00H   ; Expecting C=0 and <7:1> = 0
E50A 2B F8 00            JNE F800H
E50D 30 01               LDA #01H    ; Set Carry 
E50F 31 1F FB            STA 1FFBH   
E512 30 EB               LDA #EBH
E514 37                  INCA
E515 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E518 2D 01               CMPA #01H   ; Expecting C=1 and <7:1> = 0
E51A 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.38  LDX #****H   Load X Register with 16 bits immediate value
                         ; --------------------------------------------------------------------
E51D 30 38               LDA #38H
E51F 36                  NOTA
E520 31 C0 00            STA C000H   ; Output to LED port
E523 38 12 34            LDX #1234H
E526 2A 1F F3            LDA 1FF3H   ; Read Reg X MSB into A
E529 2D 12               CMPA #12H
E52B 2B F8 00            JNE F800H
E52E 2A 1F F4            LDA 1FF4H   ; Read Reg X LSB into A
E531 2D 34               CMPA #34H
E533 2B F8 00            JNE F800H
E536 38 AB CD            LDX #ABCDH
E539 2A 1F F3            LDA 1FF3H   ; Read Reg X MSB into A
E53C 2D AB               CMPA #ABH
E53E 2B F8 00            JNE F800H
E541 2A 1F F4            LDA 1FF4H   ; Read Reg X LSB into A
E544 2D CD               CMPA #CDH
E546 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.39  INCX   Increment Register X,  Carry Not Updated
                         ; --------------------------------------------------------------------
E549 30 39               LDA #39H
E54B 36                  NOTA
E54C 31 C0 00            STA C000H   ; Output to LED port
E54F 38 00 00            LDX #0000H  ; Clear X register
E552 39                  INCX        ; Increment X
E553 2A 1F F4            LDA 1FF4H   ; Read Reg X LSB into A
E556 2D 01               CMPA #01H
E558 2B F8 00            JNE F800H
E55B 2A 1F F3            LDA 1FF3H   ; Read Reg X MSB into A
E55E 2D 00               CMPA #00H
E560 2B F8 00            JNE F800H
E563 39                  INCX
E564 2A 1F F4            LDA 1FF4H   ; Read Reg X LSB into A
E567 2D 02               CMPA #02H
E569 2B F8 00            JNE F800H
E56C 2A 1F F3            LDA 1FF3H   ; Read Reg X MSB into A
E56F 2D 00               CMPA #00H
E571 2B F8 00            JNE F800H

E574 38 00 FF            LDX #00FFH  ; Test a carry set
E577 39                  INCX        ; Increment X
E578 2A 1F F4            LDA 1FF4H   ; Read Reg X LSB into A
E57B 2D 00               CMPA #00H
E57D 2B F8 00            JNE F800H
E580 2A 1F F3            LDA 1FF3H   ; Read Reg X MSB into A
E583 2D 01               CMPA #01H
E585 2B F8 00            JNE F800H
E588 39                  INCX        ; Increment X
E589 2A 1F F4            LDA 1FF4H   ; Read Reg X LSB into A
E58C 2D 01               CMPA #01H
E58E 2B F8 00            JNE F800H
E591 2A 1F F3            LDA 1FF3H   ; Read Reg X MSB into A
E594 2D 01               CMPA #01H
E596 2B F8 00            JNE F800H

E599 38 1E FF            LDX #1EFFH
E59C 39                  INCX        ; Increment X
E59D 2A 1F F4            LDA 1FF4H   ; Read Reg X LSB into A
E5A0 2D 00               CMPA #00H
E5A2 2B F8 00            JNE F800H
E5A5 2A 1F F3            LDA 1FF3H   ; Read Reg X MSB into A
E5A8 2D 1F               CMPA #1FH
E5AA 2B F8 00            JNE F800H

E5AD 38 FF FF            LDX #FFFFH
E5B0 39                  INCX        ; Increment X
E5B1 2A 1F F4            LDA 1FF4H   ; Read Reg X LSB into A
E5B4 2D 00               CMPA #00H
E5B6 2B F8 00            JNE F800H
E5B9 2A 1F F3            LDA 1FF3H   ; Read Reg X MSB into A
E5BC 2D 00               CMPA #00H
E5BE 2B F8 00            JNE F800H

                         ; --------------------------------------------------------------------
                         ; FIBONACCI TEST
                         ; --------------------------------------------------------------------         
E5C1 30 FF               LDA #FFH
E5C3 36                  NOTA
E5C4 31 C0 00            STA C000H   ; Output to LED port
                                     ;
E5C7 30 00               LDA #00H    ; Init first number with 00H
E5C9 31 10 00            STA 1000H
E5CC 30 01               LDA #01H    ; Init second number with 01H
E5CE 31 10 01            STA 1001H
E5D1 2A 10 00            LDA 1000H   ; Load first number in A
E5D4 29 10 01            ADDA 1001H  ; Add second number to A
E5D7 31 10 02            STA 1002H   ; Store the summ
E5DA 2D 01               CMPA #01H   ; HEX   Decimal  Real Value (in 8 bit storage only)
E5DC 2B F8 00            JNE F800H   ; 01H   1        1

E5DF 2A 10 01            LDA 1001H   ; Move second number to the first number
E5E2 31 10 00            STA 1000H
E5E5 2A 10 02            LDA 1002H   ; Move summ to the second number
E5E8 31 10 01            STA 1001H
E5EB 2A 10 00            LDA 1000H   ; Load first number in A
E5EE 29 10 01            ADDA 1001H  ; Add second number to A
E5F1 31 10 02            STA 1002H   ; Store the summ
E5F4 2D 02               CMPA #02H   ; HEX   Decimal  Real Value
E5F6 2B F8 00            JNE F800H   ; 02H   2        2

E5F9 2A 10 01            LDA 1001H   ; Move second number to the first number
E5FC 31 10 00            STA 1000H
E5FF 2A 10 02            LDA 1002H   ; Move summ to the second number
E602 31 10 01            STA 1001H
E605 2A 10 00            LDA 1000H   ; Load first number in A
E608 29 10 01            ADDA 1001H  ; Add second number to A
E60B 31 10 02            STA 1002H   ; Store the summ
E60E 2D 03               CMPA #03H   ; HEX   Decimal  Real Value
E610 2B F8 00            JNE F800H   ; 03H   3        3

E613 2A 10 01            LDA 1001H   ; Move second number to the first number
E616 31 10 00            STA 1000H
E619 2A 10 02            LDA 1002H   ; Move summ to the second number
E61C 31 10 01            STA 1001H
E61F 2A 10 00            LDA 1000H   ; Load first number in A
E622 29 10 01            ADDA 1001H  ; Add second number to A
E625 31 10 02            STA 1002H   ; Store the summ
E628 2D 05               CMPA #05H   ; HEX   Decimal  Real Value
E62A 2B F8 00            JNE F800H   ; 05H   5        5

E62D 2A 10 01            LDA 1001H   ; Move second number to the first number
E630 31 10 00            STA 1000H
E633 2A 10 02            LDA 1002H   ; Move summ to the second number
E636 31 10 01            STA 1001H
E639 2A 10 00            LDA 1000H   ; Load first number in A
E63C 29 10 01            ADDA 1001H  ; Add second number to A
E63F 31 10 02            STA 1002H   ; Store the summ
E642 2D 08               CMPA #08H   ; HEX   Decimal  Real Value
E644 2B F8 00            JNE F800H   ; 08H   8        8

E647 2A 10 01            LDA 1001H   ; Move second number to the first number
E64A 31 10 00            STA 1000H
E64D 2A 10 02            LDA 1002H   ; Move summ to the second number
E650 31 10 01            STA 1001H
E653 2A 10 00            LDA 1000H   ; Load first number in A
E656 29 10 01            ADDA 1001H  ; Add second number to A
E659 31 10 02            STA 1002H   ; Store the summ
E65C 2D 0D               CMPA #0DH   ; HEX   Decimal  Real Value
E65E 2B F8 00            JNE F800H   ; 0DH   13       13

E661 2A 10 01            LDA 1001H   ; Move second number to the first number
E664 31 10 00            STA 1000H
E667 2A 10 02            LDA 1002H   ; Move summ to the second number
E66A 31 10 01            STA 1001H
E66D 2A 10 00            LDA 1000H   ; Load first number in A
E670 29 10 01            ADDA 1001H  ; Add second number to A
E673 31 10 02            STA 1002H   ; Store the summ
E676 2D 15               CMPA #15H   ; HEX   Decimal  Real Value
E678 2B F8 00            JNE F800H   ; 15H   21       21

E67B 2A 10 01            LDA 1001H   ; Move second number to the first number
E67E 31 10 00            STA 1000H
E681 2A 10 02            LDA 1002H   ; Move summ to the second number
E684 31 10 01            STA 1001H
E687 2A 10 00            LDA 1000H   ; Load first number in A
E68A 29 10 01            ADDA 1001H  ; Add second number to A
E68D 31 10 02            STA 1002H   ; Store the summ
E690 2D 22               CMPA #22H   ; HEX   Decimal  Real Value
E692 2B F8 00            JNE F800H   ; 22H   34       34

E695 2A 10 01            LDA 1001H   ; Move second number to the first number
E698 31 10 00            STA 1000H
E69B 2A 10 02            LDA 1002H   ; Move summ to the second number
E69E 31 10 01            STA 1001H
E6A1 2A 10 00            LDA 1000H   ; Load first number in A
E6A4 29 10 01            ADDA 1001H  ; Add second number to A
E6A7 31 10 02            STA 1002H   ; Store the summ
E6AA 2D 37               CMPA #37H   ; HEX   Decimal  Real Value
E6AC 2B F8 00            JNE F800H   ; 37H   55       55

E6AF 2A 10 01            LDA 1001H   ; Move second number to the first number
E6B2 31 10 00            STA 1000H
E6B5 2A 10 02            LDA 1002H   ; Move summ to the second number
E6B8 31 10 01            STA 1001H
E6BB 2A 10 00            LDA 1000H   ; Load first number in A
E6BE 29 10 01            ADDA 1001H  ; Add second number to A
E6C1 31 10 02            STA 1002H   ; Store the summ
E6C4 2D 59               CMPA #59H   ; HEX   Decimal  Real Value
E6C6 2B F8 00            JNE F800H   ; 59H   89       89

E6C9 2A 10 01            LDA 1001H   ; Move second number to the first number
E6CC 31 10 00            STA 1000H
E6CF 2A 10 02            LDA 1002H   ; Move summ to the second number
E6D2 31 10 01            STA 1001H
E6D5 2A 10 00            LDA 1000H   ; Load first number in A
E6D8 29 10 01            ADDA 1001H  ; Add second number to A
E6DB 31 10 02            STA 1002H   ; Store the summ
E6DE 2D 90               CMPA #90H   ; HEX   Decimal  Real Value
E6E0 2B F8 00            JNE F800H   ; 90H   144      144

E6E3 2A 10 01            LDA 1001H   ; Move second number to the first number
E6E6 31 10 00            STA 1000H
E6E9 2A 10 02            LDA 1002H   ; Move summ to the second number
E6EC 31 10 01            STA 1001H
E6EF 2A 10 00            LDA 1000H   ; Load first number in A
E6F2 29 10 01            ADDA 1001H  ; Add second number to A
E6F5 31 10 02            STA 1002H   ; Store the summ
E6F8 2D E9               CMPA #E9H   ; HEX   Decimal  Real Value
E6FA 2B F8 00            JNE F800H   ; E9H   233      233

E6FD 2A 10 01            LDA 1001H   ; Move second number to the first number
E700 31 10 00            STA 1000H
E703 2A 10 02            LDA 1002H   ; Move summ to the second number
E706 31 10 01            STA 1001H
E709 2A 10 00            LDA 1000H   ; Load first number in A
E70C 29 10 01            ADDA 1001H  ; Add second number to A
E70F 31 10 02            STA 1002H   ; Store the summ
E712 2D 79               CMPA #79H   ; HEX   Decimal  Real Value
E714 2B F8 00            JNE F800H   ; 79H   121      377 - (256*1) = 121

E717 2A 10 01            LDA 1001H   ; Move second number to the first number
E71A 31 10 00            STA 1000H
E71D 2A 10 02            LDA 1002H   ; Move summ to the second number
E720 31 10 01            STA 1001H
E723 2A 10 00            LDA 1000H   ; Load first number in A
E726 29 10 01            ADDA 1001H  ; Add second number to A
E729 31 10 02            STA 1002H   ; Store the summ
E72C 2D 62               CMPA #62H   ; HEX   Decimal  Real Value
E72E 2B F8 00            JNE F800H   ; 62H   98       610 - (256*2) = 98

E731 2A 10 01            LDA 1001H   ; Move second number to the first number
E734 31 10 00            STA 1000H
E737 2A 10 02            LDA 1002H   ; Move summ to the second number
E73A 31 10 01            STA 1001H
E73D 2A 10 00            LDA 1000H   ; Load first number in A
E740 29 10 01            ADDA 1001H  ; Add second number to A
E743 31 10 02            STA 1002H   ; Store the summ
E746 2D DB               CMPA #DBH   ; HEX   Decimal  Real Value
E748 2B F8 00            JNE F800H   ; DBH   219      987 - (256*3) = 219         

                         ; --------------------------------------------------------------------      
                         ; END OF FIBONACCI TEST
                         ; --------------------------------------------------------------------      

E74B 32 E0 00            JMP E000H   ; Loop from start of diag test

                         ; --------------------------------------------------------------------
                         ; Error routine
                         ; --------------------------------------------------------------------
                         ORG/F800H   ; Diagnostic Error routine   
F800 08                  STOP        ; Stop execution
                         ;JMP F800H   ; Infinite Loop on error

                         ; --------------------------------------------------------------------
                         ; JSR and RTS Test subroutine
                         ; --------------------------------------------------------------------
                         ORG/FFC0H
FFC0 30 11               LDA #11H
FFC2 07                  RTS
                         ORG/FFC3H
FFC3 30 22               LDA #22H
FFC5 06 FF C0            JSR FFC0H
FFC8 07                  RTS
                         ORG/FFC9H
FFC9 30 33               LDA #33H
FFCB 06 FF C3            JSR FFC3H
FFCE 07                  RTS
                         ORG/FFCFH
FFCF 30 44               LDA #44H
FFD1 06 FF C9            JSR FFC9H
FFD4 07                  RTS
                         ORG/FFD5H
FFD5 30 44               LDA #44H
FFD7 06 FF CF            JSR FFCFH
FFDA 07                  RTS
                         ORG/FFDBH
FFDB 30 55               LDA #55H
FFDD 06 FF D5            JSR FFD5H
FFE0 07                  RTS
                         ORG/FFE1H
FFE1 30 66               LDA #66H
FFE3 06 FF DB            JSR FFDBH
FFE6 07                  RTS
                         ORG/FFE7H
FFE7 30 77               LDA #77H
FFE9 06 FF E1            JSR FFE1H
FFEC 07                  RTS
                         ORG/FFEDH
FFED 30 88               LDA #88H
FFEF 06 FF E7            JSR FFE7H
FFF2 07                  RTS
                         ORG/FFF3H
FFF3 30 99               LDA #99H
FFF5 06 FF ED            JSR FFEDH
FFF8 07                  RTS
                         ; --------------------------------------------------------------------
                         ; Reset Vector
                         ; --------------------------------------------------------------------
                         ORG/FFFEH   ; Set the Reset vector
FFFE E0                  DB E0H      ; MSB Reset Vector
FFFF 00                  DB 00H      ; LSB Reset Vector


Assembly complete
Number of errors = 0
