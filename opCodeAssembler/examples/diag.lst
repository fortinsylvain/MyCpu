; -----------------------------------------------------------------
; Homebrew MyCPU diagnostic program
; Author: Sylvain Fortin
; Date : 17 december 2023
; Documentation : diag.asm is used to test the assembler
;                 instructions of MyCPU.
; Memory map of the computer
; 0000H - 17FFH Total RAM space
; 0000H - 00FFH Stack
; 0100H - 17EF  Free for application
; 17F0H         SP Stack Pointer 8 bit
; 17F1H temp SP1
; 17F2H temp SP2
; 17FAH bit<0>	Equal
; 17FBH bit<0>	Carry
; 17FCH A Register
; 17FEH IPH	Instruction Pointer MSB
; 17FFH IPL Instruction Pointer LSB
; C000H           LED port
; E000H - F000H   EEPROM 2864 for program storage
; -----------------------------------------------------------------
                                     ; 
                         ORG/E000H   ; EEPROM Start

E000 30 00               LDA #00H    ; Clear LED
E002 36                  NOTA
E003 31 C0 00            STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.08 STOP
                         ; STOP EXECUTING
                         ; Cannot test here it will stop execution...
                         ; --------------------------------------------------------------------
                         ;LDA #08H
                         ;NOTA
                         ;STA C000H   ; Output to LED port
                         ;STOP

                         ; --------------------------------------------------------------------
                         ; OP.29 ADDA ****H  
                         ; ADD A WITH BYTE AT ADDRESS, C UPDATE
                         ; --------------------------------------------------------------------
                         ;LDA #29H
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2A LDA ****H  
                         ; LOAD A WITH BYTE AT ADDRESS Test LDA #**H instruction 
                         ; --------------------------------------------------------------------
E006 30 2A               LDA #2AH
E008 36                  NOTA
E009 31 C0 00            STA C000H   ; Output to LED port
E00C 30 AA               LDA #AAH    ; Load immediate in register A
E00E 2D AA               CMPA #AAH
E010 2B F8 00            JNE F800H
E013 30 01               LDA #01H
E015 2D 01               CMPA #01H
E017 2B F8 00            JNE F800H
E01A 30 02               LDA #02H
E01C 2D 02               CMPA #02H
E01E 2B F8 00            JNE F800H
E021 30 04               LDA #04H
E023 2D 04               CMPA #04H
E025 2B F8 00            JNE F800H
E028 30 08               LDA #08H
E02A 2D 08               CMPA #08H
E02C 2B F8 00            JNE F800H
E02F 30 10               LDA #10H
E031 2D 10               CMPA #10H
E033 2B F8 00            JNE F800H
E036 30 20               LDA #20H
E038 2D 20               CMPA #20H
E03A 2B F8 00            JNE F800H
E03D 30 40               LDA #40H
E03F 2D 40               CMPA #40H
E041 2B F8 00            JNE F800H
E044 30 80               LDA #80H
E046 2D 80               CMPA #80H
E048 2B F8 00            JNE F800H
E04B 30 55               LDA #55H
E04D 2D 55               CMPA #55H
E04F 2B F8 00            JNE F800H
E052 30 FF               LDA #FFH
E054 2D FF               CMPA #FFH
E056 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.2B JNEQ ****H  
                         ; JUMP IF E=0
                         ; --------------------------------------------------------------------
                         ;LDA #2BH
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2C JEQ ****H
                         ; JUMP IF E=1
                         ; --------------------------------------------------------------------
                         ;LDA #2CH
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2D CMPA #**H
                         ; COMPARE A WITH IMMEDIATE VALUE 
                         ; --------------------------------------------------------------------
                         ;LDA #2DH
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2E ADCA #**H
                         ; ACCA+M+C>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
                         ;LDA #2EH
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2F ADDA #**H
                         ; ACCA+M>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
E059 30 2F               LDA #2FH
E05B 36                  NOTA
E05C 31 C0 00            STA C000H   ; Output to LED port
E05F 30 23               LDA #23H
E061 2F 45               ADDA #45H
E063 2D 68               CMPA #68H
E065 2B F8 00            JNE F800H
                         ;LDA 17FBH   ; Read Carry bit <0>
                         ;CMPA #00H   ; Expecting C=0
                         ;JNE F800H
E068 30 8A               LDA #8AH
E06A 2F BD               ADDA #BDH
E06C 2D 47               CMPA #47H   
E06E 2B F8 00            JNE F800H
                         ;LDA 17FBH   ; Read Carry bit <0>   BUG: Appear to miss the Carry !!!!
                         ;CMPA #01H   ; Expecting C=1
                         ;JNE F800H
                         ;LDA #01H
                         ;ADDA #02H
                         ;CMPA #03H
                         ;JNE F800H
                         ;LDA 17FBH   ; Read Carry bit <0>
                         ;CMPA #00H   ; Expecting C=0
                         ;JNE F800H
                         ;LDA #FFH
                         ;ADDA #FFH
                         ;CMPA #FEH
                         ;JNE F800H
                         ;LDA 17FBH   ; Read Carry bit <0>
                         ;CMPA #01H   ; Expecting C=1
                         ;JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.30 LDA #**H  
                         ; LOAD IMMEDIATE VALUE IN REGISTER A
                         ; --------------------------------------------------------------------
E071 30 30               LDA #30H
E073 36                  NOTA
E074 31 C0 00            STA C000H   ; Output to LED port
E077 30 00               LDA #00H
E079 2D 00               CMPA #00H
E07B 2B F8 00            JNE F800H
E07E 30 01               LDA #01H
E080 2D 01               CMPA #01H
E082 2B F8 00            JNE F800H
E085 30 02               LDA #02H
E087 2D 02               CMPA #02H
E089 2B F8 00            JNE F800H
E08C 30 04               LDA #04H
E08E 2D 04               CMPA #04H
E090 2B F8 00            JNE F800H
E093 30 08               LDA #08H
E095 2D 08               CMPA #08H
E097 2B F8 00            JNE F800H
E09A 30 10               LDA #10H
E09C 2D 10               CMPA #10H
E09E 2B F8 00            JNE F800H
E0A1 30 20               LDA #20H
E0A3 2D 20               CMPA #20H
E0A5 2B F8 00            JNE F800H
E0A8 30 40               LDA #40H
E0AA 2D 40               CMPA #40H
E0AC 2B F8 00            JNE F800H
E0AF 30 80               LDA #80H
E0B1 2D 80               CMPA #80H
E0B3 2B F8 00            JNE F800H
E0B6 30 55               LDA #55H
E0B8 2D 55               CMPA #55H
E0BA 2B F8 00            JNE F800H
E0BD 30 AA               LDA #AAH
E0BF 2D AA               CMPA #AAH
E0C1 2B F8 00            JNE F800H
E0C4 30 FF               LDA #FFH
E0C6 2D FF               CMPA #FFH
E0C8 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.31 STA ****H 
                         ; STORE REG.A TO ADDRESSE
                         ; --------------------------------------------------------------------
E0CB 30 31               LDA #31H
E0CD 36                  NOTA
E0CE 31 C0 00            STA C000H   ; Output to LED port
E0D1 30 12               LDA #12H    ; Write to RAM
E0D3 31 00 00            STA 0000H
E0D6 30 23               LDA #23H
E0D8 31 00 01            STA 0001H
E0DB 30 34               LDA #34H
E0DD 31 00 02            STA 0002H
E0E0 30 45               LDA #45H
E0E2 31 00 04            STA 0004H
E0E5 30 56               LDA #56H
E0E7 31 00 08            STA 0008H
E0EA 30 67               LDA #67H
E0EC 31 00 10            STA 0010H
E0EF 30 78               LDA #78H
E0F1 31 00 20            STA 0020H
E0F4 30 89               LDA #89H
E0F6 31 00 40            STA 0040H
E0F9 30 AB               LDA #ABH
E0FB 31 00 80            STA 0080H
E0FE 30 BC               LDA #BCH
E100 31 01 00            STA 0100H
E103 30 CD               LDA #CDH
E105 31 02 00            STA 0200H
E108 30 DE               LDA #DEH
E10A 31 04 00            STA 0400H
E10D 30 22               LDA #22H
E10F 31 08 00            STA 0800H
E112 30 33               LDA #33H
E114 31 10 00            STA 1000H
E117 30 44               LDA #44H
E119 31 17 00            STA 1700H
E11C 2A 00 00            LDA 0000H   ; Read from RAM and compare
E11F 2D 12               CMPA #12H
E121 2B F8 00            JNE F800H
E124 2A 00 01            LDA 0001H
E127 2D 23               CMPA #23H
E129 2B F8 00            JNE F800H
E12C 2A 00 02            LDA 0002H
E12F 2D 34               CMPA #34H
E131 2B F8 00            JNE F800H
E134 2A 00 04            LDA 0004H
E137 2D 45               CMPA #45H
E139 2B F8 00            JNE F800H
E13C 2A 00 08            LDA 0008H
E13F 2D 56               CMPA #56H
E141 2B F8 00            JNE F800H
E144 2A 00 10            LDA 0010H
E147 2D 67               CMPA #67H
E149 2B F8 00            JNE F800H
E14C 2A 00 20            LDA 0020H
E14F 2D 78               CMPA #78H
E151 2B F8 00            JNE F800H
E154 2A 00 40            LDA 0040H
E157 2D 89               CMPA #89H
E159 2B F8 00            JNE F800H
E15C 2A 00 80            LDA 0080H
E15F 2D AB               CMPA #ABH
E161 2B F8 00            JNE F800H
E164 2A 01 00            LDA 0100H
E167 2D BC               CMPA #BCH
E169 2B F8 00            JNE F800H
E16C 2A 02 00            LDA 0200H
E16F 2D CD               CMPA #CDH
E171 2B F8 00            JNE F800H
E174 2A 04 00            LDA 0400H
E177 2D DE               CMPA #DEH
E179 2B F8 00            JNE F800H
E17C 2A 08 00            LDA 0800H
E17F 2D 22               CMPA #22H
E181 2B F8 00            JNE F800H
E184 2A 10 00            LDA 1000H
E187 2D 33               CMPA #33H
E189 2B F8 00            JNE F800H
E18C 2A 17 00            LDA 1700H
E18F 2D 44               CMPA #44H
E191 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.32 JMP ****H 
                         ; JUMP INCONDITIONAL TO ADDRESS
                         ; --------------------------------------------------------------------
                         ;LDA #32H
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.33 ANDA #**H  REGISTER A AND LOGICAL IMMEDIATE 
                         ; --------------------------------------------------------------------
E194 30 33               LDA #33H
E196 36                  NOTA
E197 31 C0 00            STA C000H   ; Output to LED port
E19A 30 FF               LDA #FFH
E19C 33 52               ANDA #52H
E19E 2D 52               CMPA #52H
E1A0 2B F8 00            JNE F800H
E1A3 30 E7               LDA #E7H
E1A5 33 3C               ANDA #3CH
E1A7 2D 24               CMPA #24H
E1A9 2B F8 00            JNE F800H
E1AC 30 00               LDA #00H
E1AE 33 00               ANDA #00H
E1B0 2D 00               CMPA #00H
E1B2 2B F8 00            JNE F800H
E1B5 30 FF               LDA #FFH
E1B7 33 FF               ANDA #FFH
E1B9 2D FF               CMPA #FFH
E1BB 2B F8 00            JNE F800H
E1BE 30 FF               LDA #FFH
E1C0 33 55               ANDA #55H
E1C2 2D 55               CMPA #55H
E1C4 2B F8 00            JNE F800H
E1C7 30 FF               LDA #FFH
E1C9 33 00               ANDA #00H
E1CB 2D 00               CMPA #00H
E1CD 2B F8 00            JNE F800H

                         ; --------------------------------------------------------------------
                         ; OP.37 INCA  INCREMENT REGISTRE A UPDATE C (CARRY)
                         ; --------------------------------------------------------------------
E1D0 30 37               LDA #37H
E1D2 36                  NOTA
E1D3 31 C0 00            STA C000H   ; Output to LED port
E1D6 30 00               LDA #00H
E1D8 37                  INCA
E1D9 2D 01               CMPA #01H
E1DB 2B F8 00            JNE F800H
E1DE 2A 17 FB            LDA 17FBH   ; Read Carry bit <0>
E1E1 2D 00               CMPA #00H   ; Expecting C=0
E1E3 2B F8 00            JNE F800H
E1E6 30 01               LDA #01H
E1E8 37                  INCA
E1E9 2D 02               CMPA #02H
E1EB 2B F8 00            JNE F800H
E1EE 2A 17 FB            LDA 17FBH   ; Read Carry bit <0>
E1F1 2D 00               CMPA #00H   ; Expecting C=0
E1F3 2B F8 00            JNE F800H
E1F6 30 7C               LDA #7CH
E1F8 37                  INCA
E1F9 37                  INCA
E1FA 37                  INCA
E1FB 37                  INCA
E1FC 37                  INCA
E1FD 37                  INCA
E1FE 37                  INCA
E1FF 37                  INCA
E200 37                  INCA
E201 37                  INCA
E202 2D 86               CMPA #86H
E204 2B F8 00            JNE F800H
E207 2A 17 FB            LDA 17FBH   ; Read Carry bit <0>
E20A 2D 00               CMPA #00H   ; Expecting C=0
E20C 2B F8 00            JNE F800H
E20F 30 FE               LDA #FEH
E211 37                  INCA
E212 2D FF               CMPA #FFH
E214 2B F8 00            JNE F800H
E217 2A 17 FB            LDA 17FBH   ; Read Carry bit <0>
E21A 2D 00               CMPA #00H   ; Expecting C=0
E21C 2B F8 00            JNE F800H
E21F 30 FF               LDA #FFH
E221 37                  INCA
E222 2D 00               CMPA #00H
E224 2B F8 00            JNE F800H
E227 09                  NOP
E228 2A 17 FB            LDA 17FBH   ; Read Carry bit <0>  Appear to have a corrupted carry register,
                                     ;                     other bit than bit <0> may have been changed
E22B 2D 01               CMPA #01H   ; Expecting C=1
E22D 2B F8 00            JNE F800H

                         ; --------------------------------------------------------------------
                         ; FIBONACCI TEST
                         ; --------------------------------------------------------------------         
E230 30 FF               LDA #FFH
E232 36                  NOTA
E233 31 C0 00            STA C000H   ; Output to LED port
                                     ;
E236 30 00               LDA #00H    ; Init first number with 00H
E238 31 10 00            STA 1000H
E23B 30 01               LDA #01H    ; Init second number with 01H
E23D 31 10 01            STA 1001H
E240 2A 10 00            LDA 1000H   ; Load first number in A
E243 29 10 01            ADDA 1001H  ; Add second number to A
E246 31 10 02            STA 1002H   ; Store the summ
E249 2D 01               CMPA #01H   ; HEX   Decimal  Real Value (in 8 bit storage only)
E24B 2B F8 00            JNE F800H   ; 01H   1        1

E24E 2A 10 01            LDA 1001H   ; Move second number to the first number
E251 31 10 00            STA 1000H
E254 2A 10 02            LDA 1002H   ; Move summ to the second number
E257 31 10 01            STA 1001H
E25A 2A 10 00            LDA 1000H   ; Load first number in A
E25D 29 10 01            ADDA 1001H  ; Add second number to A
E260 31 10 02            STA 1002H   ; Store the summ
E263 2D 02               CMPA #02H   ; HEX   Decimal  Real Value
E265 2B F8 00            JNE F800H   ; 02H   2        2

E268 2A 10 01            LDA 1001H   ; Move second number to the first number
E26B 31 10 00            STA 1000H
E26E 2A 10 02            LDA 1002H   ; Move summ to the second number
E271 31 10 01            STA 1001H
E274 2A 10 00            LDA 1000H   ; Load first number in A
E277 29 10 01            ADDA 1001H  ; Add second number to A
E27A 31 10 02            STA 1002H   ; Store the summ
E27D 2D 03               CMPA #03H   ; HEX   Decimal  Real Value
E27F 2B F8 00            JNE F800H   ; 03H   3        3

E282 2A 10 01            LDA 1001H   ; Move second number to the first number
E285 31 10 00            STA 1000H
E288 2A 10 02            LDA 1002H   ; Move summ to the second number
E28B 31 10 01            STA 1001H
E28E 2A 10 00            LDA 1000H   ; Load first number in A
E291 29 10 01            ADDA 1001H  ; Add second number to A
E294 31 10 02            STA 1002H   ; Store the summ
E297 2D 05               CMPA #05H   ; HEX   Decimal  Real Value
E299 2B F8 00            JNE F800H   ; 05H   5        5

E29C 2A 10 01            LDA 1001H   ; Move second number to the first number
E29F 31 10 00            STA 1000H
E2A2 2A 10 02            LDA 1002H   ; Move summ to the second number
E2A5 31 10 01            STA 1001H
E2A8 2A 10 00            LDA 1000H   ; Load first number in A
E2AB 29 10 01            ADDA 1001H  ; Add second number to A
E2AE 31 10 02            STA 1002H   ; Store the summ
E2B1 2D 08               CMPA #08H   ; HEX   Decimal  Real Value
E2B3 2B F8 00            JNE F800H   ; 08H   8        8

E2B6 2A 10 01            LDA 1001H   ; Move second number to the first number
E2B9 31 10 00            STA 1000H
E2BC 2A 10 02            LDA 1002H   ; Move summ to the second number
E2BF 31 10 01            STA 1001H
E2C2 2A 10 00            LDA 1000H   ; Load first number in A
E2C5 29 10 01            ADDA 1001H  ; Add second number to A
E2C8 31 10 02            STA 1002H   ; Store the summ
E2CB 2D 0D               CMPA #0DH   ; HEX   Decimal  Real Value
E2CD 2B F8 00            JNE F800H   ; 0DH   13       13

E2D0 2A 10 01            LDA 1001H   ; Move second number to the first number
E2D3 31 10 00            STA 1000H
E2D6 2A 10 02            LDA 1002H   ; Move summ to the second number
E2D9 31 10 01            STA 1001H
E2DC 2A 10 00            LDA 1000H   ; Load first number in A
E2DF 29 10 01            ADDA 1001H  ; Add second number to A
E2E2 31 10 02            STA 1002H   ; Store the summ
E2E5 2D 15               CMPA #15H   ; HEX   Decimal  Real Value
E2E7 2B F8 00            JNE F800H   ; 15H   21       21

E2EA 2A 10 01            LDA 1001H   ; Move second number to the first number
E2ED 31 10 00            STA 1000H
E2F0 2A 10 02            LDA 1002H   ; Move summ to the second number
E2F3 31 10 01            STA 1001H
E2F6 2A 10 00            LDA 1000H   ; Load first number in A
E2F9 29 10 01            ADDA 1001H  ; Add second number to A
E2FC 31 10 02            STA 1002H   ; Store the summ
E2FF 2D 22               CMPA #22H   ; HEX   Decimal  Real Value
E301 2B F8 00            JNE F800H   ; 22H   34       34

E304 2A 10 01            LDA 1001H   ; Move second number to the first number
E307 31 10 00            STA 1000H
E30A 2A 10 02            LDA 1002H   ; Move summ to the second number
E30D 31 10 01            STA 1001H
E310 2A 10 00            LDA 1000H   ; Load first number in A
E313 29 10 01            ADDA 1001H  ; Add second number to A
E316 31 10 02            STA 1002H   ; Store the summ
E319 2D 37               CMPA #37H   ; HEX   Decimal  Real Value
E31B 2B F8 00            JNE F800H   ; 37H   55       55

E31E 2A 10 01            LDA 1001H   ; Move second number to the first number
E321 31 10 00            STA 1000H
E324 2A 10 02            LDA 1002H   ; Move summ to the second number
E327 31 10 01            STA 1001H
E32A 2A 10 00            LDA 1000H   ; Load first number in A
E32D 29 10 01            ADDA 1001H  ; Add second number to A
E330 31 10 02            STA 1002H   ; Store the summ
E333 2D 59               CMPA #59H   ; HEX   Decimal  Real Value
E335 2B F8 00            JNE F800H   ; 59H   89       89

E338 2A 10 01            LDA 1001H   ; Move second number to the first number
E33B 31 10 00            STA 1000H
E33E 2A 10 02            LDA 1002H   ; Move summ to the second number
E341 31 10 01            STA 1001H
E344 2A 10 00            LDA 1000H   ; Load first number in A
E347 29 10 01            ADDA 1001H  ; Add second number to A
E34A 31 10 02            STA 1002H   ; Store the summ
E34D 2D 90               CMPA #90H   ; HEX   Decimal  Real Value
E34F 2B F8 00            JNE F800H   ; 90H   144      144

E352 2A 10 01            LDA 1001H   ; Move second number to the first number
E355 31 10 00            STA 1000H
E358 2A 10 02            LDA 1002H   ; Move summ to the second number
E35B 31 10 01            STA 1001H
E35E 2A 10 00            LDA 1000H   ; Load first number in A
E361 29 10 01            ADDA 1001H  ; Add second number to A
E364 31 10 02            STA 1002H   ; Store the summ
E367 2D E9               CMPA #E9H   ; HEX   Decimal  Real Value
E369 2B F8 00            JNE F800H   ; E9H   233      233

E36C 2A 10 01            LDA 1001H   ; Move second number to the first number
E36F 31 10 00            STA 1000H
E372 2A 10 02            LDA 1002H   ; Move summ to the second number
E375 31 10 01            STA 1001H
E378 2A 10 00            LDA 1000H   ; Load first number in A
E37B 29 10 01            ADDA 1001H  ; Add second number to A
E37E 31 10 02            STA 1002H   ; Store the summ
E381 2D 79               CMPA #79H   ; HEX   Decimal  Real Value
E383 2B F8 00            JNE F800H   ; 79H   121      377 - (256*1) = 121

E386 2A 10 01            LDA 1001H   ; Move second number to the first number
E389 31 10 00            STA 1000H
E38C 2A 10 02            LDA 1002H   ; Move summ to the second number
E38F 31 10 01            STA 1001H
E392 2A 10 00            LDA 1000H   ; Load first number in A
E395 29 10 01            ADDA 1001H  ; Add second number to A
E398 31 10 02            STA 1002H   ; Store the summ
E39B 2D 62               CMPA #62H   ; HEX   Decimal  Real Value
E39D 2B F8 00            JNE F800H   ; 62H   98       610 - (256*2) = 98

E3A0 2A 10 01            LDA 1001H   ; Move second number to the first number
E3A3 31 10 00            STA 1000H
E3A6 2A 10 02            LDA 1002H   ; Move summ to the second number
E3A9 31 10 01            STA 1001H
E3AC 2A 10 00            LDA 1000H   ; Load first number in A
E3AF 29 10 01            ADDA 1001H  ; Add second number to A
E3B2 31 10 02            STA 1002H   ; Store the summ
E3B5 2D DB               CMPA #DBH   ; HEX   Decimal  Real Value
E3B7 2B F8 00            JNE F800H   ; DBH   219      987 - (256*3) = 219         

                         ; --------------------------------------------------------------------      
                         ; END OF FIBONACCI TEST
                         ; --------------------------------------------------------------------      

E3BA 32 E0 00            JMP E000H   ; Loop from start of diag test

                         ; --------------------------------------------------------------------
                         ; Error routine
                         ; --------------------------------------------------------------------
                         ORG/F800H   ; Diagnostic Error routine   
F800 08                  STOP        ; Stop execution
                         ;JMP F800H   ; Infinite Loop on error

                         ; --------------------------------------------------------------------
                         ; Reset Vector
                         ; --------------------------------------------------------------------
                         ORG/FFFEH   ; Set the Reset vector
FFFE E0                  DB E0H      ; MSB Reset Vector
FFFF 00                  DB 00H      ; LSB Reset Vector


Assembly complete
Number of errors = 0
