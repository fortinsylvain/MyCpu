                ; -----------------------------------------------------------------
                ; Homebrew MyCPU diagnostic program
                ; Author: Sylvain Fortin sylfortin71@hotmail.com
                ; Date : 28 march 2025
                ; Documentation : diag.asm is used to test the assembler
                ;                 instructions of MyCPU.
                ; Memory map of the computer
                ; 0000H - 17FFH Total RAM space
                ; 0000H - 00FFH Stack
                ; 0100H - 17EF  Free for application
                ; E000H - F000H EEPROM for application program
                ; -----------------------------------------------------------------

                ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |    ?w5      ?w4   |   ?w3     ?w2   |   ?w1     ?w0   | 16 bits
                ;         ?l3         |         ?l2       |       ?l1       |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                ?b15     EQU 0x1000
                ?b14     EQU 0x1001
                ?b13     EQU 0x1002
                ?b12     EQU 0x1003
                ?b11     EQU 0x1004
                ?b10     EQU 0x1005
                ?b9      EQU 0x1006
                ?b8      EQU 0x1007
                ?b7      EQU 0x1008
                ?b6      EQU 0x1009
                ?b5      EQU 0x100A
                ?b4      EQU 0x100B
                ?b3      EQU 0x100C
                ?b2      EQU 0x100D
                ?b1      EQU 0x100E
                ?b0      EQU 0x100F

                ?w7      EQU 0x1000  ; ?b15:?b14
                ?w6      EQU 0x1002  ; ?b13:?b12
                ?w5      EQU 0x1004  ; ?b11:?b10
                ?w4      EQU 0x1006  ; ?b9:?b8
                ?w3      EQU 0x1008  ; ?b7:?b6
                ?w2      EQU 0x100A  ; ?b5:?b4
                ?w1      EQU 0x100C  ; ?b3:?b2
                ?w0      EQU 0x100E  ; ?b1:?b0

                ?l3      EQU 0x1000  ; ?b15,?b14,?b13,?b12
                ?l2      EQU 0x1004  ; ?b11,?b10,?b9,?b8
                ?l1      EQU 0x1008  ; ?b7,?b6,?b5,?b4
                ?l0      EQU 0x100C  ; ?b3,?b2,?b1,?b0

                ; RAM Reserved location
                SP       EQU 0x1FF0  ; SP      Stack Pointer 8 bit
                JSH      EQU 0x1FF1  ; JSH     Temporary storage for JSR MSB address
                JSL      EQU 0x1FF2  ; JSL          "       "     "   "  LSB    "
                XH       EQU 0x1FF3  ; X MSB   X Register MSB
                XL       EQU 0x1FF4  ; X LSB   X Register LSB
                EQUAL    EQU 0x1FFA  ; E       bit<0> Equal Status bit
                CARRY    EQU 0x1FFB  ; C       bit<0> Carry Status bit
                REG_A    EQU 0x1FFC  ; A       A Register
                IPH      EQU 0x1FFE  ; IPH	    Instruction Pointer MSB
                IPL      EQU 0x1FFF  ; IPL          "         "    LSB

                ; Peripheral
                LEDPORT  EQU 0xC000  ; PORT for the LED

                ; Program start
                         ORG/0xE000  ; EEPROM Start        
E000 30 00      START    LDA #0x00   ; Clear LED
E002 36                  NOTA
E003 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; Test Carry Status bit integrity
                         ; --------------------------------------------------------------------
E006 30 01      TST01    LDA #0x01
E008 36                  NOTA
E009 31 C0 00            STA LEDPORT ; Output to LED port
E00C 30 00               LDA #0x00
E00E 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E011 2A 1F FB            LDA CARRY   ; Read Carry Status
E014 2D 00               CMPA #0x00
E016 2B F8 00            JNE FAIL
E019 30 01               LDA #0x01
E01B 31 1F FB            STA CARRY   ; Write 1 to carry bit <0>
E01E 2A 1F FB            LDA CARRY   ; Read Carry Status
E021 2D 01               CMPA #0x01
E023 2B F8 00            JNE FAIL
E026 30 00               LDA #0x00
E028 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E02B 2A 1F FB            LDA CARRY   ; Read Carry Status
E02E 2D 00               CMPA #0x00
E030 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; Test Equal Status bit integrity
                         ; --------------------------------------------------------------------
E033 30 02      TST02    LDA #0x02
E035 36                  NOTA
E036 31 C0 00            STA LEDPORT ; Output to LED port
E039 30 00               LDA #0x00
E03B 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E03E 2A 1F FA            LDA EQUAL   ; Read Equal Status
E041 2D 00               CMPA #0x00
E043 2B F8 00            JNE FAIL
E046 30 01               LDA #0x01
E048 31 1F FA            STA EQUAL   ; Write 1 to Equal Status bit <0>
E04B 2A 1F FA            LDA EQUAL   ; Read Equal Status
E04E 2D 01               CMPA #0x01
E050 2B F8 00            JNE FAIL
E053 30 00               LDA #0x00
E055 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E058 2A 1F FA            LDA EQUAL   ; Read Equal Status
E05B 2D 00               CMPA #0x00
E05D 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.06 JSR    Jump to SubRoutine
                         ; --------------------------------------------------------------------
E060 30 06      TSTOP06  LDA #0x06
E062 36                  NOTA
E063 31 C0 00            STA LEDPORT ; Output to LED port
E066 06 FF C0            JSR TJSR1   ; 1 layer
E069 06 FF C3            JSR TJSR2   ; 2
E06C 06 FF C9            JSR TJSR3   ; 3
E06F 06 FF CF            JSR TJSR4   ; 4
E072 06 FF D5            JSR TJSR5   ; 5
E075 06 FF DB            JSR TJSR6   ; 6
E078 06 FF E1            JSR TJSR7   ; 7
E07B 06 FF E7            JSR TJSR8   ; 8
E07E 06 FF ED            JSR TJSR9   ; 9
E081 06 FF F3            JSR TJSR10  ; 10
                         ; --------------------------------------------------------------------
                         ; OP.07 RTS    ReTurn from Subroutine
                         ; Tested in OP.06 JSR
                         ; --------------------------------------------------------------------
                         ;LDA #07H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.08 STOP
                         ; STOP EXECUTING
                         ; Cannot test here it will stop execution...
                         ; A diagnostic test failure is expected to call this instruction ending 
                         ; program exectution.
                         ; --------------------------------------------------------------------
                         ;LDA #08H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ;STOP
                         ; --------------------------------------------------------------------
                         ; OP.09 NOP   NO OPERATION
                         ; --------------------------------------------------------------------
E084 30 09      TSTOP09  LDA #0x09
E086 36                  NOTA
E087 31 C0 00            STA LEDPORT ; Output to LED port
E08A 09                  NOP
E08B 09                  NOP
E08C 09                  NOP
                         ; --------------------------------------------------------------------
                         ; OP.0A LDA (X) Load Reg A Indexed
                         ; --------------------------------------------------------------------
E08D 30 0A      TSTOP0A  LDA #0x0A
E08F 36                  NOTA
E090 31 C0 00            STA LEDPORT ; Output to LED port
E093 30 55               LDA #0x55   ; Store some value in RAM
E095 31 01 00            STA 0x0100
E098 30 AA               LDA #0xAA
E09A 31 01 01            STA 0x0101
E09D 30 DE               LDA #0xDE
E09F 31 01 F0            STA 0x01F0
E0A2 30 CA               LDA #0xCA
E0A4 31 01 FF            STA 0x01FF
E0A7 38 01 00            LDX #0x0100 ; Verify each locations
E0AA 0A                  LDA (X)
E0AB 2D 55               CMPA #0x55
E0AD 2B F8 00            JNE FAIL    ; Jump if result not good
E0B0 38 01 01            LDX #0x0101
E0B3 0A                  LDA (X)
E0B4 2D AA               CMPA #0xAA
E0B6 2B F8 00            JNE FAIL
E0B9 38 01 F0            LDX #0x01F0
E0BC 0A                  LDA (X)
E0BD 2D DE               CMPA #0xDE
E0BF 2B F8 00            JNE FAIL
E0C2 38 01 FF            LDX #0x01FF
E0C5 0A                  LDA (X)
E0C6 2D CA               CMPA #0xCA
E0C8 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.0B STA (X) Store Reg A Indexed
                         ; --------------------------------------------------------------------
E0CB 30 0B      TSTOP0B  LDA #0x0B
E0CD 36                  NOTA
E0CE 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.0C JRA 0x** Unconditional relative jump
                         ; --------------------------------------------------------------------
                         ; Testing using hexadecimal value after the mnemonic
E0D1 30 0C               LDA #0x0C
E0D3 36                  NOTA
E0D4 31 C0 00            STA LEDPORT ; Output to LED port
E0D7 0C 00               JRA 0x00    ; Test jump foward, Execute next instruction
E0D9 0C 01               JRA 0x01    ; Skip next instruction
E0DB 09                  NOP         ; 1
E0DC 0C 02               JRA 0x02    ; Skip next 2 instructions
E0DE 09                  NOP         ; 1
E0DF 09                  NOP         ; 2
E0E0 0C 03               JRA 0x03    ; Skip next 3 instructions
E0E2 09                  NOP         ; 1 
E0E3 09                  NOP         ; 2
E0E4 09                  NOP         ; 3
E0E5 0C 05               JRA 0x05    ; Skip next 5 instructions
E0E7 09                  NOP         ; 1
E0E8 09                  NOP         ; 2
E0E9 09                  NOP         ; 3
E0EA 09                  NOP         ; 4
E0EB 09                  NOP         ; 5
E0EC 0C 10               JRA 0x10    ; Skip next 16 instructions
E0EE 09                  NOP         ; 1
E0EF 09                  NOP         ; 2
E0F0 09                  NOP         ; 3
E0F1 09                  NOP         ; 4
E0F2 09                  NOP         ; 5
E0F3 09                  NOP         ; 6
E0F4 09                  NOP         ; 7
E0F5 09                  NOP         ; 8
E0F6 09                  NOP         ; 9
E0F7 09                  NOP         ; 10
E0F8 09                  NOP         ; 11
E0F9 09                  NOP         ; 12
E0FA 09                  NOP         ; 13
E0FB 09                  NOP         ; 14
E0FC 09                  NOP         ; 15
E0FD 09                  NOP         ; 16
E0FE 0C 22               JRA 0x22    ; Skip next 34 bytes
E100 09                  NOP         ; 1
E101 09                  NOP         ; 2
E102 09                  NOP         ; 3
E103 0C 1F               JRA 0x1F   ; 4-5   Final jump to the end of thest
E105 09                  NOP         ; 6
E106 09                  NOP         ; 7
E107 09                  NOP         ; 8
E108 09                  NOP         ; 9
E109 09                  NOP         ; 10
E10A 09                  NOP         ; 11
E10B 09                  NOP         ; 12
E10C 09                  NOP         ; 13
E10D 09                  NOP         ; 14
E10E 09                  NOP         ; 15
E10F 09                  NOP         ; 16
E110 09                  NOP         ; 17
E111 09                  NOP         ; 18
E112 09                  NOP         ; 19
E113 09                  NOP         ; 20
E114 09                  NOP         ; 21
E115 09                  NOP         ; 22
E116 09                  NOP         ; 23
E117 09                  NOP         ; 24
E118 09                  NOP         ; 25
E119 0C E8               JRA 0xE8    ; 26-27 Third Backward jump
E11B 09                  NOP         ; 28
E11C 09                  NOP         ; 29
E11D 09                  NOP         ; 30
E11E 09                  NOP         ; 31
E11F 09                  NOP         ; 32
E120 0C F7               JRA 0xF7    ; 33-34 Second Backward jump
E122 0C FC               JRA 0xFC    ; First Backward jump
E124 09                  NOP         ; Arrival of the last jump to end the test
                         ; Testing using symbolic address after the mnemonic
E125 0C 00               JRA TST0B_0 ; Test jump foward, Execute next instruction
E127 0C 01      TST0B_0  JRA TST0B_1 ; Skip next instruction
E129 09                  NOP         ; 1
E12A 0C 02      TST0B_1  JRA TST0B_2 ; Skip next 2 instructions
E12C 09                  NOP         ; 1
E12D 09                  NOP         ; 2
E12E 0C 03      TST0B_2  JRA TST0B_3 ; Skip next 3 instructions
E130 09                  NOP         ; 1 
E131 09                  NOP         ; 2
E132 09                  NOP         ; 3
E133 0C 05      TST0B_3  JRA TST0B_4 ; Skip next 5 instructions
E135 09                  NOP         ; 1
E136 09                  NOP         ; 2
E137 09                  NOP         ; 3
E138 09                  NOP         ; 4
E139 09                  NOP         ; 5
E13A 0C 10      TST0B_4  JRA TST0B_5 ; Skip next 16 instructions
E13C 09                  NOP         ; 1
E13D 09                  NOP         ; 2
E13E 09                  NOP         ; 3
E13F 09                  NOP         ; 4
E140 09                  NOP         ; 5
E141 09                  NOP         ; 6
E142 09                  NOP         ; 7
E143 09                  NOP         ; 8
E144 09                  NOP         ; 9
E145 09                  NOP         ; 10
E146 09                  NOP         ; 11
E147 09                  NOP         ; 12
E148 09                  NOP         ; 13
E149 09                  NOP         ; 14
E14A 09                  NOP         ; 15
E14B 09                  NOP         ; 16
E14C 0C 22      TST0B_5  JRA TST0B_9 ; Skip next 34 bytes
E14E 09                  NOP         ; 1
E14F 09                  NOP         ; 2
E150 09                  NOP         ; 3
E151 0C 1F      TST0B_6  JRA TST0B_10 ; 4-5   Final jump to the end of test
E153 09                  NOP         ; 6
E154 09                  NOP         ; 7
E155 09                  NOP         ; 8
E156 09                  NOP         ; 9
E157 09                  NOP         ; 10
E158 09                  NOP         ; 11
E159 09                  NOP         ; 12
E15A 09                  NOP         ; 13
E15B 09                  NOP         ; 14
E15C 09                  NOP         ; 15
E15D 09                  NOP         ; 16
E15E 09                  NOP         ; 17
E15F 09                  NOP         ; 18
E160 09                  NOP         ; 19
E161 09                  NOP         ; 20
E162 09                  NOP         ; 21
E163 09                  NOP         ; 22
E164 09                  NOP         ; 23
E165 09                  NOP         ; 24
E166 09                  NOP         ; 25
E167 0C E8      TST0B_7  JRA TST0B_6 ; 26-27 Third Backward jump
E169 09                  NOP         ; 28
E16A 09                  NOP         ; 29
E16B 09                  NOP         ; 30
E16C 09                  NOP         ; 31
E16D 09                  NOP         ; 32
E16E 0C F7      TST0B_8  JRA TST0B_7 ; 33-34 Second Backward jump
E170 0C FC      TST0B_9  JRA TST0B_8 ; First Backward jump
E172 09         TST0B_10 NOP         ; Arrival of the last jump to end the test
                ;         ; Higher range testing using symbolic address after the mnemonic
E173 09                  NOP         ; These NOP make relative jump to exercise carry on MSB address boundary
E174 09                  NOP
E175 09                  NOP
E176 09                  NOP
E177 09                  NOP
E178 09                  NOP
E179 09                  NOP
E17A 09                  NOP
E17B 09                  NOP
E17C 09                  NOP
E17D 09                  NOP
E17E 09                  NOP
E17F 09                  NOP
E180 09                  NOP
E181 09                  NOP
E182 09                  NOP
E183 0C 7F               JRA TST0B_12
E185 09                  NOP         ; 1     1     
E186 09                  NOP
                ;         NOP
                ;         NOP
E187 0C 7E      TST0B_11 JRA TST0B_13
E189 09                  NOP
E18A 09                  NOP
E18B 09                  NOP
E18C 09                  NOP
E18D 09                  NOP
E18E 09                  NOP         
E18F 09                  NOP
E190 09                  NOP
E191 09                  NOP
E192 09                  NOP
E193 09                  NOP
E194 09                  NOP         ; 16
E195 09                  NOP         ; 1     2   
E196 09                  NOP
E197 09                  NOP
E198 09                  NOP
E199 09                  NOP
E19A 09                  NOP
E19B 09                  NOP
E19C 09                  NOP
E19D 09                  NOP
E19E 09                  NOP         
E19F 09                  NOP
E1A0 09                  NOP
E1A1 09                  NOP
E1A2 09                  NOP
E1A3 09                  NOP
E1A4 09                  NOP         ; 16
E1A5 09                  NOP         ; 1   3
E1A6 09                  NOP
E1A7 09                  NOP
E1A8 09                  NOP
E1A9 09                  NOP
E1AA 09                  NOP
E1AB 09                  NOP
E1AC 09                  NOP
E1AD 09                  NOP
E1AE 09                  NOP         
E1AF 09                  NOP
E1B0 09                  NOP
E1B1 09                  NOP
E1B2 09                  NOP
E1B3 09                  NOP
E1B4 09                  NOP         ; 16
E1B5 09                  NOP         ; 1   4
E1B6 09                  NOP
E1B7 09                  NOP
E1B8 09                  NOP
E1B9 09                  NOP
E1BA 09                  NOP
E1BB 09                  NOP
E1BC 09                  NOP
E1BD 09                  NOP
E1BE 09                  NOP         
E1BF 09                  NOP
E1C0 09                  NOP
E1C1 09                  NOP
E1C2 09                  NOP
E1C3 09                  NOP
E1C4 09                  NOP         ; 16
E1C5 09                  NOP         ; 1   5
E1C6 09                  NOP
E1C7 09                  NOP
E1C8 09                  NOP
E1C9 09                  NOP
E1CA 09                  NOP
E1CB 09                  NOP
E1CC 09                  NOP
E1CD 09                  NOP
E1CE 09                  NOP         
E1CF 09                  NOP
E1D0 09                  NOP
E1D1 09                  NOP
E1D2 09                  NOP
E1D3 09                  NOP
E1D4 09                  NOP         ; 16
E1D5 09                  NOP         ; 1   5
E1D6 09                  NOP
E1D7 09                  NOP
E1D8 09                  NOP
E1D9 09                  NOP
E1DA 09                  NOP
E1DB 09                  NOP
E1DC 09                  NOP
E1DD 09                  NOP
E1DE 09                  NOP         
E1DF 09                  NOP
E1E0 09                  NOP
E1E1 09                  NOP
E1E2 09                  NOP
E1E3 09                  NOP
E1E4 09                  NOP         ; 16
E1E5 09                  NOP         ; 1   6
E1E6 09                  NOP
E1E7 09                  NOP
E1E8 09                  NOP
E1E9 09                  NOP
E1EA 09                  NOP
E1EB 09                  NOP
E1EC 09                  NOP
E1ED 09                  NOP
E1EE 09                  NOP         
E1EF 09                  NOP
E1F0 09                  NOP
E1F1 09                  NOP
E1F2 09                  NOP
E1F3 09                  NOP
E1F4 09                  NOP         ; 16
E1F5 09                  NOP         ; 1   7
E1F6 09                  NOP
E1F7 09                  NOP
E1F8 09                  NOP
E1F9 09                  NOP
E1FA 09                  NOP
E1FB 09                  NOP
E1FC 09                  NOP
E1FD 09                  NOP
E1FE 09                  NOP         
E1FF 09                  NOP
E200 09                  NOP
E201 09                  NOP
E202 09                  NOP
E203 09                  NOP
                ;         NOP        ; 16
E204 09         TST0B_12 NOP
E205 0C 80               JRA TST0B_11
E207 09         TST0B_13 NOP         ; final foward jump destination     
                         ; --------------------------------------------------------------------
                         ; OP.0D SRLA Shift Right Logical on Reg A
                         ;            0 -> b7 b6 b5 b4 b3 b2 b1 b0 -> C
                         ; --------------------------------------------------------------------
E208 30 0D      TSTOP0D  LDA #0x0D
E20A 36                  NOTA
E20B 31 C0 00            STA LEDPORT ; Output to LED port
E20E 30 A5               LDA #0xA5
E210 0D                  SRLA
E211 2D 52               CMPA #0x52
E213 2B F8 00            JNE FAIL    ; Jump if result not good
E216 2A 1F FB            LDA CARRY   ; Read the Carry Status
E219 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E21B 2B F8 00            JNE FAIL    ; Error if different
E21E 30 A5               LDA #0xA5
E220 0D                  SRLA
E221 0D                  SRLA
E222 2D 29               CMPA #0x29
E224 2B F8 00            JNE FAIL    ; Jump if result not good
E227 2A 1F FB            LDA CARRY   ; Read the Carry Status
E22A 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E22C 2B F8 00            JNE FAIL    ; Error if different
E22F 30 A5               LDA #0xA5
E231 0D                  SRLA
E232 0D                  SRLA
E233 0D                  SRLA
E234 2D 14               CMPA #0x14
E236 2B F8 00            JNE FAIL    ; Jump if result not good
E239 2A 1F FB            LDA CARRY   ; Read the Carry Status
E23C 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E23E 2B F8 00            JNE FAIL    ; Error if different
E241 30 A5               LDA #0xA5
E243 0D                  SRLA
E244 0D                  SRLA
E245 0D                  SRLA
E246 0D                  SRLA
E247 2D 0A               CMPA #0x0A
E249 2B F8 00            JNE FAIL    ; Jump if result not good
E24C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E24F 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E251 2B F8 00            JNE FAIL    ; Error if different
E254 30 A5               LDA #0xA5
E256 0D                  SRLA
E257 0D                  SRLA
E258 0D                  SRLA
E259 0D                  SRLA
E25A 0D                  SRLA
E25B 2D 05               CMPA #0x05
E25D 2B F8 00            JNE FAIL    ; Jump if result not good
E260 2A 1F FB            LDA CARRY   ; Read the Carry Status
E263 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E265 2B F8 00            JNE FAIL    ; Error if different
E268 30 A5               LDA #0xA5
E26A 0D                  SRLA
E26B 0D                  SRLA
E26C 0D                  SRLA
E26D 0D                  SRLA
E26E 0D                  SRLA
E26F 0D                  SRLA
E270 2D 02               CMPA #0x02
E272 2B F8 00            JNE FAIL    ; Jump if result not good
E275 2A 1F FB            LDA CARRY   ; Read the Carry Status
E278 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E27A 2B F8 00            JNE FAIL    ; Error if different
E27D 30 A5               LDA #0xA5
E27F 0D                  SRLA
E280 0D                  SRLA
E281 0D                  SRLA
E282 0D                  SRLA
E283 0D                  SRLA
E284 0D                  SRLA
E285 0D                  SRLA
E286 2D 01               CMPA #0x01
E288 2B F8 00            JNE FAIL    ; Jump if result not good
E28B 2A 1F FB            LDA CARRY   ; Read the Carry Status
E28E 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E290 2B F8 00            JNE FAIL    ; Error if different
E293 30 A5               LDA #0xA5
E295 0D                  SRLA
E296 0D                  SRLA
E297 0D                  SRLA
E298 0D                  SRLA
E299 0D                  SRLA
E29A 0D                  SRLA
E29B 0D                  SRLA
E29C 0D                  SRLA
E29D 2D 00               CMPA #0x00
E29F 2B F8 00            JNE FAIL    ; Jump if result not good
E2A2 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2A5 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2A7 2B F8 00            JNE FAIL    ; Error if different
E2AA 30 A5               LDA #0xA5
E2AC 0D                  SRLA
E2AD 0D                  SRLA
E2AE 0D                  SRLA
E2AF 0D                  SRLA
E2B0 0D                  SRLA
E2B1 0D                  SRLA
E2B2 0D                  SRLA
E2B3 0D                  SRLA
E2B4 0D                  SRLA
E2B5 2D 00               CMPA #0x00
E2B7 2B F8 00            JNE FAIL    ; Jump if result not good
E2BA 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2BD 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E2BF 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.0E SLLA Shift Left Logical on Reg A
                         ;       SLAA Shift Left Arithmetic on Reg A (SLAA same as SLLA)
                         ;            C <- b7 b6 b5 b4 b3 b2 b1 b0 <- 0
                         ; --------------------------------------------------------------------
E2C2 30 0E      TSTOP0E  LDA #0x0E
E2C4 36                  NOTA
E2C5 31 C0 00            STA LEDPORT ; Output to LED port
E2C8 30 A5               LDA #0xA5
E2CA 0E                  SLLA
E2CB 2D 4A               CMPA #0x4A
E2CD 2B F8 00            JNE FAIL    ; Jump if result not good
E2D0 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2D3 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2D5 2B F8 00            JNE FAIL    ; Error if different
E2D8 30 A5               LDA #0xA5
E2DA 0E                  SLLA
E2DB 0E                  SLLA
E2DC 2D 94               CMPA #0x94
E2DE 2B F8 00            JNE FAIL    ; Jump if result not good
E2E1 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2E4 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E2E6 2B F8 00            JNE FAIL    ; Error if different
E2E9 30 A5               LDA #0xA5
E2EB 0E                  SLLA
E2EC 0E                  SLLA
E2ED 0E                  SLLA
E2EE 2D 28               CMPA #0x28
E2F0 2B F8 00            JNE FAIL    ; Jump if result not good
E2F3 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2F6 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2F8 2B F8 00            JNE FAIL    ; Error if different
E2FB 30 A5               LDA #0xA5
E2FD 0E                  SLLA
E2FE 0E                  SLLA
E2FF 0E                  SLLA
E300 0E                  SLLA
E301 2D 50               CMPA #0x50
E303 2B F8 00            JNE FAIL    ; Jump if result not good
E306 2A 1F FB            LDA CARRY   ; Read the Carry Status
E309 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E30B 2B F8 00            JNE FAIL    ; Error if different
E30E 30 A5               LDA #0xA5
E310 0E                  SLLA
E311 0E                  SLLA
E312 0E                  SLLA
E313 0E                  SLLA
E314 0E                  SLLA
E315 2D A0               CMPA #0xA0
E317 2B F8 00            JNE FAIL    ; Jump if result not good
E31A 2A 1F FB            LDA CARRY   ; Read the Carry Status
E31D 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E31F 2B F8 00            JNE FAIL    ; Error if different
E322 30 A5               LDA #0xA5
E324 0E                  SLLA
E325 0E                  SLLA
E326 0E                  SLLA
E327 0E                  SLLA
E328 0E                  SLLA
E329 0E                  SLAA
E32A 2D 40               CMPA #0x40
E32C 2B F8 00            JNE FAIL    ; Jump if result not good
E32F 2A 1F FB            LDA CARRY   ; Read the Carry Status
E332 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E334 2B F8 00            JNE FAIL    ; Error if different
E337 30 A5               LDA #0xA5
E339 0E                  SLLA
E33A 0E                  SLLA
E33B 0E                  SLLA
E33C 0E                  SLLA
E33D 0E                  SLLA
E33E 0E                  SLAA
E33F 0E                  SLAA
E340 2D 80               CMPA #0x80
E342 2B F8 00            JNE FAIL    ; Jump if result not good
E345 2A 1F FB            LDA CARRY   ; Read the Carry Status
E348 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E34A 2B F8 00            JNE FAIL    ; Error if different
E34D 30 A5               LDA #0xA5
E34F 0E                  SLLA
E350 0E                  SLLA
E351 0E                  SLLA
E352 0E                  SLLA
E353 0E                  SLLA
E354 0E                  SLAA
E355 0E                  SLAA
E356 0E                  SLAA
E357 2D 00               CMPA #0x00
E359 2B F8 00            JNE FAIL    ; Jump if result not good
E35C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E35F 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E361 2B F8 00            JNE FAIL    ; Error if different
E364 30 A5               LDA #0xA5
E366 0E                  SLLA
E367 0E                  SLLA
E368 0E                  SLLA
E369 0E                  SLLA
E36A 0E                  SLLA
E36B 0E                  SLAA
E36C 0E                  SLAA
E36D 0E                  SLAA
E36E 0E                  SLAA
E36F 2D 00               CMPA #0x00
E371 2B F8 00            JNE FAIL    ; Jump if result not good
E374 2A 1F FB            LDA CARRY   ; Read the Carry Status
E377 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E379 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.0F 
                         ; JRNC Jump Relatif if Not Carry
                         ; --------------------------------------------------------------------
E37C 30 0F      TSTOP0F  LDA #0x0F
E37E 36                  NOTA
E37F 31 C0 00            STA LEDPORT ; Output to LED port
E382 30 00               LDA #0x00   ; Clear carry
E384 31 1F FB            STA CARRY
E387 0F 03               JRNC TST0F_0
E389 32 F8 00            JMP FAIL
E38C 30 01      TST0F_0  LDA #0x01   ; Set carry
E38E 31 1F FB            STA CARRY
E391 0F 03               JRNC TST0F_1
E393 32 E3 99            JMP TST0F_2
E396 32 F8 00   TST0F_1  JMP FAIL
E399 09         TST0F_2  NOP
                         ; --------------------------------------------------------------------
                         ; OP.10  RRCA   Rotate Right Logical Reg A through Carry 
                         ;               C -> b7 b6 b5 b4 b3 b2 b1 b0 -> C  
                         ; --------------------------------------------------------------------
E39A 30 10      TSTOP10  LDA #0x10
E39C 36                  NOTA
E39D 31 C0 00            STA LEDPORT ; Output to LED port
E3A0 30 00               LDA #0x00   ; Clear Carry
E3A2 31 1F FB            STA CARRY
E3A5 10                  RRCA
E3A6 2D 00               CMPA #0x00
E3A8 2B F8 00            JNE FAIL
E3AB 30 00               LDA #0x00   ; Clear Carry
E3AD 31 1F FB            STA CARRY
E3B0 10                  RRCA
E3B1 2A 1F FB            LDA CARRY
E3B4 2D 00               CMPA #0x00
E3B6 2B F8 00            JNE FAIL
E3B9 30 AA               LDA #0xAA   ; Test shifting
E3BB 10                  RRCA
E3BC 2D 55               CMPA #0x55
E3BE 2B F8 00            JNE FAIL
E3C1 30 01               LDA #0x01   ; Test transfer of bit <0> to carry
E3C3 10                  RRCA
E3C4 2A 1F FB            LDA CARRY
E3C7 2D 01               CMPA #0x01
E3C9 2B F8 00            JNE FAIL
E3CC 30 00               LDA #0x00   ; Test A become 0 after shifting when carry is 0
E3CE 31 1F FB            STA CARRY   ; insure carry is clear
E3D1 30 01               LDA #0x01   ; set bit <0> to '1'
E3D3 10                  RRCA
E3D4 2D 00               CMPA #0x00
E3D6 2B F8 00            JNE FAIL
E3D9 30 00               LDA #0x00   ; Test bit <0> goes to bit <7> after 2 RRCA
E3DB 31 1F FB            STA CARRY   ; insure carry is clear
E3DE 30 01               LDA #0x01
E3E0 10                  RRCA
E3E1 10                  RRCA
E3E2 2D 80               CMPA #0x80
E3E4 2B F8 00            JNE FAIL
E3E7 10                  RRCA        ; continue rotating this bit
E3E8 2D 40               CMPA #0x40
E3EA 2B F8 00            JNE FAIL
E3ED 10                  RRCA
E3EE 2D 20               CMPA #0x20
E3F0 2B F8 00            JNE FAIL
E3F3 10                  RRCA
E3F4 2D 10               CMPA #0x10
E3F6 2B F8 00            JNE FAIL
E3F9 10                  RRCA
E3FA 2D 08               CMPA #0x08
E3FC 2B F8 00            JNE FAIL
E3FF 10                  RRCA
E400 2D 04               CMPA #0x04
E402 2B F8 00            JNE FAIL
E405 10                  RRCA
E406 2D 02               CMPA #0x02
E408 2B F8 00            JNE FAIL
E40B 10                  RRCA
E40C 2D 01               CMPA #0x01
E40E 2B F8 00            JNE FAIL
E411 10                  RRCA
E412 2D 00               CMPA #0x00
E414 2B F8 00            JNE FAIL
E417 10                  RRCA
E418 2D 80               CMPA #0x80
E41A 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.11  RCF   Reset Carry Flag   C <- 0
                         ; --------------------------------------------------------------------
E41D 30 11      TSTOP11  LDA #0x11
E41F 36                  NOTA
E420 31 C0 00            STA LEDPORT ; Output to LED port
E423 30 01               LDA #0x01   ; Set carry flag to 1
E425 31 1F FB            STA CARRY
E428 11                  RCF         ; Reset Carry Flag 
E429 2A 1F FB            LDA CARRY   ; Check carry is now cleared
E42C 2D 00               CMPA #0x00
E42E 2B F8 00            JNE FAIL
E431 11                  RCF         ; Do again a Reset Carry Flag 
E432 2A 1F FB            LDA CARRY   ; Check carry is still cleared
E435 2D 00               CMPA #0x00
E437 2B F8 00            JNE FAIL
E43A 30 A5               LDA #0xA5   ; Check register A is not affected by a Reset Carry Flag
E43C 11                  RCF         ; Reset Carry Flag
E43D 2D A5               CMPA #0xA5  ; If A value not same then fail
E43F 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.12  SCF   Set Carry Flag   C <- 1
                         ; --------------------------------------------------------------------
E442 30 12      TSTOP12  LDA #0x12
E444 36                  NOTA
E445 31 C0 00            STA LEDPORT ; Output to LED port
E448 30 00               LDA #0x00   ; Clear carry flag
E44A 31 1F FB            STA CARRY
E44D 12                  SCF         ; Set Carry Flag 
E44E 2A 1F FB            LDA CARRY   ; Check carry is set
E451 2D 01               CMPA #0x01
E453 2B F8 00            JNE FAIL
E456 12                  SCF         ; Set Carry Flag again
E457 2A 1F FB            LDA CARRY   ; Check carry is still set
E45A 2D 01               CMPA #0x01
E45C 2B F8 00            JNE FAIL
E45F 30 BE               LDA #0xBE   ; Check register A is not affected by a Set Carry Flag
E461 12                  SCF         ; Set Carry Flag
E462 2D BE               CMPA #0xBE  ; If A value not same then fail
E464 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.13  DECXL   Decrement XL   E updated
                         ; --------------------------------------------------------------------
E467 30 13      TSTOP13  LDA #0x13
E469 36                  NOTA
E46A 31 C0 00            STA LEDPORT ; Output to LED port
E46D 38 FF FF            LDX #0xFFFF
E470 13                  DECXL
E471 2A 1F F3            LDA XH
E474 2D FF               CMPA #0xFF
E476 2B F8 00            JNE FAIL
E479 2A 1F F4            LDA XL
E47C 2D FE               CMPA #0xFE
E47E 2B F8 00            JNE FAIL
E481 13                  DECXL
E482 2A 1F F3            LDA XH
E485 2D FF               CMPA #0xFF
E487 2B F8 00            JNE FAIL
E48A 2A 1F F4            LDA XL
E48D 2D FD               CMPA #0xFD
E48F 2B F8 00            JNE FAIL
E492 38 A5 02            LDX #0xA502
E495 13                  DECXL
E496 2A 1F F3            LDA XH
E499 2D A5               CMPA #0xA5
E49B 2B F8 00            JNE FAIL
E49E 2A 1F F4            LDA XL
E4A1 2D 01               CMPA #0x01
E4A3 2B F8 00            JNE FAIL
E4A6 13                  DECXL
E4A7 2A 1F F3            LDA XH
E4AA 2D A5               CMPA #0xA5
E4AC 2B F8 00            JNE FAIL
E4AF 2A 1F F4            LDA XL
E4B2 2D 00               CMPA #0x00
E4B4 2B F8 00            JNE FAIL
E4B7 13                  DECXL
E4B8 2A 1F F3            LDA XH
E4BB 2D A5               CMPA #0xA5
E4BD 2B F8 00            JNE FAIL
E4C0 2A 1F F4            LDA XL
E4C3 2D FF               CMPA #0xFF
E4C5 2B F8 00            JNE FAIL
E4C8 13                  DECXL 
E4C9 2A 1F F3            LDA XH
E4CC 2D A5               CMPA #0xA5
E4CE 2B F8 00            JNE FAIL
E4D1 2A 1F F4            LDA XL
E4D4 2D FE               CMPA #0xFE
E4D6 2B F8 00            JNE FAIL
E4D9 38 00 02            LDX #0x0002 ; Check E status
E4DC 13                  DECXL
E4DD 2A 1F FA            LDA EQUAL
E4E0 2D 00               CMPA #0x00
E4E2 2B F8 00            JNE FAIL
E4E5 38 00 01            LDX #0x0001
E4E8 13                  DECXL
E4E9 2A 1F FA            LDA EQUAL
E4EC 2D 01               CMPA #0x01
E4EE 2B F8 00            JNE FAIL
E4F1 38 FF FF            LDX #0xFFFF
E4F4 13                  DECXL
E4F5 2A 1F FA            LDA EQUAL
E4F8 2D 00               CMPA #0x00
E4FA 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.14  RRC 0x****   Rotate Right Logical Address location through Carry 
                         ;                     C -> b7 b6 b5 b4 b3 b2 b1 b0 -> C  
                         ; --------------------------------------------------------------------
E4FD 30 14      TSTOP14  LDA #0x14
E4FF 36                  NOTA
E500 31 C0 00            STA LEDPORT ; Output to LED port
E503 30 00               LDA #0x00   ; Clear Carry
E505 31 1F FB            STA CARRY
E508 31 10 0F            STA ?b0
E50B 14 10 0F            RRC ?b0
E50E 2A 10 0F            LDA ?b0
E511 2D 00               CMPA #0x00
E513 2B F8 00            JNE FAIL
E516 30 00               LDA #0x00   ; Clear Carry
E518 31 1F FB            STA CARRY
E51B 31 10 0F            STA ?b0
E51E 14 10 0F            RRC ?b0
E521 2A 1F FB            LDA CARRY
E524 2D 00               CMPA #0x00
E526 2B F8 00            JNE FAIL
E529 30 AA               LDA #0xAA   ; Test shifting
E52B 31 10 0F            STA ?b0
E52E 14 10 0F            RRC ?b0
E531 2A 10 0F            LDA ?b0
E534 2D 55               CMPA #0x55
E536 2B F8 00            JNE FAIL
E539 30 01               LDA #0x01   ; Test transfer of bit <0> to carry
E53B 31 10 0F            STA ?b0
E53E 14 10 0F            RRC ?b0
E541 2A 1F FB            LDA CARRY
E544 2D 01               CMPA #0x01
E546 2B F8 00            JNE FAIL
E549 30 00               LDA #0x00   ; Test A become 0 after shifting when carry is 0
E54B 31 1F FB            STA CARRY   ; insure carry is clear
E54E 30 01               LDA #0x01   ; set bit <0> to '1'
E550 31 10 0F            STA ?b0
E553 14 10 0F            RRC ?b0
E556 2A 10 0F            LDA ?b0
E559 2D 00               CMPA #0x00
E55B 2B F8 00            JNE FAIL
E55E 30 00               LDA #0x00   ; Test bit <0> goes to bit <7> after 2 RRCA
E560 31 1F FB            STA CARRY   ; insure carry is clear
E563 30 01               LDA #0x01
E565 31 10 0F            STA ?b0
E568 14 10 0F            RRC ?b0
E56B 14 10 0F            RRC ?b0
E56E 2A 10 0F            LDA ?b0
E571 2D 80               CMPA #0x80
E573 2B F8 00            JNE FAIL
E576 14 10 0F            RRC ?b0     ; continue rotating this bit
E579 2A 10 0F            LDA ?b0
E57C 2D 40               CMPA #0x40
E57E 2B F8 00            JNE FAIL
E581 14 10 0F            RRC ?b0
E584 2A 10 0F            LDA ?b0
E587 2D 20               CMPA #0x20
E589 2B F8 00            JNE FAIL
E58C 14 10 0F            RRC ?b0
E58F 2A 10 0F            LDA ?b0
E592 2D 10               CMPA #0x10
E594 2B F8 00            JNE FAIL
E597 14 10 0F            RRC ?b0
E59A 2A 10 0F            LDA ?b0
E59D 2D 08               CMPA #0x08
E59F 2B F8 00            JNE FAIL
E5A2 14 10 0F            RRC ?b0
E5A5 2A 10 0F            LDA ?b0
E5A8 2D 04               CMPA #0x04
E5AA 2B F8 00            JNE FAIL
E5AD 14 10 0F            RRC ?b0
E5B0 2A 10 0F            LDA ?b0
E5B3 2D 02               CMPA #0x02
E5B5 2B F8 00            JNE FAIL
E5B8 14 10 0F            RRC ?b0
E5BB 2A 10 0F            LDA ?b0
E5BE 2D 01               CMPA #0x01
E5C0 2B F8 00            JNE FAIL
E5C3 14 10 0F            RRC ?b0
E5C6 2A 10 0F            LDA ?b0
E5C9 2D 00               CMPA #0x00
E5CB 2B F8 00            JNE FAIL
E5CE 14 10 0F            RRC ?b0
E5D1 2A 10 0F            LDA ?b0
E5D4 2D 80               CMPA #0x80
E5D6 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.15 SRL 0x****   Shift Right Logical on Address
                         ;                    0 -> b7 b6 b5 b4 b3 b2 b1 b0 -> C
                         ; --------------------------------------------------------------------
E5D9 30 15      TSTOP15  LDA #0x15
E5DB 36                  NOTA
E5DC 31 C0 00            STA LEDPORT ; Output to LED port
E5DF 30 A5               LDA #0xA5
E5E1 31 10 0F            STA ?b0
E5E4 15 10 0F            SRL ?b0
E5E7 2A 10 0F            LDA ?b0
E5EA 2D 52               CMPA #0x52
E5EC 2B F8 00            JNE FAIL    ; Jump if result not good
E5EF 2A 1F FB            LDA CARRY   ; Read the Carry Status
E5F2 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E5F4 2B F8 00            JNE FAIL    ; Error if different
E5F7 30 A5               LDA #0xA5
E5F9 31 10 0F            STA ?b0
E5FC 15 10 0F            SRL ?b0
E5FF 15 10 0F            SRL ?b0
E602 2A 10 0F            LDA ?b0
E605 2D 29               CMPA #0x29
E607 2B F8 00            JNE FAIL    ; Jump if result not good
E60A 2A 1F FB            LDA CARRY   ; Read the Carry Status
E60D 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E60F 2B F8 00            JNE FAIL    ; Error if different
E612 30 A5               LDA #0xA5
E614 31 10 0F            STA ?b0
E617 15 10 0F            SRL ?b0
E61A 15 10 0F            SRL ?b0
E61D 15 10 0F            SRL ?b0
E620 2A 10 0F            LDA ?b0
E623 2D 14               CMPA #0x14
E625 2B F8 00            JNE FAIL    ; Jump if result not good
E628 2A 1F FB            LDA CARRY   ; Read the Carry Status
E62B 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E62D 2B F8 00            JNE FAIL    ; Error if different
E630 30 A5               LDA #0xA5
E632 31 10 0F            STA ?b0
E635 15 10 0F            SRL ?b0
E638 15 10 0F            SRL ?b0
E63B 15 10 0F            SRL ?b0
E63E 15 10 0F            SRL ?b0
E641 2A 10 0F            LDA ?b0
E644 2D 0A               CMPA #0x0A
E646 2B F8 00            JNE FAIL    ; Jump if result not good
E649 2A 1F FB            LDA CARRY   ; Read the Carry Status
E64C 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E64E 2B F8 00            JNE FAIL    ; Error if different
E651 30 A5               LDA #0xA5
E653 31 10 0F            STA ?b0
E656 15 10 0F            SRL ?b0
E659 15 10 0F            SRL ?b0
E65C 15 10 0F            SRL ?b0
E65F 15 10 0F            SRL ?b0
E662 15 10 0F            SRL ?b0
E665 2A 10 0F            LDA ?b0
E668 2D 05               CMPA #0x05
E66A 2B F8 00            JNE FAIL    ; Jump if result not good
E66D 2A 1F FB            LDA CARRY   ; Read the Carry Status
E670 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E672 2B F8 00            JNE FAIL    ; Error if different
E675 30 A5               LDA #0xA5
E677 31 10 0F            STA ?b0
E67A 15 10 0F            SRL ?b0
E67D 15 10 0F            SRL ?b0
E680 15 10 0F            SRL ?b0
E683 15 10 0F            SRL ?b0
E686 15 10 0F            SRL ?b0
E689 15 10 0F            SRL ?b0
E68C 2A 10 0F            LDA ?b0
E68F 2D 02               CMPA #0x02
E691 2B F8 00            JNE FAIL    ; Jump if result not good
E694 2A 1F FB            LDA CARRY   ; Read the Carry Status
E697 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E699 2B F8 00            JNE FAIL    ; Error if different
E69C 30 A5               LDA #0xA5
E69E 31 10 0F            STA ?b0
E6A1 15 10 0F            SRL ?b0
E6A4 15 10 0F            SRL ?b0
E6A7 15 10 0F            SRL ?b0
E6AA 15 10 0F            SRL ?b0
E6AD 15 10 0F            SRL ?b0
E6B0 15 10 0F            SRL ?b0
E6B3 15 10 0F            SRL ?b0
E6B6 2A 10 0F            LDA ?b0
E6B9 2D 01               CMPA #0x01
E6BB 2B F8 00            JNE FAIL    ; Jump if result not good
E6BE 2A 1F FB            LDA CARRY   ; Read the Carry Status
E6C1 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E6C3 2B F8 00            JNE FAIL    ; Error if different
E6C6 30 A5               LDA #0xA5
E6C8 31 10 0F            STA ?b0
E6CB 15 10 0F            SRL ?b0
E6CE 15 10 0F            SRL ?b0
E6D1 15 10 0F            SRL ?b0
E6D4 15 10 0F            SRL ?b0
E6D7 15 10 0F            SRL ?b0
E6DA 15 10 0F            SRL ?b0
E6DD 15 10 0F            SRL ?b0
E6E0 15 10 0F            SRL ?b0
E6E3 2A 10 0F            LDA ?b0
E6E6 2D 00               CMPA #0x00
E6E8 2B F8 00            JNE FAIL    ; Jump if result not good
E6EB 2A 1F FB            LDA CARRY   ; Read the Carry Status
E6EE 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E6F0 2B F8 00            JNE FAIL    ; Error if different
E6F3 30 A5               LDA #0xA5
E6F5 31 10 0F            STA ?b0
E6F8 15 10 0F            SRL ?b0
E6FB 15 10 0F            SRL ?b0
E6FE 15 10 0F            SRL ?b0
E701 15 10 0F            SRL ?b0
E704 15 10 0F            SRL ?b0
E707 15 10 0F            SRL ?b0
E70A 15 10 0F            SRL ?b0
E70D 15 10 0F            SRL ?b0
E710 15 10 0F            SRL ?b0
E713 2A 10 0F            LDA ?b0
E716 2D 00               CMPA #0x00
E718 2B F8 00            JNE FAIL    ; Jump if result not good
E71B 2A 1F FB            LDA CARRY   ; Read the Carry Status
E71E 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E720 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.29 ADDA 0x****  
                         ; ADD A WITH BYTE AT ADDRESS, C UPDATE
                         ; --------------------------------------------------------------------
E723 30 29      TSTOP29  LDA #0x29
E725 36                  NOTA
E726 31 C0 00            STA LEDPORT ; Output to LED port
E729 30 5F               LDA #0x5F   ; Store a value in RAM
E72B 31 01 23            STA 0x0123   
E72E 30 63               LDA #0x63
E730 29 01 23            ADDA 0x0123 ; Add to A the byte at address location
E733 2D C2               CMPA #0xC2  ; Check the sum
E735 2B F8 00            JNE FAIL    ; Jump if result not good
E738 2A 1F FB            LDA CARRY   ; Read the Carry Status
E73B 2D 00               CMPA #0x00  ; No carry expected then C should be '0'
E73D 2B F8 00            JNE FAIL    ; Error if carry is set

E740 30 AC               LDA #0xAC   ; Store another value in RAM
E742 31 10 56            STA 0x1056   
E745 30 D9               LDA #0xD9
E747 29 10 56            ADDA 0x1056 ; Add to A the byte at address location
E74A 2D 85               CMPA #0x85  ; Check the sum LSB
E74C 2B F8 00            JNE FAIL    ; Jump if result not as expected
E74F 2A 1F FB            LDA CARRY   ; Read the Carry Status
E752 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E754 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.2A LDA 0x****  
                         ; LOAD A WITH BYTE AT ADDRESS Test LDA #0x** instruction 
                         ; --------------------------------------------------------------------
E757 30 2A      TSTOP2A  LDA #0x2A
E759 36                  NOTA
E75A 31 C0 00            STA LEDPORT ; Output to LED port
E75D 30 AA               LDA #0xAA   ; Load immediate in register A
E75F 2D AA               CMPA #0xAA
E761 2B F8 00            JNE FAIL
E764 30 01               LDA #0x01
E766 2D 01               CMPA #0x01
E768 2B F8 00            JNE FAIL
E76B 30 02               LDA #0x02
E76D 2D 02               CMPA #0x02
E76F 2B F8 00            JNE FAIL
E772 30 04               LDA #0x04
E774 2D 04               CMPA #0x04
E776 2B F8 00            JNE FAIL
E779 30 08               LDA #0x08
E77B 2D 08               CMPA #0x08
E77D 2B F8 00            JNE FAIL
E780 30 10               LDA #0x10
E782 2D 10               CMPA #0x10
E784 2B F8 00            JNE FAIL
E787 30 20               LDA #0x20
E789 2D 20               CMPA #0x20
E78B 2B F8 00            JNE FAIL
E78E 30 40               LDA #0x40
E790 2D 40               CMPA #0x40
E792 2B F8 00            JNE FAIL
E795 30 80               LDA #0x80
E797 2D 80               CMPA #0x80
E799 2B F8 00            JNE FAIL
E79C 30 55               LDA #0x55
E79E 2D 55               CMPA #0x55
E7A0 2B F8 00            JNE FAIL
E7A3 30 FF               LDA #0xFF
E7A5 2D FF               CMPA #0xFF
E7A7 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2B JNE 0x****  
                         ; JUMP IF E=0
                         ; Only a partial validation because i do not have symbolic address
                         ; processing in the assembler program.
                         ; --------------------------------------------------------------------
E7AA 30 2B      TSTOP2B  LDA #0x2B
E7AC 36                  NOTA
E7AD 31 C0 00            STA LEDPORT ; Output to LED port
E7B0 30 6D               LDA #0x6D   ; Load a value in A
E7B2 2D 6D               CMPA #0x6D  ; Compare with the same value
E7B4 2B F8 00            JNE FAIL    ; Error if values are different
E7B7 30 10               LDA #0x10
E7B9 2D 10               CMPA #0x10
E7BB 2B F8 00            JNE FAIL
E7BE 30 01               LDA #0x01
E7C0 2D 01               CMPA #0x01
E7C2 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2C JEQ 0x****
                         ; JUMP IF E=1
                         ; --------------------------------------------------------------------
E7C5 30 2C      TST2C    LDA #0x2C
E7C7 36                  NOTA
E7C8 31 C0 00            STA LEDPORT ; Output to LED port
E7CB 30 7A               LDA #0x7A   ; Load a value in A
E7CD 2D 28               CMPA #0x28  ; Compare with a different value
E7CF 2C F8 00            JEQ FAIL    ; If appear identical then it's and error
E7D2 30 FE               LDA #0xFE   ; Again with adifference 
E7D4 2D FF               CMPA #0xFF
E7D6 2C F8 00            JEQ FAIL 
E7D9 30 01               LDA #0x01   ; Another with difference
E7DB 2D 10               CMPA #0x10
E7DD 2C F8 00            JEQ FAIL
E7E0 30 AB               LDA #0xAB   ; Now compare when values are identical
E7E2 2D AB               CMPA #0xAB
E7E4 2C E7 EA            JEQ TST2C_1 ; Testing if equal?
E7E7 32 F8 00            JMP FAIL    ; Result say both are not equal then it's a failure
E7EA 30 00      TST2C_1  LDA #0x00   ; Result say the values are identical so we are passing
E7EC 2D 00               CMPA #0x00
E7EE 2C E7 F4            JEQ TST2C_2 ; Testing if equal?
E7F1 32 F8 00            JMP FAIL    ; if different then it's a failure
E7F4 30 01      TST2C_2  LDA #0x01
E7F6 2D 01               CMPA #0x01
E7F8 2C E7 FE            JEQ TST2C_3 ; Testing if equal?
E7FB 32 F8 00            JMP FAIL    ; if different then it's a failure
E7FE 30 02      TST2C_3  LDA #0x02
E800 2D 02               CMPA #0x02
E802 2C E8 08            JEQ TST2C_4 ; Testing if equal?
E805 32 F8 00            JMP FAIL    ; if different then it's a failure
E808 30 04      TST2C_4  LDA #0x04
E80A 2D 04               CMPA #0x04
E80C 2C E8 12            JEQ TST2C_5 ; Testing if equal?
E80F 32 F8 00            JMP FAIL    ; if different then it's a failure
E812 30 08      TST2C_5  LDA #0x08
E814 2D 08               CMPA #0x08
E816 2C E8 1C            JEQ TST2C_6 ; Testing if equal?
E819 32 F8 00            JMP FAIL    ; if different then it's a failure
E81C 30 10      TST2C_6  LDA #0x10
E81E 2D 10               CMPA #0x10
E820 2C E8 26            JEQ TST2C_7 ; Testing if equal?
E823 32 F8 00            JMP FAIL    ; if different then it's a failure
E826 30 20      TST2C_7  LDA #0x20
E828 2D 20               CMPA #0x20
E82A 2C E8 30            JEQ TST2C_8 ; Testing if equal?
E82D 32 F8 00            JMP FAIL    ; if different then it's a failure         
E830 30 40      TST2C_8  LDA #0x40
E832 2D 40               CMPA #0x40
E834 2C E8 3A            JEQ TST2C_9 ; Testing if equal?
E837 32 F8 00            JMP FAIL    ; if different then it's a failure         
E83A 30 80      TST2C_9  LDA #0x80
E83C 2D 80               CMPA #0x80
E83E 2C E8 44            JEQ TST2C_10 ; Testing if equal?
E841 32 F8 00            JMP FAIL    ; if different then it's a failure         
E844 09         TST2C_10 NOP
                         ; --------------------------------------------------------------------
                         ; OP.2D CMPA #0x**
                         ; COMPARE A WITH IMMEDIATE VALUE    EQUAL STATUS BIT (E) UPDATED
                         ; --------------------------------------------------------------------
E845 30 2D      TSTOP2D  LDA #0x2D
E847 36                  NOTA
E848 31 C0 00            STA LEDPORT ; Output to LED port
E84B 30 12               LDA #0x12   ; Load a value in A
E84D 2D 12               CMPA #0x12  ; Compare with identical value
E84F 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS 
E852 2D 01               CMPA #0x01  ; Verify bit<0> E = '1' and all others bits <7:1> are '0'    
E854 2B F8 00            JNE FAIL    ; If different then it's and error
E857 30 AA               LDA #0xAA
E859 2D 55               CMPA #0x55  ; Compare with a different value
E85B 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS
E85E 2D 00               CMPA #0x00  ; Verify bit<0> E = '0' and all others bits <7:1> are '0'    
E860 2B F8 00            JNE FAIL    ; If different then it's and error
                         ; --------------------------------------------------------------------
                         ; OP.2E ADCA #0x**
                         ; REG A = REG A + IMMEDIATE BYTE + CARRY (C)   
                         ; CARRY STATUS (C) IS UPDATED
                         ; --------------------------------------------------------------------
E863 30 2E      TSTOP2E  LDA #0x2E
E865 36                  NOTA
E866 31 C0 00            STA LEDPORT ; Output to LED port
E869 30 00               LDA #0x00   ; Clear CARRY (C)
E86B 31 1F FB            STA CARRY      
E86E 30 45               LDA #0x45
E870 2E 5B               ADCA #0x5B
E872 2D A0               CMPA #0xA0  ; Verify summ
E874 2B F8 00            JNE FAIL
E877 2A 1F FB            LDA CARRY   ; Check carry
E87A 2D 00               CMPA #0x00  ; Should be clear
E87C 2B F8 00            JNE FAIL

E87F 30 01               LDA #0x01   ; Set CARRY (C)
E881 31 1F FB            STA CARRY
E884 30 56               LDA #0x56
E886 2E 6D               ADCA #0x6D
E888 2D C4               CMPA #0xC4   ; Verify summ
E88A 2B F8 00            JNE FAIL
E88D 2A 1F FB            LDA CARRY   ; Check carry
E890 2D 00               CMPA #0x00  ; Should be clear
E892 2B F8 00            JNE FAIL

E895 30 00               LDA #0x00   ; Clear CARRY (C)
E897 31 1F FB            STA CARRY
E89A 30 7F               LDA #0x7F
E89C 2E DE               ADCA #0xDE
E89E 2D 5D               CMPA #0x5D  ; Verify summ
E8A0 2B F8 00            JNE FAIL
E8A3 2A 1F FB            LDA CARRY   ; Check carry
E8A6 2D 01               CMPA #0x01  ; Should be set
E8A8 2B F8 00            JNE FAIL

E8AB 30 01               LDA #0x01H  ; Set CARRY (C)
E8AD 31 1F FB            STA CARRY
E8B0 30 FF               LDA #0xFF
E8B2 2E FF               ADCA #0xFF
E8B4 2D FF               CMPA #0xFF  ; Verify summ
E8B6 2B F8 00            JNE FAIL
E8B9 2A 1F FB            LDA CARRY   ; Check carry
E8BC 2D 01               CMPA #0x01  ; Should be set
E8BE 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2F ADDA #0x**
                         ; ACCA+M>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
E8C1 30 2F      TSTOP2F  LDA #0x2F
E8C3 36                  NOTA
E8C4 31 C0 00            STA LEDPORT ; Output to LED port
E8C7 30 23               LDA #0x23
E8C9 2F 45               ADDA #0x45
E8CB 2D 68               CMPA #0x68
E8CD 2B F8 00            JNE FAIL
E8D0 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E8D3 2D 00               CMPA #0x00  ; Expecting C=0
E8D5 2B F8 00            JNE FAIL
E8D8 30 8A               LDA #0x8A
E8DA 2F BD               ADDA #0xBD
E8DC 2D 47               CMPA #0x47   
E8DE 2B F8 00            JNE FAIL
E8E1 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E8E4 2D 01               CMPA #0x01  ; Expecting C=1
E8E6 2B F8 00            JNE FAIL
E8E9 30 01               LDA #0x01
E8EB 2F 02               ADDA #0x02
E8ED 2D 03               CMPA #0x03
E8EF 2B F8 00            JNE FAIL
E8F2 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E8F5 2D 00               CMPA #0x00  ; Expecting C=0
E8F7 2B F8 00            JNE FAIL
E8FA 30 FF               LDA #0xFF
E8FC 2F FF               ADDA #0xFF
E8FE 2D FE               CMPA #0xFE
E900 2B F8 00            JNE FAIL
E903 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E906 2D 01               CMPA #0x01   ; Expecting C=1
E908 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.30 LDA #0x**  
                         ; LOAD IMMEDIATE VALUE IN REGISTER A
                         ; --------------------------------------------------------------------
E90B 30 30      TSTOP30  LDA #0x30
E90D 36                  NOTA
E90E 31 C0 00            STA LEDPORT ; Output to LED port
E911 30 00               LDA #0x00
E913 2D 00               CMPA #0x00
E915 2B F8 00            JNE FAIL
E918 30 01               LDA #0x01
E91A 2D 01               CMPA #0x01
E91C 2B F8 00            JNE FAIL
E91F 30 02               LDA #0x02
E921 2D 02               CMPA #0x02
E923 2B F8 00            JNE FAIL
E926 30 04               LDA #0x04
E928 2D 04               CMPA #0x04
E92A 2B F8 00            JNE FAIL
E92D 30 08               LDA #0x08
E92F 2D 08               CMPA #0x08
E931 2B F8 00            JNE FAIL
E934 30 10               LDA #0x10
E936 2D 10               CMPA #0x10
E938 2B F8 00            JNE FAIL
E93B 30 20               LDA #0x20
E93D 2D 20               CMPA #0x20
E93F 2B F8 00            JNE FAIL
E942 30 40               LDA #0x40
E944 2D 40               CMPA #0x40
E946 2B F8 00            JNE FAIL
E949 30 80               LDA #0x80
E94B 2D 80               CMPA #0x80
E94D 2B F8 00            JNE FAIL
E950 30 55               LDA #0x55
E952 2D 55               CMPA #0x55
E954 2B F8 00            JNE FAIL
E957 30 AA               LDA #0xAA
E959 2D AA               CMPA #0xAA
E95B 2B F8 00            JNE FAIL
E95E 30 FF               LDA #0xFF
E960 2D FF               CMPA #0xFF
E962 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.31 STA 0x**** 
                         ; STORE REG.A TO ADDRESSE
                         ; --------------------------------------------------------------------
E965 30 31      TSTOP31  LDA #0x31
E967 36                  NOTA
E968 31 C0 00            STA LEDPORT ; Output to LED port
E96B 30 12               LDA #0x12   ; Write to RAM
E96D 31 00 00            STA 0x0000
E970 30 23               LDA #0x23
E972 31 00 01            STA 0x0001
E975 30 34               LDA #0x34
E977 31 00 02            STA 0x0002
E97A 30 45               LDA #0x45
E97C 31 00 04            STA 0x0004
E97F 30 56               LDA #0x56
E981 31 00 08            STA 0x0008
E984 30 67               LDA #0x67
E986 31 00 10            STA 0x0010
E989 30 78               LDA #0x78
E98B 31 00 20            STA 0x0020
E98E 30 89               LDA #0x89
E990 31 00 40            STA 0x0040
E993 30 AB               LDA #0xAB
E995 31 00 80            STA 0x0080
E998 30 BC               LDA #0xBC
E99A 31 01 00            STA 0x0100
E99D 30 CD               LDA #0xCD
E99F 31 02 00            STA 0x0200
E9A2 30 DE               LDA #0xDE
E9A4 31 04 00            STA 0x0400
E9A7 30 22               LDA #0x22
E9A9 31 08 00            STA 0x0800
E9AC 30 33               LDA #0x33
E9AE 31 10 00            STA 0x1000
E9B1 30 44               LDA #0x44
E9B3 31 17 00            STA 0x1700
E9B6 2A 00 00            LDA 0x0000  ; Read from RAM and compare
E9B9 2D 12               CMPA #0x12
E9BB 2B F8 00            JNE FAIL
E9BE 2A 00 01            LDA 0x0001
E9C1 2D 23               CMPA #0x23
E9C3 2B F8 00            JNE FAIL
E9C6 2A 00 02            LDA 0x0002
E9C9 2D 34               CMPA #0x34
E9CB 2B F8 00            JNE FAIL
E9CE 2A 00 04            LDA 0x0004
E9D1 2D 45               CMPA #0x45
E9D3 2B F8 00            JNE FAIL
E9D6 2A 00 08            LDA 0x0008
E9D9 2D 56               CMPA #0x56
E9DB 2B F8 00            JNE FAIL
E9DE 2A 00 10            LDA 0x0010
E9E1 2D 67               CMPA #0x67
E9E3 2B F8 00            JNE FAIL
E9E6 2A 00 20            LDA 0x0020
E9E9 2D 78               CMPA #0x78
E9EB 2B F8 00            JNE FAIL
E9EE 2A 00 40            LDA 0x0040
E9F1 2D 89               CMPA #0x89
E9F3 2B F8 00            JNE FAIL
E9F6 2A 00 80            LDA 0x0080
E9F9 2D AB               CMPA #0xAB
E9FB 2B F8 00            JNE FAIL
E9FE 2A 01 00            LDA 0x0100
EA01 2D BC               CMPA #0xBC
EA03 2B F8 00            JNE FAIL
EA06 2A 02 00            LDA 0x0200
EA09 2D CD               CMPA #0xCD
EA0B 2B F8 00            JNE FAIL
EA0E 2A 04 00            LDA 0x0400
EA11 2D DE               CMPA #0xDE
EA13 2B F8 00            JNE FAIL
EA16 2A 08 00            LDA 0x0800
EA19 2D 22               CMPA #0x22
EA1B 2B F8 00            JNE FAIL
EA1E 2A 10 00            LDA 0x1000
EA21 2D 33               CMPA #0x33
EA23 2B F8 00            JNE FAIL
EA26 2A 17 00            LDA 0x1700
EA29 2D 44               CMPA #0x44
EA2B 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.32 JMP 0x**** 
                         ; JUMP INCONDITIONAL TO ADDRESS
                         ; --------------------------------------------------------------------
                         ;LDA #0x32
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.33 ANDA #0x**  REGISTER A AND LOGICAL IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
EA2E 30 33      TSTOP33  LDA #0x33
EA30 36                  NOTA
EA31 31 C0 00            STA LEDPORT ; Output to LED port
EA34 30 FF               LDA #0xFF
EA36 33 52               ANDA #0x52
EA38 2D 52               CMPA #0x52
EA3A 2B F8 00            JNE FAIL
EA3D 30 E7               LDA #0xE7
EA3F 33 3C               ANDA #0x3C
EA41 2D 24               CMPA #0x24
EA43 2B F8 00            JNE FAIL
EA46 30 00               LDA #0x00
EA48 33 00               ANDA #0x00
EA4A 2D 00               CMPA #0x00
EA4C 2B F8 00            JNE FAIL
EA4F 30 FF               LDA #0xFF
EA51 33 FF               ANDA #0xFF
EA53 2D FF               CMPA #0xFF
EA55 2B F8 00            JNE FAIL
EA58 30 FF               LDA #0xFF
EA5A 33 55               ANDA #0x55
EA5C 2D 55               CMPA #0x55
EA5E 2B F8 00            JNE FAIL
EA61 30 FF               LDA #0xFF
EA63 33 00               ANDA #0x00
EA65 2D 00               CMPA #0x00
EA67 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.34 ORA #0x**   LOGICAL OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
EA6A 30 34      TSTOP34  LDA #0x34
EA6C 36                  NOTA
EA6D 31 C0 00            STA LEDPORT ; Output to LED port
EA70 30 FF               LDA #0xFF
EA72 34 FF               ORA #0xFF
EA74 2D FF               CMPA #0xFF
EA76 2B F8 00            JNE FAIL
EA79 30 00               LDA #0x00
EA7B 34 00               ORA #0x00
EA7D 2D 00               CMPA #0x00
EA7F 2B F8 00            JNE FAIL
EA82 30 25               LDA #0x25
EA84 34 D3               ORA #0xD3
EA86 2D F7               CMPA #0xF7
EA88 2B F8 00            JNE FAIL
EA8B 30 00               LDA #0x00
EA8D 34 FF               ORA #0xFF
EA8F 2D FF               CMPA #0xFF
EA91 2B F8 00            JNE FAIL
EA94 30 FF               LDA #0xFF
EA96 34 00               ORA #0x00
EA98 2D FF               CMPA #0xFF
EA9A 2B F8 00            JNE FAIL
EA9D 30 14               LDA #0x14
EA9F 34 C1               ORA #0xC1
EAA1 2D D5               CMPA #0xD5
EAA3 2B F8 00            JNE FAIL
EAA6 30 AA               LDA #0xAA
EAA8 34 55               ORA #0x55
EAAA 2D FF               CMPA #0xFF
EAAC 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.35 XORA #0x**  EXCLUSIVE OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
EAAF 30 35      TSTOP35  LDA #0x35
EAB1 36                  NOTA
EAB2 31 C0 00            STA LEDPORT ; Output to LED port
EAB5 30 00               LDA #0x00
EAB7 35 00               XORA #0x00
EAB9 2D 00               CMPA #0x00
EABB 2B F8 00            JNE FAIL
EABE 30 00               LDA #0x00
EAC0 35 FF               XORA #0xFF
EAC2 2D FF               CMPA #0xFF
EAC4 2B F8 00            JNE FAIL
EAC7 30 FF               LDA #0xFF
EAC9 35 FF               XORA #0xFF
EACB 2D 00               CMPA #0x00
EACD 2B F8 00            JNE FAIL
EAD0 30 FF               LDA #0xFF
EAD2 35 55               XORA #0x55
EAD4 2D AA               CMPA #0xAA
EAD6 2B F8 00            JNE FAIL
EAD9 30 CE               LDA #0xCE
EADB 35 5A               XORA #0x5A
EADD 2D 94               CMPA #0x94
EADF 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.36 NOTA  LOGIC NOT ON REG A
                         ; --------------------------------------------------------------------
EAE2 30 36      TSTOP36  LDA #0x36
EAE4 36                  NOTA
EAE5 31 C0 00            STA LEDPORT ; Output to LED port
EAE8 30 00               LDA #0x00
EAEA 36                  NOTA
EAEB 2D FF               CMPA #0xFF
EAED 2B F8 00            JNE FAIL
EAF0 36                  NOTA
EAF1 2D 00               CMPA #0x00
EAF3 2B F8 00            JNE FAIL
EAF6 30 55               LDA #0x55
EAF8 36                  NOTA
EAF9 2D AA               CMPA #0xAA
EAFB 2B F8 00            JNE FAIL
EAFE 36                  NOTA
EAFF 2D 55               CMPA #0x55
EB01 2B F8 00            JNE FAIL
EB04 36                  NOTA
EB05 2D AA               CMPA #0xAA
EB07 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.37 INCA  A = A + 1  INCREMENT REGISTRE A
                         ; E UPDATE, C unchanged
                         ; --------------------------------------------------------------------
EB0A 30 37      TSTOP37  LDA #0x37
EB0C 36                  NOTA
EB0D 31 C0 00            STA LEDPORT ; Output to LED port
EB10 30 00               LDA #0x00
EB12 37                  INCA
EB13 2D 01               CMPA #0x01
EB15 2B F8 00            JNE FAIL
EB18 30 01               LDA #0x01
EB1A 37                  INCA
EB1B 2D 02               CMPA #0x02
EB1D 2B F8 00            JNE FAIL
EB20 30 7C               LDA #0x7C
EB22 37                  INCA
EB23 37                  INCA
EB24 37                  INCA
EB25 37                  INCA
EB26 37                  INCA
EB27 37                  INCA
EB28 37                  INCA
EB29 37                  INCA
EB2A 37                  INCA
EB2B 37                  INCA
EB2C 2D 86               CMPA #0x86
EB2E 2B F8 00            JNE FAIL
EB31 30 FE               LDA #0xFE
EB33 37                  INCA
EB34 2D FF               CMPA #0xFF
EB36 2B F8 00            JNE FAIL
EB39 30 FF               LDA #0xFF
EB3B 37                  INCA
EB3C 2D 00               CMPA #0x00
EB3E 2B F8 00            JNE FAIL
EB41 30 FF               LDA #0xFF
EB43 37                  INCA
EB44 37                  INCA
EB45 2D 01               CMPA #0x01
EB47 2B F8 00            JNE FAIL
EB4A 37                  INCA
EB4B 37                  INCA
EB4C 37                  INCA
EB4D 37                  INCA
EB4E 2D 05               CMPA #0x05
EB50 2B F8 00            JNE FAIL
EB53 37                  INCA
EB54 37                  INCA
EB55 37                  INCA
EB56 37                  INCA
EB57 37                  INCA
EB58 37                  INCA
EB59 37                  INCA
EB5A 37                  INCA
EB5B 2D 0D               CMPA #0x0D
EB5D 2B F8 00            JNE FAIL
EB60 30 00               LDA #0x00   ; Test Carry unchanged
EB62 31 1F FB            STA CARRY   ; Clear Carry 
EB65 30 FF               LDA #0xFF
EB67 37                  INCA
EB68 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
EB6B 2D 00               CMPA #0x00  ; Expecting C=0 and <7:1> = 0
EB6D 2B F8 00            JNE FAIL
EB70 30 01               LDA #0x01   ; Set Carry 
EB72 31 1F FB            STA CARRY   
EB75 30 EB               LDA #0xEB
EB77 37                  INCA
EB78 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
EB7B 2D 01               CMPA #0x01  ; Expecting C=1 and <7:1> = 0
EB7D 2B F8 00            JNE FAIL
EB80 30 FE               LDA #0xFE   ; Test Equal (Set when result is 0)
EB82 37                  INCA
EB83 2A 1F FA            LDA EQUAL   ; Read Equal status
EB86 2D 00               CMPA #0x00  ; Expecting E=0 and <7:1> = 0
EB88 2B F8 00            JNE FAIL
EB8B 30 FF               LDA #0xFF
EB8D 37                  INCA
EB8E 2A 1F FA            LDA EQUAL   ; Read Equal status
EB91 2D 01               CMPA #0x01  ; Expecting E=1 and <7:1> = 0
EB93 2B F8 00            JNE FAIL
EB96 30 00               LDA #0x00
EB98 37                  INCA
EB99 2A 1F FA            LDA EQUAL
EB9C 2D 00               CMPA #0x00  ; Expecting E=0 and <7:1> = 0
EB9E 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.38  LDX #0x****   Load X Register with 16 bits immediate value
                         ; --------------------------------------------------------------------
EBA1 30 38      TSTOP38  LDA #0x38
EBA3 36                  NOTA
EBA4 31 C0 00            STA LEDPORT ; Output to LED port
EBA7 38 12 34            LDX #0x1234
EBAA 2A 1F F3            LDA XH      ; Read Reg X MSB into A
EBAD 2D 12               CMPA #0x12
EBAF 2B F8 00            JNE FAIL
EBB2 2A 1F F4            LDA XL      ; Read Reg X LSB into A
EBB5 2D 34               CMPA #0x34
EBB7 2B F8 00            JNE FAIL
EBBA 38 AB CD            LDX #0xABCD
EBBD 2A 1F F3            LDA XH      ; Read Reg X MSB into A
EBC0 2D AB               CMPA #0xAB
EBC2 2B F8 00            JNE FAIL
EBC5 2A 1F F4            LDA XL      ; Read Reg X LSB into A
EBC8 2D CD               CMPA #0xCD
EBCA 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.39  INCX   Increment Register X,  Carry Not Updated
                         ; --------------------------------------------------------------------
EBCD 30 39      TSTOP39  LDA #0x39
EBCF 36                  NOTA
EBD0 31 C0 00            STA LEDPORT ; Output to LED port
EBD3 38 00 00            LDX #0x0000 ; Clear X register
EBD6 39                  INCX        ; Increment X
EBD7 2A 1F F4            LDA XL      ; Read Reg X LSB into A
EBDA 2D 01               CMPA #0x01
EBDC 2B F8 00            JNE FAIL
EBDF 2A 1F F3            LDA XH      ; Read Reg X MSB into A
EBE2 2D 00               CMPA #0x00
EBE4 2B F8 00            JNE FAIL
EBE7 39                  INCX
EBE8 2A 1F F4            LDA XL      ; Read Reg X LSB into A
EBEB 2D 02               CMPA #0x02
EBED 2B F8 00            JNE FAIL
EBF0 2A 1F F3            LDA XH      ; Read Reg X MSB into A
EBF3 2D 00               CMPA #0x00
EBF5 2B F8 00            JNE FAIL

EBF8 38 00 FF            LDX #0x00FF ; Test a carry set
EBFB 39                  INCX        ; Increment X
EBFC 2A 1F F4            LDA XL      ; Read Reg X LSB into A
EBFF 2D 00               CMPA #0x00
EC01 2B F8 00            JNE FAIL
EC04 2A 1F F3            LDA XH      ; Read Reg X MSB into A
EC07 2D 01               CMPA #0x01
EC09 2B F8 00            JNE FAIL
EC0C 39                  INCX        ; Increment X
EC0D 2A 1F F4            LDA XL      ; Read Reg X LSB into A
EC10 2D 01               CMPA #0x01
EC12 2B F8 00            JNE FAIL
EC15 2A 1F F3            LDA XH      ; Read Reg X MSB into A
EC18 2D 01               CMPA #0x01
EC1A 2B F8 00            JNE FAIL

EC1D 38 1E FF            LDX #0x1EFF
EC20 39                  INCX        ; Increment X
EC21 2A 1F F4            LDA XL      ; Read Reg X LSB into A
EC24 2D 00               CMPA #0x00
EC26 2B F8 00            JNE FAIL
EC29 2A 1F F3            LDA XH      ; Read Reg X MSB into A
EC2C 2D 1F               CMPA #0x1F
EC2E 2B F8 00            JNE FAIL

EC31 38 FF FF            LDX #0xFFFF
EC34 39                  INCX        ; Increment X
EC35 2A 1F F4            LDA XL      ; Read Reg X LSB into A
EC38 2D 00               CMPA #0x00
EC3A 2B F8 00            JNE FAIL
EC3D 2A 1F F3            LDA XH      ; Read Reg X MSB into A
EC40 2D 00               CMPA #0x00
EC42 2B F8 00            JNE FAIL

                         ; --------------------------------------------------------------------
                         ; FIBONACCI TEST
                         ; --------------------------------------------------------------------         
EC45 30 40      TSTFIBON LDA #0x40
EC47 36                  NOTA
EC48 31 C0 00            STA LEDPORT ; Output to LED port
                                     ;
EC4B 30 00               LDA #0x00   ; Init first number with 00H
EC4D 31 10 00            STA 0x1000
EC50 30 01               LDA #0x01   ; Init second number with 01H
EC52 31 10 01            STA 0x1001
EC55 2A 10 00            LDA 0x1000  ; Load first number in A
EC58 29 10 01            ADDA 0x1001 ; Add second number to A
EC5B 31 10 02            STA 0x1002  ; Store the summ
EC5E 2D 01               CMPA #0x01  ; HEX   Decimal  Real Value (in 8 bit storage only)
EC60 2B F8 00            JNE FAIL    ; x01   1        1

EC63 2A 10 01            LDA 0x1001  ; Move second number to the first number
EC66 31 10 00            STA 0x1000
EC69 2A 10 02            LDA 0x1002  ; Move summ to the second number
EC6C 31 10 01            STA 0x1001
EC6F 2A 10 00            LDA 0x1000  ; Load first number in A
EC72 29 10 01            ADDA 0x1001 ; Add second number to A
EC75 31 10 02            STA 0x1002  ; Store the summ
EC78 2D 02               CMPA #0x02  ; HEX   Decimal  Real Value
EC7A 2B F8 00            JNE FAIL    ; x02   2        2

EC7D 2A 10 01            LDA 0x1001  ; Move second number to the first number
EC80 31 10 00            STA 0x1000
EC83 2A 10 02            LDA 0x1002   ; Move summ to the second number
EC86 31 10 01            STA 0x1001
EC89 2A 10 00            LDA 0x1000  ; Load first number in A
EC8C 29 10 01            ADDA 0x1001 ; Add second number to A
EC8F 31 10 02            STA 0x1002  ; Store the summ
EC92 2D 03               CMPA #0x03  ; HEX   Decimal  Real Value
EC94 2B F8 00            JNE FAIL    ; x03   3        3

EC97 2A 10 01            LDA 0x1001  ; Move second number to the first number
EC9A 31 10 00            STA 0x1000
EC9D 2A 10 02            LDA 0x1002  ; Move summ to the second number
ECA0 31 10 01            STA 0x1001
ECA3 2A 10 00            LDA 0x1000  ; Load first number in A
ECA6 29 10 01            ADDA 0x1001 ; Add second number to A
ECA9 31 10 02            STA 0x1002  ; Store the summ
ECAC 2D 05               CMPA #0x05  ; HEX   Decimal  Real Value
ECAE 2B F8 00            JNE FAIL    ; x05   5        5

ECB1 2A 10 01            LDA 0x1001  ; Move second number to the first number
ECB4 31 10 00            STA 0x1000
ECB7 2A 10 02            LDA 0x1002  ; Move summ to the second number
ECBA 31 10 01            STA 0x1001
ECBD 2A 10 00            LDA 0x1000  ; Load first number in A
ECC0 29 10 01            ADDA 0x1001 ; Add second number to A
ECC3 31 10 02            STA 0x1002  ; Store the summ
ECC6 2D 08               CMPA #0x08  ; HEX   Decimal  Real Value
ECC8 2B F8 00            JNE FAIL    ; x08   8        8

ECCB 2A 10 01            LDA 0x1001  ; Move second number to the first number
ECCE 31 10 00            STA 0x1000
ECD1 2A 10 02            LDA 0x1002  ; Move summ to the second number
ECD4 31 10 01            STA 0x1001
ECD7 2A 10 00            LDA 0x1000  ; Load first number in A
ECDA 29 10 01            ADDA 0x1001 ; Add second number to A
ECDD 31 10 02            STA 0x1002  ; Store the summ
ECE0 2D 0D               CMPA #0x0D  ; HEX   Decimal  Real Value
ECE2 2B F8 00            JNE FAIL    ; x0D   13       13

ECE5 2A 10 01            LDA 0x1001  ; Move second number to the first number
ECE8 31 10 00            STA 0x1000
ECEB 2A 10 02            LDA 0x1002  ; Move summ to the second number
ECEE 31 10 01            STA 0x1001
ECF1 2A 10 00            LDA 0x1000  ; Load first number in A
ECF4 29 10 01            ADDA 0x1001 ; Add second number to A
ECF7 31 10 02            STA 0x1002  ; Store the summ
ECFA 2D 15               CMPA #0x15  ; HEX   Decimal  Real Value
ECFC 2B F8 00            JNE FAIL    ; x15   21       21

ECFF 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED02 31 10 00            STA 0x1000
ED05 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED08 31 10 01            STA 0x1001
ED0B 2A 10 00            LDA 0x1000  ; Load first number in A
ED0E 29 10 01            ADDA 0x1001 ; Add second number to A
ED11 31 10 02            STA 0x1002  ; Store the summ
ED14 2D 22               CMPA #0x22  ; HEX   Decimal  Real Value
ED16 2B F8 00            JNE FAIL    ; x22   34       34

ED19 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED1C 31 10 00            STA 0x1000
ED1F 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED22 31 10 01            STA 0x1001
ED25 2A 10 00            LDA 0x1000  ; Load first number in A
ED28 29 10 01            ADDA 0x1001 ; Add second number to A
ED2B 31 10 02            STA 0x1002  ; Store the summ
ED2E 2D 37               CMPA #0x37  ; HEX   Decimal  Real Value
ED30 2B F8 00            JNE FAIL    ; x37   55       55

ED33 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED36 31 10 00            STA 0x1000
ED39 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED3C 31 10 01            STA 0x1001
ED3F 2A 10 00            LDA 0x1000  ; Load first number in A
ED42 29 10 01            ADDA 0x1001 ; Add second number to A
ED45 31 10 02            STA 0x1002  ; Store the summ
ED48 2D 59               CMPA #0x59  ; HEX   Decimal  Real Value
ED4A 2B F8 00            JNE FAIL    ; x59   89       89

ED4D 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED50 31 10 00            STA 0x1000
ED53 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED56 31 10 01            STA 0x1001
ED59 2A 10 00            LDA 0x1000  ; Load first number in A
ED5C 29 10 01            ADDA 0x1001 ; Add second number to A
ED5F 31 10 02            STA 0x1002  ; Store the summ
ED62 2D 90               CMPA #0x90  ; HEX   Decimal  Real Value
ED64 2B F8 00            JNE FAIL    ; x90   144      144

ED67 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED6A 31 10 00            STA 0x1000
ED6D 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED70 31 10 01            STA 0x1001
ED73 2A 10 00            LDA 0x1000  ; Load first number in A
ED76 29 10 01            ADDA 0x1001 ; Add second number to A
ED79 31 10 02            STA 0x1002  ; Store the summ
ED7C 2D E9               CMPA #0xE9  ; HEX   Decimal  Real Value
ED7E 2B F8 00            JNE FAIL    ; xE9   233      233

ED81 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED84 31 10 00            STA 0x1000
ED87 2A 10 02            LDA 0x1002  ; Move summ to the second number
ED8A 31 10 01            STA 0x1001
ED8D 2A 10 00            LDA 0x1000  ; Load first number in A
ED90 29 10 01            ADDA 0x1001 ; Add second number to A
ED93 31 10 02            STA 0x1002  ; Store the summ
ED96 2D 79               CMPA #0x79  ; HEX   Decimal  Real Value
ED98 2B F8 00            JNE FAIL    ; x79   121      377 - (256*1) = 121

ED9B 2A 10 01            LDA 0x1001  ; Move second number to the first number
ED9E 31 10 00            STA 0x1000
EDA1 2A 10 02            LDA 0x1002  ; Move summ to the second number
EDA4 31 10 01            STA 0x1001
EDA7 2A 10 00            LDA 0x1000  ; Load first number in A
EDAA 29 10 01            ADDA 0x1001 ; Add second number to A
EDAD 31 10 02            STA 0x1002  ; Store the summ
EDB0 2D 62               CMPA #0x62  ; HEX   Decimal  Real Value
EDB2 2B F8 00            JNE FAIL    ; x62   98       610 - (256*2) = 98

EDB5 2A 10 01            LDA 0x1001  ; Move second number to the first number
EDB8 31 10 00            STA 0x1000
EDBB 2A 10 02            LDA 0x1002  ; Move summ to the second number
EDBE 31 10 01            STA 0x1001
EDC1 2A 10 00            LDA 0x1000  ; Load first number in A
EDC4 29 10 01            ADDA 0x1001 ; Add second number to A
EDC7 31 10 02            STA 0x1002  ; Store the summ
EDCA 2D DB               CMPA #0xDB  ; HEX   Decimal  Real Value
EDCC 2B F8 00            JNE FAIL    ; xDB   219      987 - (256*3) = 219         

                         ; --------------------------------------------------------------------      
                         ; END OF FIBONACCI TEST
                         ; --------------------------------------------------------------------      

                         ; ---------
                         ; Loop test
                         ; ---------
EDCF 30 41      LOOPTST  LDA #0x41
EDD1 36                  NOTA
EDD2 31 C0 00            STA LEDPORT    ; Output to LED port
EDD5 30 05               LDA #0x05      ; Init a counter of iterations
EDD7 31 10 0F            STA ?b0
EDDA 2A 10 0F   LOOPTST1 LDA ?b0        ; Read counter
EDDD 2D 00               CMPA #0x00     ; Is it 0?
EDDF 2C ED E9            JEQ LOOPTST2   ; Yes then it's the end fo the test
EDE2 2F FF               ADDA #0xFF     ; Add -1 in complement 2 (equivalent to decrement)
EDE4 31 10 0F            STA ?b0        ; Save decremented count
EDE7 0C F1               JRA LOOPTST1
EDE9 09         LOOPTST2 NOP            ; End of decrement loop         

                         ; -----------------
                         ; Math Library Test
                         ; -----------------
                         ; Test add16_w0_w0_w1  w0 <= w0 + w1
EDEA 30 42               LDA #0x42
EDEC 36                  NOTA
EDED 31 C0 00            STA LEDPORT ; Output to LED port
EDF0 30 BE               LDA #0xBE   ; w0 = 0xBEEF
EDF2 31 10 0E            STA ?b1
EDF5 30 EF               LDA #0xEF
EDF7 31 10 0F            STA ?b0
EDFA 30 DE               LDA #0xDE   ; w1 = 0xDEAD
EDFC 31 10 0C            STA ?b3
EDFF 30 AD               LDA #0xAD
EE01 31 10 0D            STA ?b2
EE04 06 EF 4F            JSR ?add16_w0_w0_w1  ; w0 <= w0 + w1
EE07 2A 10 0E            LDA ?b1              ; Expected w0 = 9D9C + C set
EE0A 2D 9D               CMPA #0x9D
EE0C 2B F8 00            JNE FAIL
EE0F 2A 10 0F            LDA ?b0
EE12 2D 9C               CMPA #0x9C
EE14 2B F8 00            JNE FAIL
EE17 2A 1F FB            LDA CARRY
EE1A 2D 01               CMPA #0x01
EE1C 2B F8 00            JNE FAIL

                         ; Test add32_l0_l0_l1  l0 <= l0 + l1
EE1F 30 43               LDA #0x43
EE21 36                  NOTA
EE22 31 C0 00            STA LEDPORT ; Output to LED port
EE25 30 89               LDA #0x89   ; l0 = 0x89ABCDEF
EE27 31 10 0C            STA ?b3
EE2A 30 AB               LDA #0xAB
EE2C 31 10 0D            STA ?b2
EE2F 30 CD               LDA #0xCD
EE31 31 10 0E            STA ?b1
EE34 30 EF               LDA #0xEF
EE36 31 10 0F            STA ?b0
EE39 30 DE               LDA #0xDE   ; l1 = DEADBEEF
EE3B 31 10 08            STA ?b7
EE3E 30 AD               LDA #0xAD
EE40 31 10 09            STA ?b6
EE43 30 BE               LDA #0xBE
EE45 31 10 0A            STA ?b5
EE48 30 EF               LDA #0xEF
EE4A 31 10 0B            STA ?b4
EE4D 06 EF 62            JSR ?add32_l0_l0_l1  ; l0 <= l0 + l1
EE50 2A 10 0C            LDA ?b3              ; Expected l0 = 0x68598CDE + C set
EE53 2D 68               CMPA #0x68
EE55 2B F8 00            JNE FAIL
EE58 2A 10 0D            LDA ?b2
EE5B 2D 59               CMPA #0x59
EE5D 2B F8 00            JNE FAIL
EE60 2A 10 0E            LDA ?b1
EE63 2D 8C               CMPA #0x8C
EE65 2B F8 00            JNE FAIL
EE68 2A 10 0F            LDA ?b0
EE6B 2D DE               CMPA #0xDE
EE6D 2B F8 00            JNE FAIL
EE70 2A 1F FB            LDA CARRY
EE73 2D 01               CMPA #0x01
EE75 2B F8 00            JNE FAIL

                         ; Test ?inc32_l0_l0   l0 <= l0 + 1
EE78 30 44               LDA #0x44
EE7A 36                  NOTA
EE7B 31 C0 00            STA LEDPORT ; Output to LED port
EE7E 30 FF               LDA #0xFF   ; l0 = 0xFFFFFFFF
EE80 31 10 0C            STA ?b3
EE83 30 FF               LDA #0xFF
EE85 31 10 0D            STA ?b2
EE88 30 FF               LDA #0xFF
EE8A 31 10 0E            STA ?b1
EE8D 30 FF               LDA #0xFF
EE8F 31 10 0F            STA ?b0
EE92 06 EF 87            JSR ?inc32_l0_l0  ; l0 <= l0 + 1
                         ; Expected l0 = 0x00000000
EE95 2A 10 0C            LDA ?b3     ; Expected l0 = 0x00000000
EE98 2D 00               CMPA #0x00
EE9A 2B F8 00            JNE FAIL
EE9D 2A 10 0D            LDA ?b2
EEA0 2D 00               CMPA #0x00
EEA2 2B F8 00            JNE FAIL
EEA5 2A 10 0E            LDA ?b1
EEA8 2D 00               CMPA #0x00
EEAA 2B F8 00            JNE FAIL
EEAD 2A 10 0F            LDA ?b0
EEB0 2D 00               CMPA #0x00
EEB2 2B F8 00            JNE FAIL
EEB5 06 EF 87            JSR ?inc32_l0_l0  ; l0 <= l0 + 1
EEB8 2A 10 0C            LDA ?b3
EEBB 2D 00               CMPA #0x00
EEBD 2B F8 00            JNE FAIL
EEC0 2A 10 0D            LDA ?b2
EEC3 2D 00               CMPA #0x00
EEC5 2B F8 00            JNE FAIL
EEC8 2A 10 0E            LDA ?b1
EECB 2D 00               CMPA #0x00
EECD 2B F8 00            JNE FAIL
EED0 2A 10 0F            LDA ?b0
EED3 2D 01               CMPA #0x01
EED5 2B F8 00            JNE FAIL
EED8 06 EF 87            JSR ?inc32_l0_l0
EEDB 06 EF 87            JSR ?inc32_l0_l0
EEDE 06 EF 87            JSR ?inc32_l0_l0
EEE1 06 EF 87            JSR ?inc32_l0_l0
EEE4 06 EF 87            JSR ?inc32_l0_l0
EEE7 06 EF 87            JSR ?inc32_l0_l0
EEEA 06 EF 87            JSR ?inc32_l0_l0
EEED 06 EF 87            JSR ?inc32_l0_l0
EEF0 06 EF 87            JSR ?inc32_l0_l0
EEF3 06 EF 87            JSR ?inc32_l0_l0
EEF6 06 EF 87            JSR ?inc32_l0_l0
EEF9 06 EF 87            JSR ?inc32_l0_l0
EEFC 06 EF 87            JSR ?inc32_l0_l0
EEFF 06 EF 87            JSR ?inc32_l0_l0
EF02 06 EF 87            JSR ?inc32_l0_l0
EF05 06 EF 87            JSR ?inc32_l0_l0
EF08 06 EF 87            JSR ?inc32_l0_l0
EF0B 2A 10 0C            LDA ?b3
EF0E 2D 00               CMPA #0x00
EF10 2B F8 00            JNE FAIL
EF13 2A 10 0D            LDA ?b2
EF16 2D 00               CMPA #0x00
EF18 2B F8 00            JNE FAIL
EF1B 2A 10 0E            LDA ?b1
EF1E 2D 00               CMPA #0x00
EF20 2B F8 00            JNE FAIL
EF23 2A 10 0F            LDA ?b0
EF26 2D 12               CMPA #0x12
EF28 2B F8 00            JNE FAIL

                         ; Test  MUL 8-bit
                         ; w1 (b3,b2) <= b1 * b0
                ;         LDA #0x80
                ;         NOTA
                ;         STA LEDPORT ; Output to LED port
                ;         LDA #0x02   ; 3 * 2 = 6
                ;         STA ?b0
                ;         LDA #0x03
                ;         STA ?b1
                ;         JSR ?mul8_w1_b1_b0
                ;         LDA ?b3
                ;         CMPA #0x00
                ;         JNE FAIL
                ;         LDA ?b2
                ;         CMPA #0x06
                ;         JNE FAIL

EF2B 30 81               LDA #0x81
EF2D 36                  NOTA
EF2E 31 C0 00            STA LEDPORT ; Output to LED port
EF31 30 FF               LDA #0xFF   ; 255 * 255 = 65025 (0xFF * 0xFF = 0xFE01)
EF33 31 10 0F            STA ?b0
EF36 31 10 0E            STA ?b1
EF39 06 EF AD            JSR ?mul8_w1_b1_b0
EF3C 2A 10 0C            LDA ?b3
EF3F 2D FE               CMPA #0xFE
EF41 2B F8 00            JNE FAIL
EF44 2A 10 0D            LDA ?b2
EF47 2D 01               CMPA #0x01
EF49 2B F8 00            JNE FAIL

                ;         LDA #0x82
                ;         NOTA
                ;         STA LEDPORT ; Output to LED port
                ;         LDA #0xAB   ; 171 * 205 = 35055 (0xAB * 0xCD = 0x88EF)
                ;         STA ?b0
                ;         LDA #0xCD
                ;         STA ?b1
                ;         JSR ?mul8_w1_b1_b0
                ;         LDA ?b3
                ;         CMPA #0x88
                ;         JNE FAIL
                ;         LDA ?b2
                ;         CMPA #0xEF
                ;         JNE FAIL

                ;         LDA #0x83
                ;         NOTA
                ;         STA LEDPORT ; Output to LED port
                ;         LDA #0x00   ; 0 * 0 = 0 (0x00 * 0x00 = 0x0000)
                ;         STA ?b0
                ;         STA ?b1
                ;         JSR ?mul8_w1_b1_b0
                ;         LDA ?b3
                ;         CMPA #0x00
                ;         JNE FAIL
                ;         LDA ?b2
                ;         CMPA #0x00
                ;         JNE FAIL

                         ; ---------------------
                         ; END Math Library Test
                         ; ---------------------

EF4C 32 E0 00            JMP 0xE000  ; Loop from start of diag test

                         ; ---------------------
                         ; Math library routines
                         ; ---------------------
                         ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |    ?w5      ?w4   |   ?w3     ?w2   |   ?w1     ?w0   | 16 bits
                ;         ?l3         |         ?l2       |       ?l1       |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                                  ; Addition on 16 bits  
                                  ; w0 <= w0 + w1
EF4F 2A 10 0F   ?add16_w0_w0_w1   LDA ?b0  
EF52 29 10 0D                     ADDA ?b2
EF55 31 10 0F                     STA ?b0
EF58 2A 10 0E                     LDA ?b1
EF5B 28 10 0C                     ADCA ?b3
EF5E 31 10 0E                     STA ?b1
EF61 07                           RTS

                                  ; Addition on 32 bits
                                  ; l0 <= l0 + l1
EF62 2A 10 0F   ?add32_l0_l0_l1   LDA ?b0  
EF65 29 10 0B                     ADDA ?b4
EF68 31 10 0F                     STA ?b0
EF6B 2A 10 0E                     LDA ?b1
EF6E 28 10 0A                     ADCA ?b5
EF71 31 10 0E                     STA ?b1
EF74 2A 10 0D                     LDA ?b2
EF77 28 10 09                     ADCA ?b6
EF7A 31 10 0D                     STA ?b2
EF7D 2A 10 0C                     LDA ?b3
EF80 28 10 08                     ADCA ?b7
EF83 31 10 0C                     STA ?b3
EF86 07                           RTS

                                  ; INC 32 bit
                                  ; l0 <= l0 + 1
EF87 2A 10 0F   ?inc32_l0_l0      LDA ?b0
EF8A 37                           INCA
EF8B 31 10 0F                     STA ?b0
EF8E 2B EF AC                     JNE ?inc32_0x_0x_JP
EF91 2A 10 0E                     LDA ?b1
EF94 37                           INCA
EF95 31 10 0E                     STA ?b1
EF98 2B EF AC                     JNE ?inc32_0x_0x_JP
EF9B 2A 10 0D                     LDA ?b2
EF9E 37                           INCA
EF9F 31 10 0D                     STA ?b2
EFA2 2B EF AC                     JNE ?inc32_0x_0x_JP
EFA5 2A 10 0C                     LDA ?b3
EFA8 37                           INCA
EFA9 31 10 0C                     STA ?b3
EFAC 07         ?inc32_0x_0x_JP   RTS

                                  ; MUL 8-bit
                                  ; w1 (b3,b2) <= b1 * b0
EFAD 30 00      ?mul8_w1_b1_b0    LDA #0x00   ; Only clear ?b3
EFAF 31 10 0C                     STA ?b3
EFB2 38 00 08                     LDX #0x0008 ; Loop counter (8 bits)
EFB5 15 10 0F   ?mul8_w1_b1_loop  SRL ?b0     ; Shift right ?b0 (check LSB)
EFB8 0F 09                        JRNC ?skip_add  ; Conditional relative jump if not Carry ( If LSB was 0, skip addition)
EFBA 2A 10 0C                     LDA ?b3
EFBD 29 10 0E                     ADDA ?b1    ; Add multiplicand
EFC0 31 10 0C                     STA ?b3     ; Store back
EFC3 14 10 0C   ?skip_add         RRC ?b3     ; Shift right ?b3 ?b2  C -> 7 6 5 4 3 2 1 0 -> C 
EFC6 14 10 0D                     RRC ?b2     ;                      C -> 7 6 5 4 3 2 1 0 -> C
EFC9 13                           DECXL       ; Decrement loop counter
EFCA 2B EF B5                     JNE ?mul8_w1_b1_loop
EFCD 07                           RTS

                         ; --------------------------------------------------------------------
                         ; Error routine
                         ; --------------------------------------------------------------------
                         ORG/0xF800  ; Diagnostic Error routine   
                         ;STOP        ; Stop execution
F800 32 F8 00   FAIL     JMP FAIL    ; Infinite Loop on error

                         ; --------------------------------------------------------------------
                         ; JSR and RTS Test subroutine
                         ; --------------------------------------------------------------------
                         ORG/0xFFC0
FFC0 30 11      TJSR1    LDA #0x11
FFC2 07                  RTS
                         ORG/0xFFC3
FFC3 30 22      TJSR2    LDA #0x22
FFC5 06 FF C0            JSR TJSR1
FFC8 07                  RTS
                         ORG/0xFFC9
FFC9 30 33      TJSR3    LDA #0x33
FFCB 06 FF C3            JSR TJSR2
FFCE 07                  RTS
                         ORG/0xFFCF
FFCF 30 44      TJSR4    LDA #0x44
FFD1 06 FF C9            JSR TJSR3
FFD4 07                  RTS
                         ORG/0xFFD5
FFD5 30 44      TJSR5    LDA #0x44
FFD7 06 FF CF            JSR TJSR4
FFDA 07                  RTS
                         ORG/0xFFDB
FFDB 30 55      TJSR6    LDA #0x55
FFDD 06 FF D5            JSR TJSR5
FFE0 07                  RTS
                         ORG/0xFFE1
FFE1 30 66      TJSR7    LDA #0x66
FFE3 06 FF DB            JSR TJSR6
FFE6 07                  RTS
                         ORG/0xFFE7
FFE7 30 77      TJSR8    LDA #0x77
FFE9 06 FF E1            JSR TJSR7
FFEC 07                  RTS
                         ORG/0xFFED
FFED 30 88      TJSR9    LDA #0x88
FFEF 06 FF E7            JSR TJSR8
FFF2 07                  RTS
                         ORG/0xFFF3
FFF3 30 99      TJSR10   LDA #0x99
FFF5 06 FF ED            JSR TJSR9
FFF8 07                  RTS
                         ; --------------------------------------------------------------------
                         ; Reset Vector
                         ; --------------------------------------------------------------------
                         ORG/0xFFFE  ; Set the Reset vector
FFFE E0                  DB 0xE0     ; MSB Reset Vector
FFFF 00                  DB 0x00     ; LSB Reset Vector


Symbol Table:
?b15                1000
?b14                1001
?b13                1002
?b12                1003
?b11                1004
?b10                1005
?b9                 1006
?b8                 1007
?b7                 1008
?b6                 1009
?b5                 100A
?b4                 100B
?b3                 100C
?b2                 100D
?b1                 100E
?b0                 100F
?w7                 1000
?w6                 1002
?w5                 1004
?w4                 1006
?w3                 1008
?w2                 100A
?w1                 100C
?w0                 100E
?l3                 1000
?l2                 1004
?l1                 1008
?l0                 100C
SP                  1FF0
JSH                 1FF1
JSL                 1FF2
XH                  1FF3
XL                  1FF4
EQUAL               1FFA
CARRY               1FFB
REG_A               1FFC
IPH                 1FFE
IPL                 1FFF
LEDPORT             C000
START               E000
TST01               E006
TST02               E033
TSTOP06             E060
TSTOP09             E084
TSTOP0A             E08D
TSTOP0B             E0CB
TST0B_0             E127
TST0B_1             E12A
TST0B_2             E12E
TST0B_3             E133
TST0B_4             E13A
TST0B_5             E14C
TST0B_6             E151
TST0B_7             E167
TST0B_8             E16E
TST0B_9             E170
TST0B_10            E172
TST0B_11            E187
TST0B_12            E204
TST0B_13            E207
TSTOP0D             E208
TSTOP0E             E2C2
TSTOP0F             E37C
TST0F_0             E38C
TST0F_1             E396
TST0F_2             E399
TSTOP10             E39A
TSTOP11             E41D
TSTOP12             E442
TSTOP13             E467
TSTOP14             E4FD
TSTOP15             E5D9
TSTOP29             E723
TSTOP2A             E757
TSTOP2B             E7AA
TST2C               E7C5
TST2C_1             E7EA
TST2C_2             E7F4
TST2C_3             E7FE
TST2C_4             E808
TST2C_5             E812
TST2C_6             E81C
TST2C_7             E826
TST2C_8             E830
TST2C_9             E83A
TST2C_10            E844
TSTOP2D             E845
TSTOP2E             E863
TSTOP2F             E8C1
TSTOP30             E90B
TSTOP31             E965
TSTOP33             EA2E
TSTOP34             EA6A
TSTOP35             EAAF
TSTOP36             EAE2
TSTOP37             EB0A
TSTOP38             EBA1
TSTOP39             EBCD
TSTFIBON            EC45
LOOPTST             EDCF
LOOPTST1            EDDA
LOOPTST2            EDE9
?add16_w0_w0_w1     EF4F
?add32_l0_l0_l1     EF62
?inc32_l0_l0        EF87
?inc32_0x_0x_JP     EFAC
?mul8_w1_b1_b0      EFAD
?mul8_w1_b1_loop    EFB5
?skip_add           EFC3
FAIL                F800
TJSR1               FFC0
TJSR2               FFC3
TJSR3               FFC9
TJSR4               FFCF
TJSR5               FFD5
TJSR6               FFDB
TJSR7               FFE1
TJSR8               FFE7
TJSR9               FFED
TJSR10              FFF3
Assembly complete
