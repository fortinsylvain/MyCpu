                ; -----------------------------------------------------------------
                ; Homebrew MyCPU diagnostic program
                ; Author: Sylvain Fortin
                ; Date : 13 march 2025
                ; Documentation : diag.asm is used to test the assembler
                ;                 instructions of MyCPU.
                ; Memory map of the computer
                ; 0000H - 17FFH Total RAM space
                ; 0000H - 00FFH Stack
                ; 0100H - 17EF  Free for application
                ; E000H - F000H EEPROM for application program
                ; -----------------------------------------------------------------

                ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |   ?w5      ?w4    | ?w3     ?w2     |   ?w1     ?w0   | 16 bits
                ;         ?l3         |        ?l2        |     ?l1         |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                ?b15     EQU 0x1000
                ?b14     EQU 0x1001
                ?b13     EQU 0x1002
                ?b12     EQU 0x1003
                ?b11     EQU 0x1004
                ?b10     EQU 0x1005
                ?b9      EQU 0x1006
                ?b8      EQU 0x1007
                ?b7      EQU 0x1008
                ?b6      EQU 0x1009
                ?b5      EQU 0x100A
                ?b4      EQU 0x100B
                ?b3      EQU 0x100C
                ?b2      EQU 0x100D
                ?b1      EQU 0x100E
                ?b0      EQU 0x100F

                ?w7      EQU 0x1000  ; ?b15:?b14
                ?w6      EQU 0x1002  ; ?b13:?b12
                ?w5      EQU 0x1004  ; ?b11:?b10
                ?w4      EQU 0x1006  ; ?b9:?b8
                ?w3      EQU 0x1008  ; ?b7:?b6
                ?w2      EQU 0x100A  ; ?b5:?b4
                ?w1      EQU 0x100C  ; ?b3:?b2
                ?w0      EQU 0x100E  ; ?b1:?b0

                ?l3      EQU 0x1000  ; ?b15,?b14,?b13,?b12
                ?l2      EQU 0x1004  ; ?b11,?b10,?b9,?b8
                ?l1      EQU 0x1008  ; ?b7,?b6,?b5,?b4
                ?l0      EQU 0x100C  ; ?b3,?b2,?b1,?b0

                ; RAM Reserved location
                SP       EQU 0x1FF0  ; SP      Stack Pointer 8 bit
                JSH      EQU 0x1FF1  ; JSH     Temporary storage for JSR MSB address
                JSL      EQU 0x1FF2  ; JSL          "       "     "   "  LSB    "
                XH       EQU 0x1FF3  ; X MSB   X Register MSB
                XL       EQU 0x1FF4  ; X LSB   X Register LSB
                EQUAL    EQU 0x1FFA  ; E       bit<0> Equal Status bit
                CARRY    EQU 0x1FFB  ; C       bit<0> Carry Status bit
                REG_A    EQU 0x1FFC  ; A       A Register
                IPH      EQU 0x1FFE  ; IPH	    Instruction Pointer MSB
                IPL      EQU 0x1FFF  ; IPL          "         "    LSB

                ; Peripheral
                LEDPORT  EQU 0xC000  ; PORT for the LED

                ; Program start
                         ORG/0xE000  ; EEPROM Start        
E000 30 00      START    LDA #0x00   ; Clear LED
E002 36                  NOTA
E003 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; Test Carry Status bit integrity
                         ; --------------------------------------------------------------------
E006 30 01      TST01    LDA #0x01
E008 36                  NOTA
E009 31 C0 00            STA LEDPORT ; Output to LED port
E00C 30 00               LDA #0x00
E00E 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E011 2A 1F FB            LDA CARRY   ; Read Carry Status
E014 2D 00               CMPA #0x00
E016 2B F8 00            JNE FAIL
E019 30 01               LDA #0x01
E01B 31 1F FB            STA CARRY   ; Write 1 to carry bit <0>
E01E 2A 1F FB            LDA CARRY   ; Read Carry Status
E021 2D 01               CMPA #0x01
E023 2B F8 00            JNE FAIL
E026 30 00               LDA #0x00
E028 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E02B 2A 1F FB            LDA CARRY   ; Read Carry Status
E02E 2D 00               CMPA #0x00
E030 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; Test Equal Status bit integrity
                         ; --------------------------------------------------------------------
E033 30 02      TST02    LDA #0x02
E035 36                  NOTA
E036 31 C0 00            STA LEDPORT ; Output to LED port
E039 30 00               LDA #0x00
E03B 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E03E 2A 1F FA            LDA EQUAL   ; Read Equal Status
E041 2D 00               CMPA #0x00
E043 2B F8 00            JNE FAIL
E046 30 01               LDA #0x01
E048 31 1F FA            STA EQUAL   ; Write 1 to Equal Status bit <0>
E04B 2A 1F FA            LDA EQUAL   ; Read Equal Status
E04E 2D 01               CMPA #0x01
E050 2B F8 00            JNE FAIL
E053 30 00               LDA #0x00
E055 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E058 2A 1F FA            LDA EQUAL   ; Read Equal Status
E05B 2D 00               CMPA #0x00
E05D 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.06 JSR    Jump to SubRoutine
                         ; --------------------------------------------------------------------
E060 30 06      TSTOP06  LDA #0x06
E062 36                  NOTA
E063 31 C0 00            STA LEDPORT ; Output to LED port
E066 06 FF C0            JSR TJSR1   ; 1 layer
E069 06 FF C3            JSR TJSR2   ; 2
E06C 06 FF C9            JSR TJSR3   ; 3
E06F 06 FF CF            JSR TJSR4   ; 4
E072 06 FF D5            JSR TJSR5   ; 5
E075 06 FF DB            JSR TJSR6   ; 6
E078 06 FF E1            JSR TJSR7   ; 7
E07B 06 FF E7            JSR TJSR8   ; 8
E07E 06 FF ED            JSR TJSR9   ; 9
E081 06 FF F3            JSR TJSR10  ; 10
                         ; --------------------------------------------------------------------
                         ; OP.07 RTS    ReTurn from Subroutine
                         ; Tested in OP.06 JSR
                         ; --------------------------------------------------------------------
                         ;LDA #07H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.08 STOP
                         ; STOP EXECUTING
                         ; Cannot test here it will stop execution...
                         ; A diagnostic test failure is expected to call this instruction ending 
                         ; program exectution.
                         ; --------------------------------------------------------------------
                         ;LDA #08H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ;STOP
                         ; --------------------------------------------------------------------
                         ; OP.09 NOP   NO OPERATION
                         ; --------------------------------------------------------------------
E084 30 09      TSTOP09  LDA #0x09
E086 36                  NOTA
E087 31 C0 00            STA LEDPORT ; Output to LED port
E08A 09                  NOP
E08B 09                  NOP
E08C 09                  NOP
                         ; --------------------------------------------------------------------
                         ; OP.0A LDA (X) Load Reg A Indexed
                         ; --------------------------------------------------------------------
E08D 30 0A      TSTOP0A  LDA #0x0A
E08F 36                  NOTA
E090 31 C0 00            STA LEDPORT ; Output to LED port
E093 30 55               LDA #0x55   ; Store some value in RAM
E095 31 01 00            STA 0x0100
E098 30 AA               LDA #0xAA
E09A 31 01 01            STA 0x0101
E09D 30 DE               LDA #0xDE
E09F 31 01 F0            STA 0x01F0
E0A2 30 CA               LDA #0xCA
E0A4 31 01 FF            STA 0x01FF
E0A7 38 01 00            LDX #0x0100 ; Verify each locations
E0AA 0A                  LDA (X)
E0AB 2D 55               CMPA #0x55
E0AD 2B F8 00            JNE FAIL    ; Jump if result not good
E0B0 38 01 01            LDX #0x0101
E0B3 0A                  LDA (X)
E0B4 2D AA               CMPA #0xAA
E0B6 2B F8 00            JNE FAIL
E0B9 38 01 F0            LDX #0x01F0
E0BC 0A                  LDA (X)
E0BD 2D DE               CMPA #0xDE
E0BF 2B F8 00            JNE FAIL
E0C2 38 01 FF            LDX #0x01FF
E0C5 0A                  LDA (X)
E0C6 2D CA               CMPA #0xCA
E0C8 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.0B STA (X) Store Reg A Indexed
                         ; --------------------------------------------------------------------
E0CB 30 0B      TSTOP0B  LDA #0x0B
E0CD 36                  NOTA
E0CE 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.0C JRA 0x** Unconditional relative jump
                         ; --------------------------------------------------------------------
                         ; Testing using hexadecimal value after the mnemonic
E0D1 30 0C               LDA #0x0C
E0D3 36                  NOTA
E0D4 31 C0 00            STA LEDPORT ; Output to LED port
E0D7 0C 00               JRA 0x00    ; Test jump foward, Execute next instruction
E0D9 0C 01               JRA 0x01    ; Skip next instruction
E0DB 09                  NOP         ; 1
E0DC 0C 02               JRA 0x02    ; Skip next 2 instructions
E0DE 09                  NOP         ; 1
E0DF 09                  NOP         ; 2
E0E0 0C 03               JRA 0x03    ; Skip next 3 instructions
E0E2 09                  NOP         ; 1 
E0E3 09                  NOP         ; 2
E0E4 09                  NOP         ; 3
E0E5 0C 05               JRA 0x05    ; Skip next 5 instructions
E0E7 09                  NOP         ; 1
E0E8 09                  NOP         ; 2
E0E9 09                  NOP         ; 3
E0EA 09                  NOP         ; 4
E0EB 09                  NOP         ; 5
E0EC 0C 10               JRA 0x10    ; Skip next 16 instructions
E0EE 09                  NOP         ; 1
E0EF 09                  NOP         ; 2
E0F0 09                  NOP         ; 3
E0F1 09                  NOP         ; 4
E0F2 09                  NOP         ; 5
E0F3 09                  NOP         ; 6
E0F4 09                  NOP         ; 7
E0F5 09                  NOP         ; 8
E0F6 09                  NOP         ; 9
E0F7 09                  NOP         ; 10
E0F8 09                  NOP         ; 11
E0F9 09                  NOP         ; 12
E0FA 09                  NOP         ; 13
E0FB 09                  NOP         ; 14
E0FC 09                  NOP         ; 15
E0FD 09                  NOP         ; 16
E0FE 0C 22               JRA 0x22    ; Skip next 34 bytes
E100 09                  NOP         ; 1
E101 09                  NOP         ; 2
E102 09                  NOP         ; 3
E103 0C 1F               JRA 0x1F   ; 4-5   Final jump to the end of thest
E105 09                  NOP         ; 6
E106 09                  NOP         ; 7
E107 09                  NOP         ; 8
E108 09                  NOP         ; 9
E109 09                  NOP         ; 10
E10A 09                  NOP         ; 11
E10B 09                  NOP         ; 12
E10C 09                  NOP         ; 13
E10D 09                  NOP         ; 14
E10E 09                  NOP         ; 15
E10F 09                  NOP         ; 16
E110 09                  NOP         ; 17
E111 09                  NOP         ; 18
E112 09                  NOP         ; 19
E113 09                  NOP         ; 20
E114 09                  NOP         ; 21
E115 09                  NOP         ; 22
E116 09                  NOP         ; 23
E117 09                  NOP         ; 24
E118 09                  NOP         ; 25
E119 0C E8               JRA 0xE8    ; 26-27 Third Backward jump
E11B 09                  NOP         ; 28
E11C 09                  NOP         ; 29
E11D 09                  NOP         ; 30
E11E 09                  NOP         ; 31
E11F 09                  NOP         ; 32
E120 0C F7               JRA 0xF7    ; 33-34 Second Backward jump
E122 0C FC               JRA 0xFC    ; First Backward jump
E124 09                  NOP         ; Arrival of the last jump to end the test
                         ; Testing using symbolic address after the mnemonic
E125 0C 00               JRA TST0B_0 ; Test jump foward, Execute next instruction
E127 0C 01      TST0B_0  JRA TST0B_1 ; Skip next instruction
E129 09                  NOP         ; 1
E12A 0C 02      TST0B_1  JRA TST0B_2 ; Skip next 2 instructions
E12C 09                  NOP         ; 1
E12D 09                  NOP         ; 2
E12E 0C 03      TST0B_2  JRA TST0B_3 ; Skip next 3 instructions
E130 09                  NOP         ; 1 
E131 09                  NOP         ; 2
E132 09                  NOP         ; 3
E133 0C 05      TST0B_3  JRA TST0B_4 ; Skip next 5 instructions
E135 09                  NOP         ; 1
E136 09                  NOP         ; 2
E137 09                  NOP         ; 3
E138 09                  NOP         ; 4
E139 09                  NOP         ; 5
E13A 0C 10      TST0B_4  JRA TST0B_5 ; Skip next 16 instructions
E13C 09                  NOP         ; 1
E13D 09                  NOP         ; 2
E13E 09                  NOP         ; 3
E13F 09                  NOP         ; 4
E140 09                  NOP         ; 5
E141 09                  NOP         ; 6
E142 09                  NOP         ; 7
E143 09                  NOP         ; 8
E144 09                  NOP         ; 9
E145 09                  NOP         ; 10
E146 09                  NOP         ; 11
E147 09                  NOP         ; 12
E148 09                  NOP         ; 13
E149 09                  NOP         ; 14
E14A 09                  NOP         ; 15
E14B 09                  NOP         ; 16
E14C 0C 22      TST0B_5  JRA TST0B_9 ; Skip next 34 bytes
E14E 09                  NOP         ; 1
E14F 09                  NOP         ; 2
E150 09                  NOP         ; 3
E151 0C 1F      TST0B_6  JRA TST0B_10 ; 4-5   Final jump to the end of test
E153 09                  NOP         ; 6
E154 09                  NOP         ; 7
E155 09                  NOP         ; 8
E156 09                  NOP         ; 9
E157 09                  NOP         ; 10
E158 09                  NOP         ; 11
E159 09                  NOP         ; 12
E15A 09                  NOP         ; 13
E15B 09                  NOP         ; 14
E15C 09                  NOP         ; 15
E15D 09                  NOP         ; 16
E15E 09                  NOP         ; 17
E15F 09                  NOP         ; 18
E160 09                  NOP         ; 19
E161 09                  NOP         ; 20
E162 09                  NOP         ; 21
E163 09                  NOP         ; 22
E164 09                  NOP         ; 23
E165 09                  NOP         ; 24
E166 09                  NOP         ; 25
E167 0C E8      TST0B_7  JRA TST0B_6 ; 26-27 Third Backward jump
E169 09                  NOP         ; 28
E16A 09                  NOP         ; 29
E16B 09                  NOP         ; 30
E16C 09                  NOP         ; 31
E16D 09                  NOP         ; 32
E16E 0C F7      TST0B_8  JRA TST0B_7 ; 33-34 Second Backward jump
E170 0C FC      TST0B_9  JRA TST0B_8 ; First Backward jump
E172 09         TST0B_10 NOP         ; Arrival of the last jump to end the test
                ;         ; Higher range testing using symbolic address after the mnemonic
E173 09                  NOP         ; These NOP make relative jump to exercise carry on MSB address boundary
E174 09                  NOP
E175 09                  NOP
E176 09                  NOP
E177 09                  NOP
E178 09                  NOP
E179 09                  NOP
E17A 09                  NOP
E17B 09                  NOP
E17C 09                  NOP
E17D 09                  NOP
E17E 09                  NOP
E17F 09                  NOP
E180 09                  NOP
E181 09                  NOP
E182 09                  NOP
E183 0C 7F               JRA TST0B_12
E185 09                  NOP         ; 1     1     
E186 09                  NOP
                ;         NOP
                ;         NOP
E187 0C 7E      TST0B_11 JRA TST0B_13
E189 09                  NOP
E18A 09                  NOP
E18B 09                  NOP
E18C 09                  NOP
E18D 09                  NOP
E18E 09                  NOP         
E18F 09                  NOP
E190 09                  NOP
E191 09                  NOP
E192 09                  NOP
E193 09                  NOP
E194 09                  NOP         ; 16
E195 09                  NOP         ; 1     2   
E196 09                  NOP
E197 09                  NOP
E198 09                  NOP
E199 09                  NOP
E19A 09                  NOP
E19B 09                  NOP
E19C 09                  NOP
E19D 09                  NOP
E19E 09                  NOP         
E19F 09                  NOP
E1A0 09                  NOP
E1A1 09                  NOP
E1A2 09                  NOP
E1A3 09                  NOP
E1A4 09                  NOP         ; 16
E1A5 09                  NOP         ; 1   3
E1A6 09                  NOP
E1A7 09                  NOP
E1A8 09                  NOP
E1A9 09                  NOP
E1AA 09                  NOP
E1AB 09                  NOP
E1AC 09                  NOP
E1AD 09                  NOP
E1AE 09                  NOP         
E1AF 09                  NOP
E1B0 09                  NOP
E1B1 09                  NOP
E1B2 09                  NOP
E1B3 09                  NOP
E1B4 09                  NOP         ; 16
E1B5 09                  NOP         ; 1   4
E1B6 09                  NOP
E1B7 09                  NOP
E1B8 09                  NOP
E1B9 09                  NOP
E1BA 09                  NOP
E1BB 09                  NOP
E1BC 09                  NOP
E1BD 09                  NOP
E1BE 09                  NOP         
E1BF 09                  NOP
E1C0 09                  NOP
E1C1 09                  NOP
E1C2 09                  NOP
E1C3 09                  NOP
E1C4 09                  NOP         ; 16
E1C5 09                  NOP         ; 1   5
E1C6 09                  NOP
E1C7 09                  NOP
E1C8 09                  NOP
E1C9 09                  NOP
E1CA 09                  NOP
E1CB 09                  NOP
E1CC 09                  NOP
E1CD 09                  NOP
E1CE 09                  NOP         
E1CF 09                  NOP
E1D0 09                  NOP
E1D1 09                  NOP
E1D2 09                  NOP
E1D3 09                  NOP
E1D4 09                  NOP         ; 16
E1D5 09                  NOP         ; 1   5
E1D6 09                  NOP
E1D7 09                  NOP
E1D8 09                  NOP
E1D9 09                  NOP
E1DA 09                  NOP
E1DB 09                  NOP
E1DC 09                  NOP
E1DD 09                  NOP
E1DE 09                  NOP         
E1DF 09                  NOP
E1E0 09                  NOP
E1E1 09                  NOP
E1E2 09                  NOP
E1E3 09                  NOP
E1E4 09                  NOP         ; 16
E1E5 09                  NOP         ; 1   6
E1E6 09                  NOP
E1E7 09                  NOP
E1E8 09                  NOP
E1E9 09                  NOP
E1EA 09                  NOP
E1EB 09                  NOP
E1EC 09                  NOP
E1ED 09                  NOP
E1EE 09                  NOP         
E1EF 09                  NOP
E1F0 09                  NOP
E1F1 09                  NOP
E1F2 09                  NOP
E1F3 09                  NOP
E1F4 09                  NOP         ; 16
E1F5 09                  NOP         ; 1   7
E1F6 09                  NOP
E1F7 09                  NOP
E1F8 09                  NOP
E1F9 09                  NOP
E1FA 09                  NOP
E1FB 09                  NOP
E1FC 09                  NOP
E1FD 09                  NOP
E1FE 09                  NOP         
E1FF 09                  NOP
E200 09                  NOP
E201 09                  NOP
E202 09                  NOP
E203 09                  NOP
                ;         NOP        ; 16
E204 09         TST0B_12 NOP
E205 0C 80               JRA TST0B_11
E207 09         TST0B_13 NOP         ; final foward jump destination     
                         ; --------------------------------------------------------------------
                         ; OP.0D SRLA Shift Right Logical on Reg A
                         ;            0 -> b7 b6 b5 b4 b3 b2 b1 b0 -> C
                         ; --------------------------------------------------------------------
E208 30 0D      TSTOP0D  LDA #0x0D
E20A 36                  NOTA
E20B 31 C0 00            STA LEDPORT ; Output to LED port
E20E 30 A5               LDA #0xA5
E210 0D                  SRLA
E211 2D 52               CMPA #0x52
E213 2B F8 00            JNE FAIL    ; Jump if result not good
E216 2A 1F FB            LDA CARRY   ; Read the Carry Status
E219 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E21B 2B F8 00            JNE FAIL    ; Error if different
E21E 30 A5               LDA #0xA5
E220 0D                  SRLA
E221 0D                  SRLA
E222 2D 29               CMPA #0x29
E224 2B F8 00            JNE FAIL    ; Jump if result not good
E227 2A 1F FB            LDA CARRY   ; Read the Carry Status
E22A 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E22C 2B F8 00            JNE FAIL    ; Error if different
E22F 30 A5               LDA #0xA5
E231 0D                  SRLA
E232 0D                  SRLA
E233 0D                  SRLA
E234 2D 14               CMPA #0x14
E236 2B F8 00            JNE FAIL    ; Jump if result not good
E239 2A 1F FB            LDA CARRY   ; Read the Carry Status
E23C 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E23E 2B F8 00            JNE FAIL    ; Error if different
E241 30 A5               LDA #0xA5
E243 0D                  SRLA
E244 0D                  SRLA
E245 0D                  SRLA
E246 0D                  SRLA
E247 2D 0A               CMPA #0x0A
E249 2B F8 00            JNE FAIL    ; Jump if result not good
E24C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E24F 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E251 2B F8 00            JNE FAIL    ; Error if different
E254 30 A5               LDA #0xA5
E256 0D                  SRLA
E257 0D                  SRLA
E258 0D                  SRLA
E259 0D                  SRLA
E25A 0D                  SRLA
E25B 2D 05               CMPA #0x05
E25D 2B F8 00            JNE FAIL    ; Jump if result not good
E260 2A 1F FB            LDA CARRY   ; Read the Carry Status
E263 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E265 2B F8 00            JNE FAIL    ; Error if different
E268 30 A5               LDA #0xA5
E26A 0D                  SRLA
E26B 0D                  SRLA
E26C 0D                  SRLA
E26D 0D                  SRLA
E26E 0D                  SRLA
E26F 0D                  SRLA
E270 2D 02               CMPA #0x02
E272 2B F8 00            JNE FAIL    ; Jump if result not good
E275 2A 1F FB            LDA CARRY   ; Read the Carry Status
E278 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E27A 2B F8 00            JNE FAIL    ; Error if different
E27D 30 A5               LDA #0xA5
E27F 0D                  SRLA
E280 0D                  SRLA
E281 0D                  SRLA
E282 0D                  SRLA
E283 0D                  SRLA
E284 0D                  SRLA
E285 0D                  SRLA
E286 2D 01               CMPA #0x01
E288 2B F8 00            JNE FAIL    ; Jump if result not good
E28B 2A 1F FB            LDA CARRY   ; Read the Carry Status
E28E 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E290 2B F8 00            JNE FAIL    ; Error if different
E293 30 A5               LDA #0xA5
E295 0D                  SRLA
E296 0D                  SRLA
E297 0D                  SRLA
E298 0D                  SRLA
E299 0D                  SRLA
E29A 0D                  SRLA
E29B 0D                  SRLA
E29C 0D                  SRLA
E29D 2D 00               CMPA #0x00
E29F 2B F8 00            JNE FAIL    ; Jump if result not good
E2A2 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2A5 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2A7 2B F8 00            JNE FAIL    ; Error if different
E2AA 30 A5               LDA #0xA5
E2AC 0D                  SRLA
E2AD 0D                  SRLA
E2AE 0D                  SRLA
E2AF 0D                  SRLA
E2B0 0D                  SRLA
E2B1 0D                  SRLA
E2B2 0D                  SRLA
E2B3 0D                  SRLA
E2B4 0D                  SRLA
E2B5 2D 00               CMPA #0x00
E2B7 2B F8 00            JNE FAIL    ; Jump if result not good
E2BA 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2BD 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E2BF 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.0E SLLA Shift Left Logical on Reg A
                         ;       SLAA Shift Left Arithmetic on Reg A (SLAA same as SLLA)
                         ;            C <- b7 b6 b5 b4 b3 b2 b1 b0 <- 0
                         ; --------------------------------------------------------------------
E2C2 30 0E      TSTOP0E  LDA #0x0E
E2C4 36                  NOTA
E2C5 31 C0 00            STA LEDPORT ; Output to LED port
E2C8 30 A5               LDA #0xA5
E2CA 0E                  SLLA
E2CB 2D 4A               CMPA #0x4A
E2CD 2B F8 00            JNE FAIL    ; Jump if result not good
E2D0 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2D3 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2D5 2B F8 00            JNE FAIL    ; Error if different
E2D8 30 A5               LDA #0xA5
E2DA 0E                  SLLA
E2DB 0E                  SLLA
E2DC 2D 94               CMPA #0x94
E2DE 2B F8 00            JNE FAIL    ; Jump if result not good
E2E1 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2E4 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E2E6 2B F8 00            JNE FAIL    ; Error if different
E2E9 30 A5               LDA #0xA5
E2EB 0E                  SLLA
E2EC 0E                  SLLA
E2ED 0E                  SLLA
E2EE 2D 28               CMPA #0x28
E2F0 2B F8 00            JNE FAIL    ; Jump if result not good
E2F3 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2F6 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2F8 2B F8 00            JNE FAIL    ; Error if different
E2FB 30 A5               LDA #0xA5
E2FD 0E                  SLLA
E2FE 0E                  SLLA
E2FF 0E                  SLLA
E300 0E                  SLLA
E301 2D 50               CMPA #0x50
E303 2B F8 00            JNE FAIL    ; Jump if result not good
E306 2A 1F FB            LDA CARRY   ; Read the Carry Status
E309 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E30B 2B F8 00            JNE FAIL    ; Error if different
E30E 30 A5               LDA #0xA5
E310 0E                  SLLA
E311 0E                  SLLA
E312 0E                  SLLA
E313 0E                  SLLA
E314 0E                  SLLA
E315 2D A0               CMPA #0xA0
E317 2B F8 00            JNE FAIL    ; Jump if result not good
E31A 2A 1F FB            LDA CARRY   ; Read the Carry Status
E31D 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E31F 2B F8 00            JNE FAIL    ; Error if different
E322 30 A5               LDA #0xA5
E324 0E                  SLLA
E325 0E                  SLLA
E326 0E                  SLLA
E327 0E                  SLLA
E328 0E                  SLLA
E329 0E                  SLAA
E32A 2D 40               CMPA #0x40
E32C 2B F8 00            JNE FAIL    ; Jump if result not good
E32F 2A 1F FB            LDA CARRY   ; Read the Carry Status
E332 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E334 2B F8 00            JNE FAIL    ; Error if different
E337 30 A5               LDA #0xA5
E339 0E                  SLLA
E33A 0E                  SLLA
E33B 0E                  SLLA
E33C 0E                  SLLA
E33D 0E                  SLLA
E33E 0E                  SLAA
E33F 0E                  SLAA
E340 2D 80               CMPA #0x80
E342 2B F8 00            JNE FAIL    ; Jump if result not good
E345 2A 1F FB            LDA CARRY   ; Read the Carry Status
E348 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E34A 2B F8 00            JNE FAIL    ; Error if different
E34D 30 A5               LDA #0xA5
E34F 0E                  SLLA
E350 0E                  SLLA
E351 0E                  SLLA
E352 0E                  SLLA
E353 0E                  SLLA
E354 0E                  SLAA
E355 0E                  SLAA
E356 0E                  SLAA
E357 2D 00               CMPA #0x00
E359 2B F8 00            JNE FAIL    ; Jump if result not good
E35C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E35F 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E361 2B F8 00            JNE FAIL    ; Error if different
E364 30 A5               LDA #0xA5
E366 0E                  SLLA
E367 0E                  SLLA
E368 0E                  SLLA
E369 0E                  SLLA
E36A 0E                  SLLA
E36B 0E                  SLAA
E36C 0E                  SLAA
E36D 0E                  SLAA
E36E 0E                  SLAA
E36F 2D 00               CMPA #0x00
E371 2B F8 00            JNE FAIL    ; Jump if result not good
E374 2A 1F FB            LDA CARRY   ; Read the Carry Status
E377 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E379 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.29 ADDA 0x****  
                         ; ADD A WITH BYTE AT ADDRESS, C UPDATE
                         ; --------------------------------------------------------------------
E37C 30 29      TSTOP29  LDA #0x29
E37E 36                  NOTA
E37F 31 C0 00            STA LEDPORT ; Output to LED port
E382 30 5F               LDA #0x5F   ; Store a value in RAM
E384 31 01 23            STA 0x0123   
E387 30 63               LDA #0x63
E389 29 01 23            ADDA 0x0123 ; Add to A the byte at address location
E38C 2D C2               CMPA #0xC2  ; Check the sum
E38E 2B F8 00            JNE FAIL    ; Jump if result not good
E391 2A 1F FB            LDA CARRY   ; Read the Carry Status
E394 2D 00               CMPA #0x00  ; No carry expected then C should be '0'
E396 2B F8 00            JNE FAIL    ; Error if carry is set

E399 30 AC               LDA #0xAC   ; Store another value in RAM
E39B 31 10 56            STA 0x1056   
E39E 30 D9               LDA #0xD9
E3A0 29 10 56            ADDA 0x1056 ; Add to A the byte at address location
E3A3 2D 85               CMPA #0x85  ; Check the sum LSB
E3A5 2B F8 00            JNE FAIL    ; Jump if result not as expected
E3A8 2A 1F FB            LDA CARRY   ; Read the Carry Status
E3AB 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E3AD 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.2A LDA 0x****  
                         ; LOAD A WITH BYTE AT ADDRESS Test LDA #0x** instruction 
                         ; --------------------------------------------------------------------
E3B0 30 2A      TSTOP2A  LDA #0x2A
E3B2 36                  NOTA
E3B3 31 C0 00            STA LEDPORT ; Output to LED port
E3B6 30 AA               LDA #0xAA   ; Load immediate in register A
E3B8 2D AA               CMPA #0xAA
E3BA 2B F8 00            JNE FAIL
E3BD 30 01               LDA #0x01
E3BF 2D 01               CMPA #0x01
E3C1 2B F8 00            JNE FAIL
E3C4 30 02               LDA #0x02
E3C6 2D 02               CMPA #0x02
E3C8 2B F8 00            JNE FAIL
E3CB 30 04               LDA #0x04
E3CD 2D 04               CMPA #0x04
E3CF 2B F8 00            JNE FAIL
E3D2 30 08               LDA #0x08
E3D4 2D 08               CMPA #0x08
E3D6 2B F8 00            JNE FAIL
E3D9 30 10               LDA #0x10
E3DB 2D 10               CMPA #0x10
E3DD 2B F8 00            JNE FAIL
E3E0 30 20               LDA #0x20
E3E2 2D 20               CMPA #0x20
E3E4 2B F8 00            JNE FAIL
E3E7 30 40               LDA #0x40
E3E9 2D 40               CMPA #0x40
E3EB 2B F8 00            JNE FAIL
E3EE 30 80               LDA #0x80
E3F0 2D 80               CMPA #0x80
E3F2 2B F8 00            JNE FAIL
E3F5 30 55               LDA #0x55
E3F7 2D 55               CMPA #0x55
E3F9 2B F8 00            JNE FAIL
E3FC 30 FF               LDA #0xFF
E3FE 2D FF               CMPA #0xFF
E400 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2B JNE 0x****  
                         ; JUMP IF E=0
                         ; Only a partial validation because i do not have symbolic address
                         ; processing in the assembler program.
                         ; --------------------------------------------------------------------
E403 30 2B      TSTOP2B  LDA #0x2B
E405 36                  NOTA
E406 31 C0 00            STA LEDPORT ; Output to LED port
E409 30 6D               LDA #0x6D   ; Load a value in A
E40B 2D 6D               CMPA #0x6D  ; Compare with the same value
E40D 2B F8 00            JNE FAIL    ; Error if values are different
E410 30 10               LDA #0x10
E412 2D 10               CMPA #0x10
E414 2B F8 00            JNE FAIL
E417 30 01               LDA #0x01
E419 2D 01               CMPA #0x01
E41B 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2C JEQ 0x****
                         ; JUMP IF E=1
                         ; --------------------------------------------------------------------
E41E 30 2C      TST2C    LDA #0x2C
E420 36                  NOTA
E421 31 C0 00            STA LEDPORT ; Output to LED port
E424 30 7A               LDA #0x7A   ; Load a value in A
E426 2D 28               CMPA #0x28  ; Compare with a different value
E428 2C F8 00            JEQ FAIL    ; If appear identical then it's and error
E42B 30 FE               LDA #0xFE   ; Again with adifference 
E42D 2D FF               CMPA #0xFF
E42F 2C F8 00            JEQ FAIL 
E432 30 01               LDA #0x01   ; Another with difference
E434 2D 10               CMPA #0x10
E436 2C F8 00            JEQ FAIL
E439 30 AB               LDA #0xAB   ; Now compare when values are identical
E43B 2D AB               CMPA #0xAB
E43D 2C E4 43            JEQ TST2C_1 ; Testing if equal?
E440 32 F8 00            JMP FAIL    ; Result say both are not equal then it's a failure
E443 30 00      TST2C_1  LDA #0x00   ; Result say the values are identical so we are passing
E445 2D 00               CMPA #0x00
E447 2C E4 4D            JEQ TST2C_2 ; Testing if equal?
E44A 32 F8 00            JMP FAIL    ; if different then it's a failure
E44D 30 01      TST2C_2  LDA #0x01
E44F 2D 01               CMPA #0x01
E451 2C E4 57            JEQ TST2C_3 ; Testing if equal?
E454 32 F8 00            JMP FAIL    ; if different then it's a failure
E457 30 02      TST2C_3  LDA #0x02
E459 2D 02               CMPA #0x02
E45B 2C E4 61            JEQ TST2C_4 ; Testing if equal?
E45E 32 F8 00            JMP FAIL    ; if different then it's a failure
E461 30 04      TST2C_4  LDA #0x04
E463 2D 04               CMPA #0x04
E465 2C E4 6B            JEQ TST2C_5 ; Testing if equal?
E468 32 F8 00            JMP FAIL    ; if different then it's a failure
E46B 30 08      TST2C_5  LDA #0x08
E46D 2D 08               CMPA #0x08
E46F 2C E4 75            JEQ TST2C_6 ; Testing if equal?
E472 32 F8 00            JMP FAIL    ; if different then it's a failure
E475 30 10      TST2C_6  LDA #0x10
E477 2D 10               CMPA #0x10
E479 2C E4 7F            JEQ TST2C_7 ; Testing if equal?
E47C 32 F8 00            JMP FAIL    ; if different then it's a failure
E47F 30 20      TST2C_7  LDA #0x20
E481 2D 20               CMPA #0x20
E483 2C E4 89            JEQ TST2C_8 ; Testing if equal?
E486 32 F8 00            JMP FAIL    ; if different then it's a failure         
E489 30 40      TST2C_8  LDA #0x40
E48B 2D 40               CMPA #0x40
E48D 2C E4 93            JEQ TST2C_9 ; Testing if equal?
E490 32 F8 00            JMP FAIL    ; if different then it's a failure         
E493 30 80      TST2C_9  LDA #0x80
E495 2D 80               CMPA #0x80
E497 2C E4 9D            JEQ TST2C_10 ; Testing if equal?
E49A 32 F8 00            JMP FAIL    ; if different then it's a failure         
E49D 09         TST2C_10 NOP
                         ; --------------------------------------------------------------------
                         ; OP.2D CMPA #0x**
                         ; COMPARE A WITH IMMEDIATE VALUE    EQUAL STATUS BIT (E) UPDATED
                         ; --------------------------------------------------------------------
E49E 30 2D      TSTOP2D  LDA #0x2D
E4A0 36                  NOTA
E4A1 31 C0 00            STA LEDPORT ; Output to LED port
E4A4 30 12               LDA #0x12   ; Load a value in A
E4A6 2D 12               CMPA #0x12  ; Compare with identical value
E4A8 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS 
E4AB 2D 01               CMPA #0x01  ; Verify bit<0> E = '1' and all others bits <7:1> are '0'    
E4AD 2B F8 00            JNE FAIL    ; If different then it's and error
E4B0 30 AA               LDA #0xAA
E4B2 2D 55               CMPA #0x55  ; Compare with a different value
E4B4 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS
E4B7 2D 00               CMPA #0x00  ; Verify bit<0> E = '0' and all others bits <7:1> are '0'    
E4B9 2B F8 00            JNE FAIL    ; If different then it's and error
                         ; --------------------------------------------------------------------
                         ; OP.2E ADCA #0x**
                         ; REG A = REG A + IMMEDIATE BYTE + CARRY (C)   
                         ; CARRY STATUS (C) IS UPDATED
                         ; --------------------------------------------------------------------
E4BC 30 2E      TSTOP2E  LDA #0x2E
E4BE 36                  NOTA
E4BF 31 C0 00            STA LEDPORT ; Output to LED port
E4C2 30 00               LDA #0x00   ; Clear CARRY (C)
E4C4 31 1F FB            STA CARRY      
E4C7 30 45               LDA #0x45
E4C9 2E 5B               ADCA #0x5B
E4CB 2D A0               CMPA #0xA0  ; Verify summ
E4CD 2B F8 00            JNE FAIL
E4D0 2A 1F FB            LDA CARRY   ; Check carry
E4D3 2D 00               CMPA #0x00  ; Should be clear
E4D5 2B F8 00            JNE FAIL

E4D8 30 01               LDA #0x01   ; Set CARRY (C)
E4DA 31 1F FB            STA CARRY
E4DD 30 56               LDA #0x56
E4DF 2E 6D               ADCA #0x6D
E4E1 2D C4               CMPA #0xC4   ; Verify summ
E4E3 2B F8 00            JNE FAIL
E4E6 2A 1F FB            LDA CARRY   ; Check carry
E4E9 2D 00               CMPA #0x00  ; Should be clear
E4EB 2B F8 00            JNE FAIL

E4EE 30 00               LDA #0x00   ; Clear CARRY (C)
E4F0 31 1F FB            STA CARRY
E4F3 30 7F               LDA #0x7F
E4F5 2E DE               ADCA #0xDE
E4F7 2D 5D               CMPA #0x5D  ; Verify summ
E4F9 2B F8 00            JNE FAIL
E4FC 2A 1F FB            LDA CARRY   ; Check carry
E4FF 2D 01               CMPA #0x01  ; Should be set
E501 2B F8 00            JNE FAIL

E504 30 01               LDA #0x01H  ; Set CARRY (C)
E506 31 1F FB            STA CARRY
E509 30 FF               LDA #0xFF
E50B 2E FF               ADCA #0xFF
E50D 2D FF               CMPA #0xFF  ; Verify summ
E50F 2B F8 00            JNE FAIL
E512 2A 1F FB            LDA CARRY   ; Check carry
E515 2D 01               CMPA #0x01  ; Should be set
E517 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2F ADDA #0x**
                         ; ACCA+M>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
E51A 30 2F      TSTOP2F  LDA #0x2F
E51C 36                  NOTA
E51D 31 C0 00            STA LEDPORT ; Output to LED port
E520 30 23               LDA #0x23
E522 2F 45               ADDA #0x45
E524 2D 68               CMPA #0x68
E526 2B F8 00            JNE FAIL
E529 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E52C 2D 00               CMPA #0x00  ; Expecting C=0
E52E 2B F8 00            JNE FAIL
E531 30 8A               LDA #0x8A
E533 2F BD               ADDA #0xBD
E535 2D 47               CMPA #0x47   
E537 2B F8 00            JNE FAIL
E53A 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E53D 2D 01               CMPA #0x01  ; Expecting C=1
E53F 2B F8 00            JNE FAIL
E542 30 01               LDA #0x01
E544 2F 02               ADDA #0x02
E546 2D 03               CMPA #0x03
E548 2B F8 00            JNE FAIL
E54B 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E54E 2D 00               CMPA #0x00  ; Expecting C=0
E550 2B F8 00            JNE FAIL
E553 30 FF               LDA #0xFF
E555 2F FF               ADDA #0xFF
E557 2D FE               CMPA #0xFE
E559 2B F8 00            JNE FAIL
E55C 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E55F 2D 01               CMPA #0x01   ; Expecting C=1
E561 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.30 LDA #0x**  
                         ; LOAD IMMEDIATE VALUE IN REGISTER A
                         ; --------------------------------------------------------------------
E564 30 30      TSTOP30  LDA #0x30
E566 36                  NOTA
E567 31 C0 00            STA LEDPORT ; Output to LED port
E56A 30 00               LDA #0x00
E56C 2D 00               CMPA #0x00
E56E 2B F8 00            JNE FAIL
E571 30 01               LDA #0x01
E573 2D 01               CMPA #0x01
E575 2B F8 00            JNE FAIL
E578 30 02               LDA #0x02
E57A 2D 02               CMPA #0x02
E57C 2B F8 00            JNE FAIL
E57F 30 04               LDA #0x04
E581 2D 04               CMPA #0x04
E583 2B F8 00            JNE FAIL
E586 30 08               LDA #0x08
E588 2D 08               CMPA #0x08
E58A 2B F8 00            JNE FAIL
E58D 30 10               LDA #0x10
E58F 2D 10               CMPA #0x10
E591 2B F8 00            JNE FAIL
E594 30 20               LDA #0x20
E596 2D 20               CMPA #0x20
E598 2B F8 00            JNE FAIL
E59B 30 40               LDA #0x40
E59D 2D 40               CMPA #0x40
E59F 2B F8 00            JNE FAIL
E5A2 30 80               LDA #0x80
E5A4 2D 80               CMPA #0x80
E5A6 2B F8 00            JNE FAIL
E5A9 30 55               LDA #0x55
E5AB 2D 55               CMPA #0x55
E5AD 2B F8 00            JNE FAIL
E5B0 30 AA               LDA #0xAA
E5B2 2D AA               CMPA #0xAA
E5B4 2B F8 00            JNE FAIL
E5B7 30 FF               LDA #0xFF
E5B9 2D FF               CMPA #0xFF
E5BB 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.31 STA 0x**** 
                         ; STORE REG.A TO ADDRESSE
                         ; --------------------------------------------------------------------
E5BE 30 31      TSTOP31  LDA #0x31
E5C0 36                  NOTA
E5C1 31 C0 00            STA LEDPORT ; Output to LED port
E5C4 30 12               LDA #0x12   ; Write to RAM
E5C6 31 00 00            STA 0x0000
E5C9 30 23               LDA #0x23
E5CB 31 00 01            STA 0x0001
E5CE 30 34               LDA #0x34
E5D0 31 00 02            STA 0x0002
E5D3 30 45               LDA #0x45
E5D5 31 00 04            STA 0x0004
E5D8 30 56               LDA #0x56
E5DA 31 00 08            STA 0x0008
E5DD 30 67               LDA #0x67
E5DF 31 00 10            STA 0x0010
E5E2 30 78               LDA #0x78
E5E4 31 00 20            STA 0x0020
E5E7 30 89               LDA #0x89
E5E9 31 00 40            STA 0x0040
E5EC 30 AB               LDA #0xAB
E5EE 31 00 80            STA 0x0080
E5F1 30 BC               LDA #0xBC
E5F3 31 01 00            STA 0x0100
E5F6 30 CD               LDA #0xCD
E5F8 31 02 00            STA 0x0200
E5FB 30 DE               LDA #0xDE
E5FD 31 04 00            STA 0x0400
E600 30 22               LDA #0x22
E602 31 08 00            STA 0x0800
E605 30 33               LDA #0x33
E607 31 10 00            STA 0x1000
E60A 30 44               LDA #0x44
E60C 31 17 00            STA 0x1700
E60F 2A 00 00            LDA 0x0000  ; Read from RAM and compare
E612 2D 12               CMPA #0x12
E614 2B F8 00            JNE FAIL
E617 2A 00 01            LDA 0x0001
E61A 2D 23               CMPA #0x23
E61C 2B F8 00            JNE FAIL
E61F 2A 00 02            LDA 0x0002
E622 2D 34               CMPA #0x34
E624 2B F8 00            JNE FAIL
E627 2A 00 04            LDA 0x0004
E62A 2D 45               CMPA #0x45
E62C 2B F8 00            JNE FAIL
E62F 2A 00 08            LDA 0x0008
E632 2D 56               CMPA #0x56
E634 2B F8 00            JNE FAIL
E637 2A 00 10            LDA 0x0010
E63A 2D 67               CMPA #0x67
E63C 2B F8 00            JNE FAIL
E63F 2A 00 20            LDA 0x0020
E642 2D 78               CMPA #0x78
E644 2B F8 00            JNE FAIL
E647 2A 00 40            LDA 0x0040
E64A 2D 89               CMPA #0x89
E64C 2B F8 00            JNE FAIL
E64F 2A 00 80            LDA 0x0080
E652 2D AB               CMPA #0xAB
E654 2B F8 00            JNE FAIL
E657 2A 01 00            LDA 0x0100
E65A 2D BC               CMPA #0xBC
E65C 2B F8 00            JNE FAIL
E65F 2A 02 00            LDA 0x0200
E662 2D CD               CMPA #0xCD
E664 2B F8 00            JNE FAIL
E667 2A 04 00            LDA 0x0400
E66A 2D DE               CMPA #0xDE
E66C 2B F8 00            JNE FAIL
E66F 2A 08 00            LDA 0x0800
E672 2D 22               CMPA #0x22
E674 2B F8 00            JNE FAIL
E677 2A 10 00            LDA 0x1000
E67A 2D 33               CMPA #0x33
E67C 2B F8 00            JNE FAIL
E67F 2A 17 00            LDA 0x1700
E682 2D 44               CMPA #0x44
E684 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.32 JMP 0x**** 
                         ; JUMP INCONDITIONAL TO ADDRESS
                         ; --------------------------------------------------------------------
                         ;LDA #0x32
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.33 ANDA #0x**  REGISTER A AND LOGICAL IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E687 30 33      TSTOP33  LDA #0x33
E689 36                  NOTA
E68A 31 C0 00            STA LEDPORT ; Output to LED port
E68D 30 FF               LDA #0xFF
E68F 33 52               ANDA #0x52
E691 2D 52               CMPA #0x52
E693 2B F8 00            JNE FAIL
E696 30 E7               LDA #0xE7
E698 33 3C               ANDA #0x3C
E69A 2D 24               CMPA #0x24
E69C 2B F8 00            JNE FAIL
E69F 30 00               LDA #0x00
E6A1 33 00               ANDA #0x00
E6A3 2D 00               CMPA #0x00
E6A5 2B F8 00            JNE FAIL
E6A8 30 FF               LDA #0xFF
E6AA 33 FF               ANDA #0xFF
E6AC 2D FF               CMPA #0xFF
E6AE 2B F8 00            JNE FAIL
E6B1 30 FF               LDA #0xFF
E6B3 33 55               ANDA #0x55
E6B5 2D 55               CMPA #0x55
E6B7 2B F8 00            JNE FAIL
E6BA 30 FF               LDA #0xFF
E6BC 33 00               ANDA #0x00
E6BE 2D 00               CMPA #0x00
E6C0 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.34 ORA #0x**   LOGICAL OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E6C3 30 34      TSTOP34  LDA #0x34
E6C5 36                  NOTA
E6C6 31 C0 00            STA LEDPORT ; Output to LED port
E6C9 30 FF               LDA #0xFF
E6CB 34 FF               ORA #0xFF
E6CD 2D FF               CMPA #0xFF
E6CF 2B F8 00            JNE FAIL
E6D2 30 00               LDA #0x00
E6D4 34 00               ORA #0x00
E6D6 2D 00               CMPA #0x00
E6D8 2B F8 00            JNE FAIL
E6DB 30 25               LDA #0x25
E6DD 34 D3               ORA #0xD3
E6DF 2D F7               CMPA #0xF7
E6E1 2B F8 00            JNE FAIL
E6E4 30 00               LDA #0x00
E6E6 34 FF               ORA #0xFF
E6E8 2D FF               CMPA #0xFF
E6EA 2B F8 00            JNE FAIL
E6ED 30 FF               LDA #0xFF
E6EF 34 00               ORA #0x00
E6F1 2D FF               CMPA #0xFF
E6F3 2B F8 00            JNE FAIL
E6F6 30 14               LDA #0x14
E6F8 34 C1               ORA #0xC1
E6FA 2D D5               CMPA #0xD5
E6FC 2B F8 00            JNE FAIL
E6FF 30 AA               LDA #0xAA
E701 34 55               ORA #0x55
E703 2D FF               CMPA #0xFF
E705 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.35 XORA #0x**  EXCLUSIVE OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E708 30 35      TSTOP35  LDA #0x35
E70A 36                  NOTA
E70B 31 C0 00            STA LEDPORT ; Output to LED port
E70E 30 00               LDA #0x00
E710 35 00               XORA #0x00
E712 2D 00               CMPA #0x00
E714 2B F8 00            JNE FAIL
E717 30 00               LDA #0x00
E719 35 FF               XORA #0xFF
E71B 2D FF               CMPA #0xFF
E71D 2B F8 00            JNE FAIL
E720 30 FF               LDA #0xFF
E722 35 FF               XORA #0xFF
E724 2D 00               CMPA #0x00
E726 2B F8 00            JNE FAIL
E729 30 FF               LDA #0xFF
E72B 35 55               XORA #0x55
E72D 2D AA               CMPA #0xAA
E72F 2B F8 00            JNE FAIL
E732 30 CE               LDA #0xCE
E734 35 5A               XORA #0x5A
E736 2D 94               CMPA #0x94
E738 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.36 NOTA  LOGIC NOT ON REG A
                         ; --------------------------------------------------------------------
E73B 30 36      TSTOP36  LDA #0x36
E73D 36                  NOTA
E73E 31 C0 00            STA LEDPORT ; Output to LED port
E741 30 00               LDA #0x00
E743 36                  NOTA
E744 2D FF               CMPA #0xFF
E746 2B F8 00            JNE FAIL
E749 36                  NOTA
E74A 2D 00               CMPA #0x00
E74C 2B F8 00            JNE FAIL
E74F 30 55               LDA #0x55
E751 36                  NOTA
E752 2D AA               CMPA #0xAA
E754 2B F8 00            JNE FAIL
E757 36                  NOTA
E758 2D 55               CMPA #0x55
E75A 2B F8 00            JNE FAIL
E75D 36                  NOTA
E75E 2D AA               CMPA #0xAA
E760 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.37 INCA  A = A + 1  INCREMENT REGISTRE A
                         ; NO UPDATE ON C (CARRY)
                         ; --------------------------------------------------------------------
E763 30 37      TSTOP37  LDA #0x37
E765 36                  NOTA
E766 31 C0 00            STA LEDPORT ; Output to LED port
E769 30 00               LDA #0x00
E76B 37                  INCA
E76C 2D 01               CMPA #0x01
E76E 2B F8 00            JNE FAIL
E771 30 01               LDA #0x01
E773 37                  INCA
E774 2D 02               CMPA #0x02
E776 2B F8 00            JNE FAIL
E779 30 7C               LDA #0x7C
E77B 37                  INCA
E77C 37                  INCA
E77D 37                  INCA
E77E 37                  INCA
E77F 37                  INCA
E780 37                  INCA
E781 37                  INCA
E782 37                  INCA
E783 37                  INCA
E784 37                  INCA
E785 2D 86               CMPA #0x86
E787 2B F8 00            JNE FAIL
E78A 30 FE               LDA #0xFE
E78C 37                  INCA
E78D 2D FF               CMPA #0xFF
E78F 2B F8 00            JNE FAIL
E792 30 FF               LDA #0xFF
E794 37                  INCA
E795 2D 00               CMPA #0x00
E797 2B F8 00            JNE FAIL
E79A 30 FF               LDA #0xFF
E79C 37                  INCA
E79D 37                  INCA
E79E 2D 01               CMPA #0x01
E7A0 2B F8 00            JNE FAIL
E7A3 37                  INCA
E7A4 37                  INCA
E7A5 37                  INCA
E7A6 37                  INCA
E7A7 2D 05               CMPA #0x05
E7A9 2B F8 00            JNE FAIL
E7AC 37                  INCA
E7AD 37                  INCA
E7AE 37                  INCA
E7AF 37                  INCA
E7B0 37                  INCA
E7B1 37                  INCA
E7B2 37                  INCA
E7B3 37                  INCA
E7B4 2D 0D               CMPA #0x0D
E7B6 2B F8 00            JNE FAIL
E7B9 30 00               LDA #0x00   ; Test Carry is not updated
E7BB 31 1F FB            STA CARRY   ; Clear Carry 
E7BE 30 FF               LDA #0xFF
E7C0 37                  INCA
E7C1 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E7C4 2D 00               CMPA #0x00  ; Expecting C=0 and <7:1> = 0
E7C6 2B F8 00            JNE FAIL
E7C9 30 01               LDA #0x01   ; Set Carry 
E7CB 31 1F FB            STA CARRY   
E7CE 30 EB               LDA #0xEB
E7D0 37                  INCA
E7D1 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E7D4 2D 01               CMPA #0x01  ; Expecting C=1 and <7:1> = 0
E7D6 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.38  LDX #0x****   Load X Register with 16 bits immediate value
                         ; --------------------------------------------------------------------
E7D9 30 38      TSTOP38  LDA #0x38
E7DB 36                  NOTA
E7DC 31 C0 00            STA LEDPORT ; Output to LED port
E7DF 38 12 34            LDX #0x1234
E7E2 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E7E5 2D 12               CMPA #0x12
E7E7 2B F8 00            JNE FAIL
E7EA 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E7ED 2D 34               CMPA #0x34
E7EF 2B F8 00            JNE FAIL
E7F2 38 AB CD            LDX #0xABCD
E7F5 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E7F8 2D AB               CMPA #0xAB
E7FA 2B F8 00            JNE FAIL
E7FD 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E800 2D CD               CMPA #0xCD
E802 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.39  INCX   Increment Register X,  Carry Not Updated
                         ; --------------------------------------------------------------------
E805 30 39      TSTOP39  LDA #0x39
E807 36                  NOTA
E808 31 C0 00            STA LEDPORT ; Output to LED port
E80B 38 00 00            LDX #0x0000 ; Clear X register
E80E 39                  INCX        ; Increment X
E80F 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E812 2D 01               CMPA #0x01
E814 2B F8 00            JNE FAIL
E817 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E81A 2D 00               CMPA #0x00
E81C 2B F8 00            JNE FAIL
E81F 39                  INCX
E820 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E823 2D 02               CMPA #0x02
E825 2B F8 00            JNE FAIL
E828 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E82B 2D 00               CMPA #0x00
E82D 2B F8 00            JNE FAIL

E830 38 00 FF            LDX #0x00FF ; Test a carry set
E833 39                  INCX        ; Increment X
E834 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E837 2D 00               CMPA #0x00
E839 2B F8 00            JNE FAIL
E83C 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E83F 2D 01               CMPA #0x01
E841 2B F8 00            JNE FAIL
E844 39                  INCX        ; Increment X
E845 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E848 2D 01               CMPA #0x01
E84A 2B F8 00            JNE FAIL
E84D 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E850 2D 01               CMPA #0x01
E852 2B F8 00            JNE FAIL

E855 38 1E FF            LDX #0x1EFF
E858 39                  INCX        ; Increment X
E859 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E85C 2D 00               CMPA #0x00
E85E 2B F8 00            JNE FAIL
E861 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E864 2D 1F               CMPA #0x1F
E866 2B F8 00            JNE FAIL

E869 38 FF FF            LDX #0xFFFF
E86C 39                  INCX        ; Increment X
E86D 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E870 2D 00               CMPA #0x00
E872 2B F8 00            JNE FAIL
E875 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E878 2D 00               CMPA #0x00
E87A 2B F8 00            JNE FAIL

                         ; --------------------------------------------------------------------
                         ; FIBONACCI TEST
                         ; --------------------------------------------------------------------         
E87D 30 80      TSTFIBON LDA #0x80
E87F 36                  NOTA
E880 31 C0 00            STA LEDPORT ; Output to LED port
                                     ;
E883 30 00               LDA #0x00   ; Init first number with 00H
E885 31 10 00            STA 0x1000
E888 30 01               LDA #0x01   ; Init second number with 01H
E88A 31 10 01            STA 0x1001
E88D 2A 10 00            LDA 0x1000  ; Load first number in A
E890 29 10 01            ADDA 0x1001 ; Add second number to A
E893 31 10 02            STA 0x1002  ; Store the summ
E896 2D 01               CMPA #0x01  ; HEX   Decimal  Real Value (in 8 bit storage only)
E898 2B F8 00            JNE FAIL    ; x01   1        1

E89B 2A 10 01            LDA 0x1001  ; Move second number to the first number
E89E 31 10 00            STA 0x1000
E8A1 2A 10 02            LDA 0x1002  ; Move summ to the second number
E8A4 31 10 01            STA 0x1001
E8A7 2A 10 00            LDA 0x1000  ; Load first number in A
E8AA 29 10 01            ADDA 0x1001 ; Add second number to A
E8AD 31 10 02            STA 0x1002  ; Store the summ
E8B0 2D 02               CMPA #0x02  ; HEX   Decimal  Real Value
E8B2 2B F8 00            JNE FAIL    ; x02   2        2

E8B5 2A 10 01            LDA 0x1001  ; Move second number to the first number
E8B8 31 10 00            STA 0x1000
E8BB 2A 10 02            LDA 0x1002   ; Move summ to the second number
E8BE 31 10 01            STA 0x1001
E8C1 2A 10 00            LDA 0x1000  ; Load first number in A
E8C4 29 10 01            ADDA 0x1001 ; Add second number to A
E8C7 31 10 02            STA 0x1002  ; Store the summ
E8CA 2D 03               CMPA #0x03  ; HEX   Decimal  Real Value
E8CC 2B F8 00            JNE FAIL    ; x03   3        3

E8CF 2A 10 01            LDA 0x1001  ; Move second number to the first number
E8D2 31 10 00            STA 0x1000
E8D5 2A 10 02            LDA 0x1002  ; Move summ to the second number
E8D8 31 10 01            STA 0x1001
E8DB 2A 10 00            LDA 0x1000  ; Load first number in A
E8DE 29 10 01            ADDA 0x1001 ; Add second number to A
E8E1 31 10 02            STA 0x1002  ; Store the summ
E8E4 2D 05               CMPA #0x05  ; HEX   Decimal  Real Value
E8E6 2B F8 00            JNE FAIL    ; x05   5        5

E8E9 2A 10 01            LDA 0x1001  ; Move second number to the first number
E8EC 31 10 00            STA 0x1000
E8EF 2A 10 02            LDA 0x1002  ; Move summ to the second number
E8F2 31 10 01            STA 0x1001
E8F5 2A 10 00            LDA 0x1000  ; Load first number in A
E8F8 29 10 01            ADDA 0x1001 ; Add second number to A
E8FB 31 10 02            STA 0x1002  ; Store the summ
E8FE 2D 08               CMPA #0x08  ; HEX   Decimal  Real Value
E900 2B F8 00            JNE FAIL    ; x08   8        8

E903 2A 10 01            LDA 0x1001  ; Move second number to the first number
E906 31 10 00            STA 0x1000
E909 2A 10 02            LDA 0x1002  ; Move summ to the second number
E90C 31 10 01            STA 0x1001
E90F 2A 10 00            LDA 0x1000  ; Load first number in A
E912 29 10 01            ADDA 0x1001 ; Add second number to A
E915 31 10 02            STA 0x1002  ; Store the summ
E918 2D 0D               CMPA #0x0D  ; HEX   Decimal  Real Value
E91A 2B F8 00            JNE FAIL    ; x0D   13       13

E91D 2A 10 01            LDA 0x1001  ; Move second number to the first number
E920 31 10 00            STA 0x1000
E923 2A 10 02            LDA 0x1002  ; Move summ to the second number
E926 31 10 01            STA 0x1001
E929 2A 10 00            LDA 0x1000  ; Load first number in A
E92C 29 10 01            ADDA 0x1001 ; Add second number to A
E92F 31 10 02            STA 0x1002  ; Store the summ
E932 2D 15               CMPA #0x15  ; HEX   Decimal  Real Value
E934 2B F8 00            JNE FAIL    ; x15   21       21

E937 2A 10 01            LDA 0x1001  ; Move second number to the first number
E93A 31 10 00            STA 0x1000
E93D 2A 10 02            LDA 0x1002  ; Move summ to the second number
E940 31 10 01            STA 0x1001
E943 2A 10 00            LDA 0x1000  ; Load first number in A
E946 29 10 01            ADDA 0x1001 ; Add second number to A
E949 31 10 02            STA 0x1002  ; Store the summ
E94C 2D 22               CMPA #0x22  ; HEX   Decimal  Real Value
E94E 2B F8 00            JNE FAIL    ; x22   34       34

E951 2A 10 01            LDA 0x1001  ; Move second number to the first number
E954 31 10 00            STA 0x1000
E957 2A 10 02            LDA 0x1002  ; Move summ to the second number
E95A 31 10 01            STA 0x1001
E95D 2A 10 00            LDA 0x1000  ; Load first number in A
E960 29 10 01            ADDA 0x1001 ; Add second number to A
E963 31 10 02            STA 0x1002  ; Store the summ
E966 2D 37               CMPA #0x37  ; HEX   Decimal  Real Value
E968 2B F8 00            JNE FAIL    ; x37   55       55

E96B 2A 10 01            LDA 0x1001  ; Move second number to the first number
E96E 31 10 00            STA 0x1000
E971 2A 10 02            LDA 0x1002  ; Move summ to the second number
E974 31 10 01            STA 0x1001
E977 2A 10 00            LDA 0x1000  ; Load first number in A
E97A 29 10 01            ADDA 0x1001 ; Add second number to A
E97D 31 10 02            STA 0x1002  ; Store the summ
E980 2D 59               CMPA #0x59  ; HEX   Decimal  Real Value
E982 2B F8 00            JNE FAIL    ; x59   89       89

E985 2A 10 01            LDA 0x1001  ; Move second number to the first number
E988 31 10 00            STA 0x1000
E98B 2A 10 02            LDA 0x1002  ; Move summ to the second number
E98E 31 10 01            STA 0x1001
E991 2A 10 00            LDA 0x1000  ; Load first number in A
E994 29 10 01            ADDA 0x1001 ; Add second number to A
E997 31 10 02            STA 0x1002  ; Store the summ
E99A 2D 90               CMPA #0x90  ; HEX   Decimal  Real Value
E99C 2B F8 00            JNE FAIL    ; x90   144      144

E99F 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9A2 31 10 00            STA 0x1000
E9A5 2A 10 02            LDA 0x1002  ; Move summ to the second number
E9A8 31 10 01            STA 0x1001
E9AB 2A 10 00            LDA 0x1000  ; Load first number in A
E9AE 29 10 01            ADDA 0x1001 ; Add second number to A
E9B1 31 10 02            STA 0x1002  ; Store the summ
E9B4 2D E9               CMPA #0xE9  ; HEX   Decimal  Real Value
E9B6 2B F8 00            JNE FAIL    ; xE9   233      233

E9B9 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9BC 31 10 00            STA 0x1000
E9BF 2A 10 02            LDA 0x1002  ; Move summ to the second number
E9C2 31 10 01            STA 0x1001
E9C5 2A 10 00            LDA 0x1000  ; Load first number in A
E9C8 29 10 01            ADDA 0x1001 ; Add second number to A
E9CB 31 10 02            STA 0x1002  ; Store the summ
E9CE 2D 79               CMPA #0x79  ; HEX   Decimal  Real Value
E9D0 2B F8 00            JNE FAIL    ; x79   121      377 - (256*1) = 121

E9D3 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9D6 31 10 00            STA 0x1000
E9D9 2A 10 02            LDA 0x1002  ; Move summ to the second number
E9DC 31 10 01            STA 0x1001
E9DF 2A 10 00            LDA 0x1000  ; Load first number in A
E9E2 29 10 01            ADDA 0x1001 ; Add second number to A
E9E5 31 10 02            STA 0x1002  ; Store the summ
E9E8 2D 62               CMPA #0x62  ; HEX   Decimal  Real Value
E9EA 2B F8 00            JNE FAIL    ; x62   98       610 - (256*2) = 98

E9ED 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9F0 31 10 00            STA 0x1000
E9F3 2A 10 02            LDA 0x1002  ; Move summ to the second number
E9F6 31 10 01            STA 0x1001
E9F9 2A 10 00            LDA 0x1000  ; Load first number in A
E9FC 29 10 01            ADDA 0x1001 ; Add second number to A
E9FF 31 10 02            STA 0x1002  ; Store the summ
EA02 2D DB               CMPA #0xDB  ; HEX   Decimal  Real Value
EA04 2B F8 00            JNE FAIL    ; xDB   219      987 - (256*3) = 219         

                         ; --------------------------------------------------------------------      
                         ; END OF FIBONACCI TEST
                         ; --------------------------------------------------------------------      

                         ; ---------
                         ; Loop test
                         ; ---------
EA07 30 81      LOOPTST  LDA #0x81
EA09 36                  NOTA
EA0A 31 C0 00            STA LEDPORT    ; Output to LED port
EA0D 30 05               LDA #0x05      ; Init a counter of iterations
EA0F 31 10 0F            STA ?b0
EA12 2A 10 0F   LOOPTST1 LDA ?b0        ; Read counter
EA15 2D 00               CMPA #0x00     ; Is it 0?
EA17 2C EA 21            JEQ LOOPTST2   ; Yes then it's the end fo the test
EA1A 2F FF               ADDA #0xFF     ; Add -1 in complement 2 (equivalent to decrement)
EA1C 31 10 0F            STA ?b0        ; Save decremented count
EA1F 0C F1               JRA LOOPTST1
EA21 09         LOOPTST2 NOP            ; End of decrement loop         

                         ; -----------------
                         ; Math Library Test
                         ; -----------------
                         ; Test add32_l0_l0_l1  l0 <= l0 + l1
EA22 30 89               LDA #0x89   ; l0 = 0x89ABCDEF
EA24 31 10 0C            STA ?b3
EA27 30 AB               LDA #0xAB
EA29 31 10 0D            STA ?b2
EA2C 30 CD               LDA #0xCD
EA2E 31 10 0E            STA ?b1
EA31 30 EF               LDA #0xEF
EA33 31 10 0F            STA ?b0
EA36 30 DE               LDA #0xDE   ; l1 = DEADBEEF
EA38 31 10 08            STA ?b7
EA3B 30 AD               LDA #0xAD
EA3D 31 10 09            STA ?b6
EA40 30 BE               LDA #0xBE
EA42 31 10 0A            STA ?b5
EA45 30 EF               LDA #0xEF
EA47 31 10 0B            STA ?b4
EA4A 06 EA 70            JSR add32_l0_l0_l1   ; l0 <= l0 + l1
EA4D 2A 10 0C            LDA ?b3              ; Expected l0 = 68598CDE + C set
EA50 2D 68               CMPA #0x68
EA52 2B F8 00            JNE FAIL
EA55 2A 10 0D            LDA ?b2
EA58 2D 59               CMPA #0x59
EA5A 2B F8 00            JNE FAIL
EA5D 2A 10 0E            LDA ?b1
EA60 2D 8C               CMPA #0x8C
EA62 2B F8 00            JNE FAIL
EA65 2A 10 0F            LDA ?b0
EA68 2D DE               CMPA #0xDE
EA6A 2B F8 00            JNE FAIL
                         ; ---------------------
                         ; END Math Library Test
                         ; ---------------------

EA6D 32 E0 00            JMP 0xE000  ; Loop from start of diag test

                         ; ---------------------
                         ; Math library routines
                         ; ---------------------
                         ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |   ?w5      ?w4    | ?w3     ?w2     |   ?w1     ?w0   | 16 bits
                ;         ?l3         |        ?l2        |     ?l1         |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                         ; Addition on 32 bits
EA70 2A 10 0F   add32_l0_l0_l1    LDA ?b0  ; l0 <= l0 + l1  (LSB)
EA73 29 10 0B                     ADDA ?b4
EA76 31 10 0F                     STA ?b0
EA79 2A 10 0E                     LDA ?b1
EA7C 28 10 0A                     ADCA ?b5
EA7F 31 10 0E                     STA ?b1
EA82 2A 10 0D                     LDA ?b2
EA85 28 10 09                     ADCA ?b6
EA88 31 10 0D                     STA ?b2
EA8B 2A 10 0C                     LDA ?b3
EA8E 28 10 08                     ADCA ?b7
EA91 31 10 0C                     STA ?b3
EA94 07                           RTS
                         ; --------------------------------------------------------------------
                         ; Error routine
                         ; --------------------------------------------------------------------
                         ORG/0xF800  ; Diagnostic Error routine   
                         ;STOP        ; Stop execution
F800 32 F8 00   FAIL     JMP FAIL    ; Infinite Loop on error

                         ; --------------------------------------------------------------------
                         ; JSR and RTS Test subroutine
                         ; --------------------------------------------------------------------
                         ORG/0xFFC0
FFC0 30 11      TJSR1    LDA #0x11
FFC2 07                  RTS
                         ORG/0xFFC3
FFC3 30 22      TJSR2    LDA #0x22
FFC5 06 FF C0            JSR TJSR1
FFC8 07                  RTS
                         ORG/0xFFC9
FFC9 30 33      TJSR3    LDA #0x33
FFCB 06 FF C3            JSR TJSR2
FFCE 07                  RTS
                         ORG/0xFFCF
FFCF 30 44      TJSR4    LDA #0x44
FFD1 06 FF C9            JSR TJSR3
FFD4 07                  RTS
                         ORG/0xFFD5
FFD5 30 44      TJSR5    LDA #0x44
FFD7 06 FF CF            JSR TJSR4
FFDA 07                  RTS
                         ORG/0xFFDB
FFDB 30 55      TJSR6    LDA #0x55
FFDD 06 FF D5            JSR TJSR5
FFE0 07                  RTS
                         ORG/0xFFE1
FFE1 30 66      TJSR7    LDA #0x66
FFE3 06 FF DB            JSR TJSR6
FFE6 07                  RTS
                         ORG/0xFFE7
FFE7 30 77      TJSR8    LDA #0x77
FFE9 06 FF E1            JSR TJSR7
FFEC 07                  RTS
                         ORG/0xFFED
FFED 30 88      TJSR9    LDA #0x88
FFEF 06 FF E7            JSR TJSR8
FFF2 07                  RTS
                         ORG/0xFFF3
FFF3 30 99      TJSR10   LDA #0x99
FFF5 06 FF ED            JSR TJSR9
FFF8 07                  RTS
                         ; --------------------------------------------------------------------
                         ; Reset Vector
                         ; --------------------------------------------------------------------
                         ORG/0xFFFE  ; Set the Reset vector
FFFE E0                  DB 0xE0     ; MSB Reset Vector
FFFF 00                  DB 0x00     ; LSB Reset Vector


Symbol Table:
?b15      1000
?b14      1001
?b13      1002
?b12      1003
?b11      1004
?b10      1005
?b9       1006
?b8       1007
?b7       1008
?b6       1009
?b5       100A
?b4       100B
?b3       100C
?b2       100D
?b1       100E
?b0       100F
?w7       1000
?w6       1002
?w5       1004
?w4       1006
?w3       1008
?w2       100A
?w1       100C
?w0       100E
?l3       1000
?l2       1004
?l1       1008
?l0       100C
SP        1FF0
JSH       1FF1
JSL       1FF2
XH        1FF3
XL        1FF4
EQUAL     1FFA
CARRY     1FFB
REG_A     1FFC
IPH       1FFE
IPL       1FFF
LEDPORT   C000
START     E000
TST01     E006
TST02     E033
TSTOP06   E060
TSTOP09   E084
TSTOP0A   E08D
TSTOP0B   E0CB
TST0B_0   E127
TST0B_1   E12A
TST0B_2   E12E
TST0B_3   E133
TST0B_4   E13A
TST0B_5   E14C
TST0B_6   E151
TST0B_7   E167
TST0B_8   E16E
TST0B_9   E170
TST0B_10  E172
TST0B_11  E187
TST0B_12  E204
TST0B_13  E207
TSTOP0D   E208
TSTOP0E   E2C2
TSTOP29   E37C
TSTOP2A   E3B0
TSTOP2B   E403
TST2C     E41E
TST2C_1   E443
TST2C_2   E44D
TST2C_3   E457
TST2C_4   E461
TST2C_5   E46B
TST2C_6   E475
TST2C_7   E47F
TST2C_8   E489
TST2C_9   E493
TST2C_10  E49D
TSTOP2D   E49E
TSTOP2E   E4BC
TSTOP2F   E51A
TSTOP30   E564
TSTOP31   E5BE
TSTOP33   E687
TSTOP34   E6C3
TSTOP35   E708
TSTOP36   E73B
TSTOP37   E763
TSTOP38   E7D9
TSTOP39   E805
TSTFIBON  E87D
LOOPTST   EA07
LOOPTST1  EA12
LOOPTST2  EA21
add32_l0_l0_l1EA70
FAIL      F800
TJSR1     FFC0
TJSR2     FFC3
TJSR3     FFC9
TJSR4     FFCF
TJSR5     FFD5
TJSR6     FFDB
TJSR7     FFE1
TJSR8     FFE7
TJSR9     FFED
TJSR10    FFF3
Assembly complete
