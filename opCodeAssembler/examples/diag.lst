                ; -----------------------------------------------------------------
                ; Homebrew MyCPU diagnostic program
                ; Author: Sylvain Fortin sylfortin71@hotmail.com
                ; Date : 28 march 2025
                ; Documentation : diag.asm is used to test the assembler
                ;                 instructions of MyCPU.
                ; Memory map of the computer
                ; 0000H - 17FFH Total RAM space
                ; 0000H - 00FFH Stack
                ; 0100H - 17EF  Free for application
                ; E000H - F000H EEPROM for application program
                ; -----------------------------------------------------------------

                ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |    ?w5      ?w4   |   ?w3     ?w2   |   ?w1     ?w0   | 16 bits
                ;         ?l3         |         ?l2       |       ?l1       |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                ?b15     EQU 0x1000
                ?b14     EQU 0x1001
                ?b13     EQU 0x1002
                ?b12     EQU 0x1003
                ?b11     EQU 0x1004
                ?b10     EQU 0x1005
                ?b9      EQU 0x1006
                ?b8      EQU 0x1007
                ?b7      EQU 0x1008
                ?b6      EQU 0x1009
                ?b5      EQU 0x100A
                ?b4      EQU 0x100B
                ?b3      EQU 0x100C
                ?b2      EQU 0x100D
                ?b1      EQU 0x100E
                ?b0      EQU 0x100F

                ?w7      EQU 0x1000  ; ?b15:?b14
                ?w6      EQU 0x1002  ; ?b13:?b12
                ?w5      EQU 0x1004  ; ?b11:?b10
                ?w4      EQU 0x1006  ; ?b9:?b8
                ?w3      EQU 0x1008  ; ?b7:?b6
                ?w2      EQU 0x100A  ; ?b5:?b4
                ?w1      EQU 0x100C  ; ?b3:?b2
                ?w0      EQU 0x100E  ; ?b1:?b0

                ?l3      EQU 0x1000  ; ?b15,?b14,?b13,?b12
                ?l2      EQU 0x1004  ; ?b11,?b10,?b9,?b8
                ?l1      EQU 0x1008  ; ?b7,?b6,?b5,?b4
                ?l0      EQU 0x100C  ; ?b3,?b2,?b1,?b0

                ; RAM Reserved location
                SP       EQU 0x1FF0  ; SP      Stack Pointer 8 bit
                JSH      EQU 0x1FF1  ; JSH     Temporary storage for JSR MSB address
                JSL      EQU 0x1FF2  ; JSL          "       "     "   "  LSB    "
                XH       EQU 0x1FF3  ; X MSB   X Register MSB
                XL       EQU 0x1FF4  ; X LSB   X Register LSB
                EQUAL    EQU 0x1FFA  ; E       bit<0> Equal Status bit
                CARRY    EQU 0x1FFB  ; C       bit<0> Carry Status bit
                REG_A    EQU 0x1FFC  ; A       A Register
                IPH      EQU 0x1FFE  ; IPH	    Instruction Pointer MSB
                IPL      EQU 0x1FFF  ; IPL          "         "    LSB

                ; Peripheral
                LEDPORT  EQU 0xC000  ; PORT for the LED

                ; Program start
                         ORG/0xE000  ; EEPROM Start        
E000 30 00      START    LDA #0x00   ; Clear LED
E002 36                  NOTA
E003 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; Test Carry Status bit integrity
                         ; --------------------------------------------------------------------
E006 30 01      TST01    LDA #0x01
E008 36                  NOTA
E009 31 C0 00            STA LEDPORT ; Output to LED port
E00C 30 00               LDA #0x00
E00E 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E011 2A 1F FB            LDA CARRY   ; Read Carry Status
E014 2D 00               CMPA #0x00
E016 2B F8 00            JNE FAIL
E019 30 01               LDA #0x01
E01B 31 1F FB            STA CARRY   ; Write 1 to carry bit <0>
E01E 2A 1F FB            LDA CARRY   ; Read Carry Status
E021 2D 01               CMPA #0x01
E023 2B F8 00            JNE FAIL
E026 30 00               LDA #0x00
E028 31 1F FB            STA CARRY   ; Write 0 to carry bit <0>
E02B 2A 1F FB            LDA CARRY   ; Read Carry Status
E02E 2D 00               CMPA #0x00
E030 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; Test Equal Status bit integrity
                         ; --------------------------------------------------------------------
E033 30 02      TST02    LDA #0x02
E035 36                  NOTA
E036 31 C0 00            STA LEDPORT ; Output to LED port
E039 30 00               LDA #0x00
E03B 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E03E 2A 1F FA            LDA EQUAL   ; Read Equal Status
E041 2D 00               CMPA #0x00
E043 2B F8 00            JNE FAIL
E046 30 01               LDA #0x01
E048 31 1F FA            STA EQUAL   ; Write 1 to Equal Status bit <0>
E04B 2A 1F FA            LDA EQUAL   ; Read Equal Status
E04E 2D 01               CMPA #0x01
E050 2B F8 00            JNE FAIL
E053 30 00               LDA #0x00
E055 31 1F FA            STA EQUAL   ; Write 0 to Equal Status bit <0>
E058 2A 1F FA            LDA EQUAL   ; Read Equal Status
E05B 2D 00               CMPA #0x00
E05D 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.06 JSR    Jump to SubRoutine
                         ; --------------------------------------------------------------------
E060 30 06      TSTOP06  LDA #0x06
E062 36                  NOTA
E063 31 C0 00            STA LEDPORT ; Output to LED port
E066 06 FF C0            JSR TJSR1   ; 1 layer
E069 06 FF C3            JSR TJSR2   ; 2
E06C 06 FF C9            JSR TJSR3   ; 3
E06F 06 FF CF            JSR TJSR4   ; 4
E072 06 FF D5            JSR TJSR5   ; 5
E075 06 FF DB            JSR TJSR6   ; 6
E078 06 FF E1            JSR TJSR7   ; 7
E07B 06 FF E7            JSR TJSR8   ; 8
E07E 06 FF ED            JSR TJSR9   ; 9
E081 06 FF F3            JSR TJSR10  ; 10
                         ; --------------------------------------------------------------------
                         ; OP.07 RTS    ReTurn from Subroutine
                         ; Tested in OP.06 JSR
                         ; --------------------------------------------------------------------
                         ;LDA #07H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.08 STOP
                         ; STOP EXECUTING
                         ; Cannot test here it will stop execution...
                         ; A diagnostic test failure is expected to call this instruction ending 
                         ; program exectution.
                         ; --------------------------------------------------------------------
                         ;LDA #08H
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port
                         ;STOP
                         ; --------------------------------------------------------------------
                         ; OP.09 NOP   NO OPERATION
                         ; --------------------------------------------------------------------
E084 30 09      TSTOP09  LDA #0x09
E086 36                  NOTA
E087 31 C0 00            STA LEDPORT ; Output to LED port
E08A 09                  NOP
E08B 09                  NOP
E08C 09                  NOP
                         ; --------------------------------------------------------------------
                         ; OP.0A LDA (X) Load Reg A Indexed
                         ; --------------------------------------------------------------------
E08D 30 0A      TSTOP0A  LDA #0x0A
E08F 36                  NOTA
E090 31 C0 00            STA LEDPORT ; Output to LED port
E093 30 55               LDA #0x55   ; Store some value in RAM
E095 31 01 00            STA 0x0100
E098 30 AA               LDA #0xAA
E09A 31 01 01            STA 0x0101
E09D 30 DE               LDA #0xDE
E09F 31 01 F0            STA 0x01F0
E0A2 30 CA               LDA #0xCA
E0A4 31 01 FF            STA 0x01FF
E0A7 38 01 00            LDX #0x0100 ; Verify each locations
E0AA 0A                  LDA (X)
E0AB 2D 55               CMPA #0x55
E0AD 2B F8 00            JNE FAIL    ; Jump if result not good
E0B0 38 01 01            LDX #0x0101
E0B3 0A                  LDA (X)
E0B4 2D AA               CMPA #0xAA
E0B6 2B F8 00            JNE FAIL
E0B9 38 01 F0            LDX #0x01F0
E0BC 0A                  LDA (X)
E0BD 2D DE               CMPA #0xDE
E0BF 2B F8 00            JNE FAIL
E0C2 38 01 FF            LDX #0x01FF
E0C5 0A                  LDA (X)
E0C6 2D CA               CMPA #0xCA
E0C8 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.0B STA (X) Store Reg A Indexed
                         ; --------------------------------------------------------------------
E0CB 30 0B      TSTOP0B  LDA #0x0B
E0CD 36                  NOTA
E0CE 31 C0 00            STA LEDPORT ; Output to LED port
                         ; --------------------------------------------------------------------
                         ; OP.0C JRA 0x** Unconditional relative jump
                         ; --------------------------------------------------------------------
                         ; Testing using hexadecimal value after the mnemonic
E0D1 30 0C               LDA #0x0C
E0D3 36                  NOTA
E0D4 31 C0 00            STA LEDPORT ; Output to LED port
E0D7 0C 00               JRA 0x00    ; Test jump foward, Execute next instruction
E0D9 0C 01               JRA 0x01    ; Skip next instruction
E0DB 09                  NOP         ; 1
E0DC 0C 02               JRA 0x02    ; Skip next 2 instructions
E0DE 09                  NOP         ; 1
E0DF 09                  NOP         ; 2
E0E0 0C 03               JRA 0x03    ; Skip next 3 instructions
E0E2 09                  NOP         ; 1 
E0E3 09                  NOP         ; 2
E0E4 09                  NOP         ; 3
E0E5 0C 05               JRA 0x05    ; Skip next 5 instructions
E0E7 09                  NOP         ; 1
E0E8 09                  NOP         ; 2
E0E9 09                  NOP         ; 3
E0EA 09                  NOP         ; 4
E0EB 09                  NOP         ; 5
E0EC 0C 10               JRA 0x10    ; Skip next 16 instructions
E0EE 09                  NOP         ; 1
E0EF 09                  NOP         ; 2
E0F0 09                  NOP         ; 3
E0F1 09                  NOP         ; 4
E0F2 09                  NOP         ; 5
E0F3 09                  NOP         ; 6
E0F4 09                  NOP         ; 7
E0F5 09                  NOP         ; 8
E0F6 09                  NOP         ; 9
E0F7 09                  NOP         ; 10
E0F8 09                  NOP         ; 11
E0F9 09                  NOP         ; 12
E0FA 09                  NOP         ; 13
E0FB 09                  NOP         ; 14
E0FC 09                  NOP         ; 15
E0FD 09                  NOP         ; 16
E0FE 0C 22               JRA 0x22    ; Skip next 34 bytes
E100 09                  NOP         ; 1
E101 09                  NOP         ; 2
E102 09                  NOP         ; 3
E103 0C 1F               JRA 0x1F   ; 4-5   Final jump to the end of thest
E105 09                  NOP         ; 6
E106 09                  NOP         ; 7
E107 09                  NOP         ; 8
E108 09                  NOP         ; 9
E109 09                  NOP         ; 10
E10A 09                  NOP         ; 11
E10B 09                  NOP         ; 12
E10C 09                  NOP         ; 13
E10D 09                  NOP         ; 14
E10E 09                  NOP         ; 15
E10F 09                  NOP         ; 16
E110 09                  NOP         ; 17
E111 09                  NOP         ; 18
E112 09                  NOP         ; 19
E113 09                  NOP         ; 20
E114 09                  NOP         ; 21
E115 09                  NOP         ; 22
E116 09                  NOP         ; 23
E117 09                  NOP         ; 24
E118 09                  NOP         ; 25
E119 0C E8               JRA 0xE8    ; 26-27 Third Backward jump
E11B 09                  NOP         ; 28
E11C 09                  NOP         ; 29
E11D 09                  NOP         ; 30
E11E 09                  NOP         ; 31
E11F 09                  NOP         ; 32
E120 0C F7               JRA 0xF7    ; 33-34 Second Backward jump
E122 0C FC               JRA 0xFC    ; First Backward jump
E124 09                  NOP         ; Arrival of the last jump to end the test
                         ; Testing using symbolic address after the mnemonic
E125 0C 00               JRA TST0B_0 ; Test jump foward, Execute next instruction
E127 0C 01      TST0B_0  JRA TST0B_1 ; Skip next instruction
E129 09                  NOP         ; 1
E12A 0C 02      TST0B_1  JRA TST0B_2 ; Skip next 2 instructions
E12C 09                  NOP         ; 1
E12D 09                  NOP         ; 2
E12E 0C 03      TST0B_2  JRA TST0B_3 ; Skip next 3 instructions
E130 09                  NOP         ; 1 
E131 09                  NOP         ; 2
E132 09                  NOP         ; 3
E133 0C 05      TST0B_3  JRA TST0B_4 ; Skip next 5 instructions
E135 09                  NOP         ; 1
E136 09                  NOP         ; 2
E137 09                  NOP         ; 3
E138 09                  NOP         ; 4
E139 09                  NOP         ; 5
E13A 0C 10      TST0B_4  JRA TST0B_5 ; Skip next 16 instructions
E13C 09                  NOP         ; 1
E13D 09                  NOP         ; 2
E13E 09                  NOP         ; 3
E13F 09                  NOP         ; 4
E140 09                  NOP         ; 5
E141 09                  NOP         ; 6
E142 09                  NOP         ; 7
E143 09                  NOP         ; 8
E144 09                  NOP         ; 9
E145 09                  NOP         ; 10
E146 09                  NOP         ; 11
E147 09                  NOP         ; 12
E148 09                  NOP         ; 13
E149 09                  NOP         ; 14
E14A 09                  NOP         ; 15
E14B 09                  NOP         ; 16
E14C 0C 22      TST0B_5  JRA TST0B_9 ; Skip next 34 bytes
E14E 09                  NOP         ; 1
E14F 09                  NOP         ; 2
E150 09                  NOP         ; 3
E151 0C 1F      TST0B_6  JRA TST0B_10 ; 4-5   Final jump to the end of test
E153 09                  NOP         ; 6
E154 09                  NOP         ; 7
E155 09                  NOP         ; 8
E156 09                  NOP         ; 9
E157 09                  NOP         ; 10
E158 09                  NOP         ; 11
E159 09                  NOP         ; 12
E15A 09                  NOP         ; 13
E15B 09                  NOP         ; 14
E15C 09                  NOP         ; 15
E15D 09                  NOP         ; 16
E15E 09                  NOP         ; 17
E15F 09                  NOP         ; 18
E160 09                  NOP         ; 19
E161 09                  NOP         ; 20
E162 09                  NOP         ; 21
E163 09                  NOP         ; 22
E164 09                  NOP         ; 23
E165 09                  NOP         ; 24
E166 09                  NOP         ; 25
E167 0C E8      TST0B_7  JRA TST0B_6 ; 26-27 Third Backward jump
E169 09                  NOP         ; 28
E16A 09                  NOP         ; 29
E16B 09                  NOP         ; 30
E16C 09                  NOP         ; 31
E16D 09                  NOP         ; 32
E16E 0C F7      TST0B_8  JRA TST0B_7 ; 33-34 Second Backward jump
E170 0C FC      TST0B_9  JRA TST0B_8 ; First Backward jump
E172 09         TST0B_10 NOP         ; Arrival of the last jump to end the test
                ;         ; Higher range testing using symbolic address after the mnemonic
E173 09                  NOP         ; These NOP make relative jump to exercise carry on MSB address boundary
E174 09                  NOP
E175 09                  NOP
E176 09                  NOP
E177 09                  NOP
E178 09                  NOP
E179 09                  NOP
E17A 09                  NOP
E17B 09                  NOP
E17C 09                  NOP
E17D 09                  NOP
E17E 09                  NOP
E17F 09                  NOP
E180 09                  NOP
E181 09                  NOP
E182 09                  NOP
E183 0C 7F               JRA TST0B_12
E185 09                  NOP         ; 1     1     
E186 09                  NOP
                ;         NOP
                ;         NOP
E187 0C 7E      TST0B_11 JRA TST0B_13
E189 09                  NOP
E18A 09                  NOP
E18B 09                  NOP
E18C 09                  NOP
E18D 09                  NOP
E18E 09                  NOP         
E18F 09                  NOP
E190 09                  NOP
E191 09                  NOP
E192 09                  NOP
E193 09                  NOP
E194 09                  NOP         ; 16
E195 09                  NOP         ; 1     2   
E196 09                  NOP
E197 09                  NOP
E198 09                  NOP
E199 09                  NOP
E19A 09                  NOP
E19B 09                  NOP
E19C 09                  NOP
E19D 09                  NOP
E19E 09                  NOP         
E19F 09                  NOP
E1A0 09                  NOP
E1A1 09                  NOP
E1A2 09                  NOP
E1A3 09                  NOP
E1A4 09                  NOP         ; 16
E1A5 09                  NOP         ; 1   3
E1A6 09                  NOP
E1A7 09                  NOP
E1A8 09                  NOP
E1A9 09                  NOP
E1AA 09                  NOP
E1AB 09                  NOP
E1AC 09                  NOP
E1AD 09                  NOP
E1AE 09                  NOP         
E1AF 09                  NOP
E1B0 09                  NOP
E1B1 09                  NOP
E1B2 09                  NOP
E1B3 09                  NOP
E1B4 09                  NOP         ; 16
E1B5 09                  NOP         ; 1   4
E1B6 09                  NOP
E1B7 09                  NOP
E1B8 09                  NOP
E1B9 09                  NOP
E1BA 09                  NOP
E1BB 09                  NOP
E1BC 09                  NOP
E1BD 09                  NOP
E1BE 09                  NOP         
E1BF 09                  NOP
E1C0 09                  NOP
E1C1 09                  NOP
E1C2 09                  NOP
E1C3 09                  NOP
E1C4 09                  NOP         ; 16
E1C5 09                  NOP         ; 1   5
E1C6 09                  NOP
E1C7 09                  NOP
E1C8 09                  NOP
E1C9 09                  NOP
E1CA 09                  NOP
E1CB 09                  NOP
E1CC 09                  NOP
E1CD 09                  NOP
E1CE 09                  NOP         
E1CF 09                  NOP
E1D0 09                  NOP
E1D1 09                  NOP
E1D2 09                  NOP
E1D3 09                  NOP
E1D4 09                  NOP         ; 16
E1D5 09                  NOP         ; 1   5
E1D6 09                  NOP
E1D7 09                  NOP
E1D8 09                  NOP
E1D9 09                  NOP
E1DA 09                  NOP
E1DB 09                  NOP
E1DC 09                  NOP
E1DD 09                  NOP
E1DE 09                  NOP         
E1DF 09                  NOP
E1E0 09                  NOP
E1E1 09                  NOP
E1E2 09                  NOP
E1E3 09                  NOP
E1E4 09                  NOP         ; 16
E1E5 09                  NOP         ; 1   6
E1E6 09                  NOP
E1E7 09                  NOP
E1E8 09                  NOP
E1E9 09                  NOP
E1EA 09                  NOP
E1EB 09                  NOP
E1EC 09                  NOP
E1ED 09                  NOP
E1EE 09                  NOP         
E1EF 09                  NOP
E1F0 09                  NOP
E1F1 09                  NOP
E1F2 09                  NOP
E1F3 09                  NOP
E1F4 09                  NOP         ; 16
E1F5 09                  NOP         ; 1   7
E1F6 09                  NOP
E1F7 09                  NOP
E1F8 09                  NOP
E1F9 09                  NOP
E1FA 09                  NOP
E1FB 09                  NOP
E1FC 09                  NOP
E1FD 09                  NOP
E1FE 09                  NOP         
E1FF 09                  NOP
E200 09                  NOP
E201 09                  NOP
E202 09                  NOP
E203 09                  NOP
                ;         NOP        ; 16
E204 09         TST0B_12 NOP
E205 0C 80               JRA TST0B_11
E207 09         TST0B_13 NOP         ; final foward jump destination     
                         ; --------------------------------------------------------------------
                         ; OP.0D SRLA Shift Right Logical on Reg A
                         ;            0 -> b7 b6 b5 b4 b3 b2 b1 b0 -> C
                         ; --------------------------------------------------------------------
E208 30 0D      TSTOP0D  LDA #0x0D
E20A 36                  NOTA
E20B 31 C0 00            STA LEDPORT ; Output to LED port
E20E 30 A5               LDA #0xA5
E210 0D                  SRLA
E211 2D 52               CMPA #0x52
E213 2B F8 00            JNE FAIL    ; Jump if result not good
E216 2A 1F FB            LDA CARRY   ; Read the Carry Status
E219 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E21B 2B F8 00            JNE FAIL    ; Error if different
E21E 30 A5               LDA #0xA5
E220 0D                  SRLA
E221 0D                  SRLA
E222 2D 29               CMPA #0x29
E224 2B F8 00            JNE FAIL    ; Jump if result not good
E227 2A 1F FB            LDA CARRY   ; Read the Carry Status
E22A 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E22C 2B F8 00            JNE FAIL    ; Error if different
E22F 30 A5               LDA #0xA5
E231 0D                  SRLA
E232 0D                  SRLA
E233 0D                  SRLA
E234 2D 14               CMPA #0x14
E236 2B F8 00            JNE FAIL    ; Jump if result not good
E239 2A 1F FB            LDA CARRY   ; Read the Carry Status
E23C 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E23E 2B F8 00            JNE FAIL    ; Error if different
E241 30 A5               LDA #0xA5
E243 0D                  SRLA
E244 0D                  SRLA
E245 0D                  SRLA
E246 0D                  SRLA
E247 2D 0A               CMPA #0x0A
E249 2B F8 00            JNE FAIL    ; Jump if result not good
E24C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E24F 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E251 2B F8 00            JNE FAIL    ; Error if different
E254 30 A5               LDA #0xA5
E256 0D                  SRLA
E257 0D                  SRLA
E258 0D                  SRLA
E259 0D                  SRLA
E25A 0D                  SRLA
E25B 2D 05               CMPA #0x05
E25D 2B F8 00            JNE FAIL    ; Jump if result not good
E260 2A 1F FB            LDA CARRY   ; Read the Carry Status
E263 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E265 2B F8 00            JNE FAIL    ; Error if different
E268 30 A5               LDA #0xA5
E26A 0D                  SRLA
E26B 0D                  SRLA
E26C 0D                  SRLA
E26D 0D                  SRLA
E26E 0D                  SRLA
E26F 0D                  SRLA
E270 2D 02               CMPA #0x02
E272 2B F8 00            JNE FAIL    ; Jump if result not good
E275 2A 1F FB            LDA CARRY   ; Read the Carry Status
E278 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E27A 2B F8 00            JNE FAIL    ; Error if different
E27D 30 A5               LDA #0xA5
E27F 0D                  SRLA
E280 0D                  SRLA
E281 0D                  SRLA
E282 0D                  SRLA
E283 0D                  SRLA
E284 0D                  SRLA
E285 0D                  SRLA
E286 2D 01               CMPA #0x01
E288 2B F8 00            JNE FAIL    ; Jump if result not good
E28B 2A 1F FB            LDA CARRY   ; Read the Carry Status
E28E 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E290 2B F8 00            JNE FAIL    ; Error if different
E293 30 A5               LDA #0xA5
E295 0D                  SRLA
E296 0D                  SRLA
E297 0D                  SRLA
E298 0D                  SRLA
E299 0D                  SRLA
E29A 0D                  SRLA
E29B 0D                  SRLA
E29C 0D                  SRLA
E29D 2D 00               CMPA #0x00
E29F 2B F8 00            JNE FAIL    ; Jump if result not good
E2A2 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2A5 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2A7 2B F8 00            JNE FAIL    ; Error if different
E2AA 30 A5               LDA #0xA5
E2AC 0D                  SRLA
E2AD 0D                  SRLA
E2AE 0D                  SRLA
E2AF 0D                  SRLA
E2B0 0D                  SRLA
E2B1 0D                  SRLA
E2B2 0D                  SRLA
E2B3 0D                  SRLA
E2B4 0D                  SRLA
E2B5 2D 00               CMPA #0x00
E2B7 2B F8 00            JNE FAIL    ; Jump if result not good
E2BA 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2BD 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E2BF 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.0E SLLA Shift Left Logical on Reg A
                         ;       SLAA Shift Left Arithmetic on Reg A (SLAA same as SLLA)
                         ;            C <- b7 b6 b5 b4 b3 b2 b1 b0 <- 0
                         ; --------------------------------------------------------------------
E2C2 30 0E      TSTOP0E  LDA #0x0E
E2C4 36                  NOTA
E2C5 31 C0 00            STA LEDPORT ; Output to LED port
E2C8 30 A5               LDA #0xA5
E2CA 0E                  SLLA
E2CB 2D 4A               CMPA #0x4A
E2CD 2B F8 00            JNE FAIL    ; Jump if result not good
E2D0 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2D3 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2D5 2B F8 00            JNE FAIL    ; Error if different
E2D8 30 A5               LDA #0xA5
E2DA 0E                  SLLA
E2DB 0E                  SLLA
E2DC 2D 94               CMPA #0x94
E2DE 2B F8 00            JNE FAIL    ; Jump if result not good
E2E1 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2E4 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E2E6 2B F8 00            JNE FAIL    ; Error if different
E2E9 30 A5               LDA #0xA5
E2EB 0E                  SLLA
E2EC 0E                  SLLA
E2ED 0E                  SLLA
E2EE 2D 28               CMPA #0x28
E2F0 2B F8 00            JNE FAIL    ; Jump if result not good
E2F3 2A 1F FB            LDA CARRY   ; Read the Carry Status
E2F6 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E2F8 2B F8 00            JNE FAIL    ; Error if different
E2FB 30 A5               LDA #0xA5
E2FD 0E                  SLLA
E2FE 0E                  SLLA
E2FF 0E                  SLLA
E300 0E                  SLLA
E301 2D 50               CMPA #0x50
E303 2B F8 00            JNE FAIL    ; Jump if result not good
E306 2A 1F FB            LDA CARRY   ; Read the Carry Status
E309 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E30B 2B F8 00            JNE FAIL    ; Error if different
E30E 30 A5               LDA #0xA5
E310 0E                  SLLA
E311 0E                  SLLA
E312 0E                  SLLA
E313 0E                  SLLA
E314 0E                  SLLA
E315 2D A0               CMPA #0xA0
E317 2B F8 00            JNE FAIL    ; Jump if result not good
E31A 2A 1F FB            LDA CARRY   ; Read the Carry Status
E31D 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E31F 2B F8 00            JNE FAIL    ; Error if different
E322 30 A5               LDA #0xA5
E324 0E                  SLLA
E325 0E                  SLLA
E326 0E                  SLLA
E327 0E                  SLLA
E328 0E                  SLLA
E329 0E                  SLAA
E32A 2D 40               CMPA #0x40
E32C 2B F8 00            JNE FAIL    ; Jump if result not good
E32F 2A 1F FB            LDA CARRY   ; Read the Carry Status
E332 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E334 2B F8 00            JNE FAIL    ; Error if different
E337 30 A5               LDA #0xA5
E339 0E                  SLLA
E33A 0E                  SLLA
E33B 0E                  SLLA
E33C 0E                  SLLA
E33D 0E                  SLLA
E33E 0E                  SLAA
E33F 0E                  SLAA
E340 2D 80               CMPA #0x80
E342 2B F8 00            JNE FAIL    ; Jump if result not good
E345 2A 1F FB            LDA CARRY   ; Read the Carry Status
E348 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E34A 2B F8 00            JNE FAIL    ; Error if different
E34D 30 A5               LDA #0xA5
E34F 0E                  SLLA
E350 0E                  SLLA
E351 0E                  SLLA
E352 0E                  SLLA
E353 0E                  SLLA
E354 0E                  SLAA
E355 0E                  SLAA
E356 0E                  SLAA
E357 2D 00               CMPA #0x00
E359 2B F8 00            JNE FAIL    ; Jump if result not good
E35C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E35F 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E361 2B F8 00            JNE FAIL    ; Error if different
E364 30 A5               LDA #0xA5
E366 0E                  SLLA
E367 0E                  SLLA
E368 0E                  SLLA
E369 0E                  SLLA
E36A 0E                  SLLA
E36B 0E                  SLAA
E36C 0E                  SLAA
E36D 0E                  SLAA
E36E 0E                  SLAA
E36F 2D 00               CMPA #0x00
E371 2B F8 00            JNE FAIL    ; Jump if result not good
E374 2A 1F FB            LDA CARRY   ; Read the Carry Status
E377 2D 00               CMPA #0x00  ; The Carry Status bit is expected to be '0' with <7:1> set to '0'
E379 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.0F 
                         ; JRNC Jump Relatif if Not Carry
                         ; --------------------------------------------------------------------
E37C 30 0F      TSTOP0F  LDA #0x0F
E37E 36                  NOTA
E37F 31 C0 00            STA LEDPORT ; Output to LED port
E382 30 00               LDA #0x00   ; Clear carry
E384 31 1F FB            STA CARRY
E387 0F 03               JRNC TST0F_0
E389 32 F8 00            JMP FAIL
E38C 30 01      TST0F_0  LDA #0x01   ; Set carry
E38E 31 1F FB            STA CARRY
E391 0F 03               JRNC TST0F_1
E393 32 E3 99            JMP TST0F_2
E396 32 F8 00   TST0F_1  JMP FAIL
E399 09         TST0F_2  NOP
                         ; --------------------------------------------------------------------
                         ; OP.10  RRCA   Rotate Right Logical Reg A through Carry 
                         ;               C -> b7 b6 b5 b4 b3 b2 b1 b0 -> C  
                         ; --------------------------------------------------------------------
E39A 30 10      TSTOP10  LDA #0x10
E39C 36                  NOTA
E39D 31 C0 00            STA LEDPORT ; Output to LED port
E3A0 30 00               LDA #0x00   ; Clear Carry
E3A2 31 1F FB            STA CARRY
E3A5 10                  RRCA
E3A6 2D 00               CMPA #0x00
E3A8 2B F8 00            JNE FAIL
E3AB 30 00               LDA #0x00   ; Clear Carry
E3AD 31 1F FB            STA CARRY
E3B0 10                  RRCA
E3B1 2A 1F FB            LDA CARRY
E3B4 2D 00               CMPA #0x00
E3B6 2B F8 00            JNE FAIL
E3B9 30 AA               LDA #0xAA   ; Test shifting
E3BB 10                  RRCA
E3BC 2D 55               CMPA #0x55
E3BE 2B F8 00            JNE FAIL
E3C1 30 01               LDA #0x01   ; Test transfer of bit <0> to carry
E3C3 10                  RRCA
E3C4 2A 1F FB            LDA CARRY
E3C7 2D 01               CMPA #0x01
E3C9 2B F8 00            JNE FAIL
E3CC 30 00               LDA #0x00   ; Test A become 0 after shifting when carry is 0
E3CE 31 1F FB            STA CARRY   ; insure carry is clear
E3D1 30 01               LDA #0x01   ; set bit <0> to '1'
E3D3 10                  RRCA
E3D4 2D 00               CMPA #0x00
E3D6 2B F8 00            JNE FAIL
E3D9 30 00               LDA #0x00   ; Test bit <0> goes to bit <7> after 2 RRCA
E3DB 31 1F FB            STA CARRY   ; insure carry is clear
E3DE 30 01               LDA #0x01
E3E0 10                  RRCA
E3E1 10                  RRCA
E3E2 2D 80               CMPA #0x80
E3E4 2B F8 00            JNE FAIL
E3E7 10                  RRCA        ; continue rotating this bit
E3E8 2D 40               CMPA #0x40
E3EA 2B F8 00            JNE FAIL
E3ED 10                  RRCA
E3EE 2D 20               CMPA #0x20
E3F0 2B F8 00            JNE FAIL
E3F3 10                  RRCA
E3F4 2D 10               CMPA #0x10
E3F6 2B F8 00            JNE FAIL
E3F9 10                  RRCA
E3FA 2D 08               CMPA #0x08
E3FC 2B F8 00            JNE FAIL
E3FF 10                  RRCA
E400 2D 04               CMPA #0x04
E402 2B F8 00            JNE FAIL
E405 10                  RRCA
E406 2D 02               CMPA #0x02
E408 2B F8 00            JNE FAIL
E40B 10                  RRCA
E40C 2D 01               CMPA #0x01
E40E 2B F8 00            JNE FAIL
E411 10                  RRCA
E412 2D 00               CMPA #0x00
E414 2B F8 00            JNE FAIL
E417 10                  RRCA
E418 2D 80               CMPA #0x80
E41A 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.11  RCF   Reset Carry Flag   C <- 0
                         ; --------------------------------------------------------------------
E41D 30 11      TSTOP11  LDA #0x11
E41F 36                  NOTA
E420 31 C0 00            STA LEDPORT ; Output to LED port
E423 30 01               LDA #0x01   ; Set carry flag to 1
E425 31 1F FB            STA CARRY
E428 11                  RCF         ; Reset Carry Flag 
E429 2A 1F FB            LDA CARRY   ; Check carry is now cleared
E42C 2D 00               CMPA #0x00
E42E 2B F8 00            JNE FAIL
E431 11                  RCF         ; Do again a Reset Carry Flag 
E432 2A 1F FB            LDA CARRY   ; Check carry is still cleared
E435 2D 00               CMPA #0x00
E437 2B F8 00            JNE FAIL
E43A 30 A5               LDA #0xA5   ; Check register A is not affected by a Reset Carry Flag
E43C 11                  RCF         ; Reset Carry Flag
E43D 2D A5               CMPA #0xA5  ; If A value not same then fail
E43F 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.12  SCF   Set Carry Flag   C <- 1
                         ; --------------------------------------------------------------------
E442 30 12      TSTOP12  LDA #0x12
E444 36                  NOTA
E445 31 C0 00            STA LEDPORT ; Output to LED port
E448 30 00               LDA #0x00   ; Clear carry flag
E44A 31 1F FB            STA CARRY
E44D 12                  SCF         ; Set Carry Flag 
E44E 2A 1F FB            LDA CARRY   ; Check carry is set
E451 2D 01               CMPA #0x01
E453 2B F8 00            JNE FAIL
E456 12                  SCF         ; Set Carry Flag again
E457 2A 1F FB            LDA CARRY   ; Check carry is still set
E45A 2D 01               CMPA #0x01
E45C 2B F8 00            JNE FAIL
E45F 30 BE               LDA #0xBE   ; Check register A is not affected by a Set Carry Flag
E461 12                  SCF         ; Set Carry Flag
E462 2D BE               CMPA #0xBE  ; If A value not same then fail
E464 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.29 ADDA 0x****  
                         ; ADD A WITH BYTE AT ADDRESS, C UPDATE
                         ; --------------------------------------------------------------------
E467 30 29      TSTOP29  LDA #0x29
E469 36                  NOTA
E46A 31 C0 00            STA LEDPORT ; Output to LED port
E46D 30 5F               LDA #0x5F   ; Store a value in RAM
E46F 31 01 23            STA 0x0123   
E472 30 63               LDA #0x63
E474 29 01 23            ADDA 0x0123 ; Add to A the byte at address location
E477 2D C2               CMPA #0xC2  ; Check the sum
E479 2B F8 00            JNE FAIL    ; Jump if result not good
E47C 2A 1F FB            LDA CARRY   ; Read the Carry Status
E47F 2D 00               CMPA #0x00  ; No carry expected then C should be '0'
E481 2B F8 00            JNE FAIL    ; Error if carry is set

E484 30 AC               LDA #0xAC   ; Store another value in RAM
E486 31 10 56            STA 0x1056   
E489 30 D9               LDA #0xD9
E48B 29 10 56            ADDA 0x1056 ; Add to A the byte at address location
E48E 2D 85               CMPA #0x85  ; Check the sum LSB
E490 2B F8 00            JNE FAIL    ; Jump if result not as expected
E493 2A 1F FB            LDA CARRY   ; Read the Carry Status
E496 2D 01               CMPA #0x01  ; The Carry Status bit is expected to be '1' with <7:1> set to '0'
E498 2B F8 00            JNE FAIL    ; Error if different
                         ; --------------------------------------------------------------------
                         ; OP.2A LDA 0x****  
                         ; LOAD A WITH BYTE AT ADDRESS Test LDA #0x** instruction 
                         ; --------------------------------------------------------------------
E49B 30 2A      TSTOP2A  LDA #0x2A
E49D 36                  NOTA
E49E 31 C0 00            STA LEDPORT ; Output to LED port
E4A1 30 AA               LDA #0xAA   ; Load immediate in register A
E4A3 2D AA               CMPA #0xAA
E4A5 2B F8 00            JNE FAIL
E4A8 30 01               LDA #0x01
E4AA 2D 01               CMPA #0x01
E4AC 2B F8 00            JNE FAIL
E4AF 30 02               LDA #0x02
E4B1 2D 02               CMPA #0x02
E4B3 2B F8 00            JNE FAIL
E4B6 30 04               LDA #0x04
E4B8 2D 04               CMPA #0x04
E4BA 2B F8 00            JNE FAIL
E4BD 30 08               LDA #0x08
E4BF 2D 08               CMPA #0x08
E4C1 2B F8 00            JNE FAIL
E4C4 30 10               LDA #0x10
E4C6 2D 10               CMPA #0x10
E4C8 2B F8 00            JNE FAIL
E4CB 30 20               LDA #0x20
E4CD 2D 20               CMPA #0x20
E4CF 2B F8 00            JNE FAIL
E4D2 30 40               LDA #0x40
E4D4 2D 40               CMPA #0x40
E4D6 2B F8 00            JNE FAIL
E4D9 30 80               LDA #0x80
E4DB 2D 80               CMPA #0x80
E4DD 2B F8 00            JNE FAIL
E4E0 30 55               LDA #0x55
E4E2 2D 55               CMPA #0x55
E4E4 2B F8 00            JNE FAIL
E4E7 30 FF               LDA #0xFF
E4E9 2D FF               CMPA #0xFF
E4EB 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2B JNE 0x****  
                         ; JUMP IF E=0
                         ; Only a partial validation because i do not have symbolic address
                         ; processing in the assembler program.
                         ; --------------------------------------------------------------------
E4EE 30 2B      TSTOP2B  LDA #0x2B
E4F0 36                  NOTA
E4F1 31 C0 00            STA LEDPORT ; Output to LED port
E4F4 30 6D               LDA #0x6D   ; Load a value in A
E4F6 2D 6D               CMPA #0x6D  ; Compare with the same value
E4F8 2B F8 00            JNE FAIL    ; Error if values are different
E4FB 30 10               LDA #0x10
E4FD 2D 10               CMPA #0x10
E4FF 2B F8 00            JNE FAIL
E502 30 01               LDA #0x01
E504 2D 01               CMPA #0x01
E506 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2C JEQ 0x****
                         ; JUMP IF E=1
                         ; --------------------------------------------------------------------
E509 30 2C      TST2C    LDA #0x2C
E50B 36                  NOTA
E50C 31 C0 00            STA LEDPORT ; Output to LED port
E50F 30 7A               LDA #0x7A   ; Load a value in A
E511 2D 28               CMPA #0x28  ; Compare with a different value
E513 2C F8 00            JEQ FAIL    ; If appear identical then it's and error
E516 30 FE               LDA #0xFE   ; Again with adifference 
E518 2D FF               CMPA #0xFF
E51A 2C F8 00            JEQ FAIL 
E51D 30 01               LDA #0x01   ; Another with difference
E51F 2D 10               CMPA #0x10
E521 2C F8 00            JEQ FAIL
E524 30 AB               LDA #0xAB   ; Now compare when values are identical
E526 2D AB               CMPA #0xAB
E528 2C E5 2E            JEQ TST2C_1 ; Testing if equal?
E52B 32 F8 00            JMP FAIL    ; Result say both are not equal then it's a failure
E52E 30 00      TST2C_1  LDA #0x00   ; Result say the values are identical so we are passing
E530 2D 00               CMPA #0x00
E532 2C E5 38            JEQ TST2C_2 ; Testing if equal?
E535 32 F8 00            JMP FAIL    ; if different then it's a failure
E538 30 01      TST2C_2  LDA #0x01
E53A 2D 01               CMPA #0x01
E53C 2C E5 42            JEQ TST2C_3 ; Testing if equal?
E53F 32 F8 00            JMP FAIL    ; if different then it's a failure
E542 30 02      TST2C_3  LDA #0x02
E544 2D 02               CMPA #0x02
E546 2C E5 4C            JEQ TST2C_4 ; Testing if equal?
E549 32 F8 00            JMP FAIL    ; if different then it's a failure
E54C 30 04      TST2C_4  LDA #0x04
E54E 2D 04               CMPA #0x04
E550 2C E5 56            JEQ TST2C_5 ; Testing if equal?
E553 32 F8 00            JMP FAIL    ; if different then it's a failure
E556 30 08      TST2C_5  LDA #0x08
E558 2D 08               CMPA #0x08
E55A 2C E5 60            JEQ TST2C_6 ; Testing if equal?
E55D 32 F8 00            JMP FAIL    ; if different then it's a failure
E560 30 10      TST2C_6  LDA #0x10
E562 2D 10               CMPA #0x10
E564 2C E5 6A            JEQ TST2C_7 ; Testing if equal?
E567 32 F8 00            JMP FAIL    ; if different then it's a failure
E56A 30 20      TST2C_7  LDA #0x20
E56C 2D 20               CMPA #0x20
E56E 2C E5 74            JEQ TST2C_8 ; Testing if equal?
E571 32 F8 00            JMP FAIL    ; if different then it's a failure         
E574 30 40      TST2C_8  LDA #0x40
E576 2D 40               CMPA #0x40
E578 2C E5 7E            JEQ TST2C_9 ; Testing if equal?
E57B 32 F8 00            JMP FAIL    ; if different then it's a failure         
E57E 30 80      TST2C_9  LDA #0x80
E580 2D 80               CMPA #0x80
E582 2C E5 88            JEQ TST2C_10 ; Testing if equal?
E585 32 F8 00            JMP FAIL    ; if different then it's a failure         
E588 09         TST2C_10 NOP
                         ; --------------------------------------------------------------------
                         ; OP.2D CMPA #0x**
                         ; COMPARE A WITH IMMEDIATE VALUE    EQUAL STATUS BIT (E) UPDATED
                         ; --------------------------------------------------------------------
E589 30 2D      TSTOP2D  LDA #0x2D
E58B 36                  NOTA
E58C 31 C0 00            STA LEDPORT ; Output to LED port
E58F 30 12               LDA #0x12   ; Load a value in A
E591 2D 12               CMPA #0x12  ; Compare with identical value
E593 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS 
E596 2D 01               CMPA #0x01  ; Verify bit<0> E = '1' and all others bits <7:1> are '0'    
E598 2B F8 00            JNE FAIL    ; If different then it's and error
E59B 30 AA               LDA #0xAA
E59D 2D 55               CMPA #0x55  ; Compare with a different value
E59F 2A 1F FA            LDA EQUAL   ; Inspect EQUAL STATUS
E5A2 2D 00               CMPA #0x00  ; Verify bit<0> E = '0' and all others bits <7:1> are '0'    
E5A4 2B F8 00            JNE FAIL    ; If different then it's and error
                         ; --------------------------------------------------------------------
                         ; OP.2E ADCA #0x**
                         ; REG A = REG A + IMMEDIATE BYTE + CARRY (C)   
                         ; CARRY STATUS (C) IS UPDATED
                         ; --------------------------------------------------------------------
E5A7 30 2E      TSTOP2E  LDA #0x2E
E5A9 36                  NOTA
E5AA 31 C0 00            STA LEDPORT ; Output to LED port
E5AD 30 00               LDA #0x00   ; Clear CARRY (C)
E5AF 31 1F FB            STA CARRY      
E5B2 30 45               LDA #0x45
E5B4 2E 5B               ADCA #0x5B
E5B6 2D A0               CMPA #0xA0  ; Verify summ
E5B8 2B F8 00            JNE FAIL
E5BB 2A 1F FB            LDA CARRY   ; Check carry
E5BE 2D 00               CMPA #0x00  ; Should be clear
E5C0 2B F8 00            JNE FAIL

E5C3 30 01               LDA #0x01   ; Set CARRY (C)
E5C5 31 1F FB            STA CARRY
E5C8 30 56               LDA #0x56
E5CA 2E 6D               ADCA #0x6D
E5CC 2D C4               CMPA #0xC4   ; Verify summ
E5CE 2B F8 00            JNE FAIL
E5D1 2A 1F FB            LDA CARRY   ; Check carry
E5D4 2D 00               CMPA #0x00  ; Should be clear
E5D6 2B F8 00            JNE FAIL

E5D9 30 00               LDA #0x00   ; Clear CARRY (C)
E5DB 31 1F FB            STA CARRY
E5DE 30 7F               LDA #0x7F
E5E0 2E DE               ADCA #0xDE
E5E2 2D 5D               CMPA #0x5D  ; Verify summ
E5E4 2B F8 00            JNE FAIL
E5E7 2A 1F FB            LDA CARRY   ; Check carry
E5EA 2D 01               CMPA #0x01  ; Should be set
E5EC 2B F8 00            JNE FAIL

E5EF 30 01               LDA #0x01H  ; Set CARRY (C)
E5F1 31 1F FB            STA CARRY
E5F4 30 FF               LDA #0xFF
E5F6 2E FF               ADCA #0xFF
E5F8 2D FF               CMPA #0xFF  ; Verify summ
E5FA 2B F8 00            JNE FAIL
E5FD 2A 1F FB            LDA CARRY   ; Check carry
E600 2D 01               CMPA #0x01  ; Should be set
E602 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.2F ADDA #0x**
                         ; ACCA+M>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
E605 30 2F      TSTOP2F  LDA #0x2F
E607 36                  NOTA
E608 31 C0 00            STA LEDPORT ; Output to LED port
E60B 30 23               LDA #0x23
E60D 2F 45               ADDA #0x45
E60F 2D 68               CMPA #0x68
E611 2B F8 00            JNE FAIL
E614 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E617 2D 00               CMPA #0x00  ; Expecting C=0
E619 2B F8 00            JNE FAIL
E61C 30 8A               LDA #0x8A
E61E 2F BD               ADDA #0xBD
E620 2D 47               CMPA #0x47   
E622 2B F8 00            JNE FAIL
E625 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E628 2D 01               CMPA #0x01  ; Expecting C=1
E62A 2B F8 00            JNE FAIL
E62D 30 01               LDA #0x01
E62F 2F 02               ADDA #0x02
E631 2D 03               CMPA #0x03
E633 2B F8 00            JNE FAIL
E636 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E639 2D 00               CMPA #0x00  ; Expecting C=0
E63B 2B F8 00            JNE FAIL
E63E 30 FF               LDA #0xFF
E640 2F FF               ADDA #0xFF
E642 2D FE               CMPA #0xFE
E644 2B F8 00            JNE FAIL
E647 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E64A 2D 01               CMPA #0x01   ; Expecting C=1
E64C 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.30 LDA #0x**  
                         ; LOAD IMMEDIATE VALUE IN REGISTER A
                         ; --------------------------------------------------------------------
E64F 30 30      TSTOP30  LDA #0x30
E651 36                  NOTA
E652 31 C0 00            STA LEDPORT ; Output to LED port
E655 30 00               LDA #0x00
E657 2D 00               CMPA #0x00
E659 2B F8 00            JNE FAIL
E65C 30 01               LDA #0x01
E65E 2D 01               CMPA #0x01
E660 2B F8 00            JNE FAIL
E663 30 02               LDA #0x02
E665 2D 02               CMPA #0x02
E667 2B F8 00            JNE FAIL
E66A 30 04               LDA #0x04
E66C 2D 04               CMPA #0x04
E66E 2B F8 00            JNE FAIL
E671 30 08               LDA #0x08
E673 2D 08               CMPA #0x08
E675 2B F8 00            JNE FAIL
E678 30 10               LDA #0x10
E67A 2D 10               CMPA #0x10
E67C 2B F8 00            JNE FAIL
E67F 30 20               LDA #0x20
E681 2D 20               CMPA #0x20
E683 2B F8 00            JNE FAIL
E686 30 40               LDA #0x40
E688 2D 40               CMPA #0x40
E68A 2B F8 00            JNE FAIL
E68D 30 80               LDA #0x80
E68F 2D 80               CMPA #0x80
E691 2B F8 00            JNE FAIL
E694 30 55               LDA #0x55
E696 2D 55               CMPA #0x55
E698 2B F8 00            JNE FAIL
E69B 30 AA               LDA #0xAA
E69D 2D AA               CMPA #0xAA
E69F 2B F8 00            JNE FAIL
E6A2 30 FF               LDA #0xFF
E6A4 2D FF               CMPA #0xFF
E6A6 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.31 STA 0x**** 
                         ; STORE REG.A TO ADDRESSE
                         ; --------------------------------------------------------------------
E6A9 30 31      TSTOP31  LDA #0x31
E6AB 36                  NOTA
E6AC 31 C0 00            STA LEDPORT ; Output to LED port
E6AF 30 12               LDA #0x12   ; Write to RAM
E6B1 31 00 00            STA 0x0000
E6B4 30 23               LDA #0x23
E6B6 31 00 01            STA 0x0001
E6B9 30 34               LDA #0x34
E6BB 31 00 02            STA 0x0002
E6BE 30 45               LDA #0x45
E6C0 31 00 04            STA 0x0004
E6C3 30 56               LDA #0x56
E6C5 31 00 08            STA 0x0008
E6C8 30 67               LDA #0x67
E6CA 31 00 10            STA 0x0010
E6CD 30 78               LDA #0x78
E6CF 31 00 20            STA 0x0020
E6D2 30 89               LDA #0x89
E6D4 31 00 40            STA 0x0040
E6D7 30 AB               LDA #0xAB
E6D9 31 00 80            STA 0x0080
E6DC 30 BC               LDA #0xBC
E6DE 31 01 00            STA 0x0100
E6E1 30 CD               LDA #0xCD
E6E3 31 02 00            STA 0x0200
E6E6 30 DE               LDA #0xDE
E6E8 31 04 00            STA 0x0400
E6EB 30 22               LDA #0x22
E6ED 31 08 00            STA 0x0800
E6F0 30 33               LDA #0x33
E6F2 31 10 00            STA 0x1000
E6F5 30 44               LDA #0x44
E6F7 31 17 00            STA 0x1700
E6FA 2A 00 00            LDA 0x0000  ; Read from RAM and compare
E6FD 2D 12               CMPA #0x12
E6FF 2B F8 00            JNE FAIL
E702 2A 00 01            LDA 0x0001
E705 2D 23               CMPA #0x23
E707 2B F8 00            JNE FAIL
E70A 2A 00 02            LDA 0x0002
E70D 2D 34               CMPA #0x34
E70F 2B F8 00            JNE FAIL
E712 2A 00 04            LDA 0x0004
E715 2D 45               CMPA #0x45
E717 2B F8 00            JNE FAIL
E71A 2A 00 08            LDA 0x0008
E71D 2D 56               CMPA #0x56
E71F 2B F8 00            JNE FAIL
E722 2A 00 10            LDA 0x0010
E725 2D 67               CMPA #0x67
E727 2B F8 00            JNE FAIL
E72A 2A 00 20            LDA 0x0020
E72D 2D 78               CMPA #0x78
E72F 2B F8 00            JNE FAIL
E732 2A 00 40            LDA 0x0040
E735 2D 89               CMPA #0x89
E737 2B F8 00            JNE FAIL
E73A 2A 00 80            LDA 0x0080
E73D 2D AB               CMPA #0xAB
E73F 2B F8 00            JNE FAIL
E742 2A 01 00            LDA 0x0100
E745 2D BC               CMPA #0xBC
E747 2B F8 00            JNE FAIL
E74A 2A 02 00            LDA 0x0200
E74D 2D CD               CMPA #0xCD
E74F 2B F8 00            JNE FAIL
E752 2A 04 00            LDA 0x0400
E755 2D DE               CMPA #0xDE
E757 2B F8 00            JNE FAIL
E75A 2A 08 00            LDA 0x0800
E75D 2D 22               CMPA #0x22
E75F 2B F8 00            JNE FAIL
E762 2A 10 00            LDA 0x1000
E765 2D 33               CMPA #0x33
E767 2B F8 00            JNE FAIL
E76A 2A 17 00            LDA 0x1700
E76D 2D 44               CMPA #0x44
E76F 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.32 JMP 0x**** 
                         ; JUMP INCONDITIONAL TO ADDRESS
                         ; --------------------------------------------------------------------
                         ;LDA #0x32
                         ;NOTA
                         ;STA LEDPORT ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.33 ANDA #0x**  REGISTER A AND LOGICAL IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E772 30 33      TSTOP33  LDA #0x33
E774 36                  NOTA
E775 31 C0 00            STA LEDPORT ; Output to LED port
E778 30 FF               LDA #0xFF
E77A 33 52               ANDA #0x52
E77C 2D 52               CMPA #0x52
E77E 2B F8 00            JNE FAIL
E781 30 E7               LDA #0xE7
E783 33 3C               ANDA #0x3C
E785 2D 24               CMPA #0x24
E787 2B F8 00            JNE FAIL
E78A 30 00               LDA #0x00
E78C 33 00               ANDA #0x00
E78E 2D 00               CMPA #0x00
E790 2B F8 00            JNE FAIL
E793 30 FF               LDA #0xFF
E795 33 FF               ANDA #0xFF
E797 2D FF               CMPA #0xFF
E799 2B F8 00            JNE FAIL
E79C 30 FF               LDA #0xFF
E79E 33 55               ANDA #0x55
E7A0 2D 55               CMPA #0x55
E7A2 2B F8 00            JNE FAIL
E7A5 30 FF               LDA #0xFF
E7A7 33 00               ANDA #0x00
E7A9 2D 00               CMPA #0x00
E7AB 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.34 ORA #0x**   LOGICAL OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E7AE 30 34      TSTOP34  LDA #0x34
E7B0 36                  NOTA
E7B1 31 C0 00            STA LEDPORT ; Output to LED port
E7B4 30 FF               LDA #0xFF
E7B6 34 FF               ORA #0xFF
E7B8 2D FF               CMPA #0xFF
E7BA 2B F8 00            JNE FAIL
E7BD 30 00               LDA #0x00
E7BF 34 00               ORA #0x00
E7C1 2D 00               CMPA #0x00
E7C3 2B F8 00            JNE FAIL
E7C6 30 25               LDA #0x25
E7C8 34 D3               ORA #0xD3
E7CA 2D F7               CMPA #0xF7
E7CC 2B F8 00            JNE FAIL
E7CF 30 00               LDA #0x00
E7D1 34 FF               ORA #0xFF
E7D3 2D FF               CMPA #0xFF
E7D5 2B F8 00            JNE FAIL
E7D8 30 FF               LDA #0xFF
E7DA 34 00               ORA #0x00
E7DC 2D FF               CMPA #0xFF
E7DE 2B F8 00            JNE FAIL
E7E1 30 14               LDA #0x14
E7E3 34 C1               ORA #0xC1
E7E5 2D D5               CMPA #0xD5
E7E7 2B F8 00            JNE FAIL
E7EA 30 AA               LDA #0xAA
E7EC 34 55               ORA #0x55
E7EE 2D FF               CMPA #0xFF
E7F0 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.35 XORA #0x**  EXCLUSIVE OR BETWEEN REG A AND IMMEDIATE BYTE
                         ; --------------------------------------------------------------------
E7F3 30 35      TSTOP35  LDA #0x35
E7F5 36                  NOTA
E7F6 31 C0 00            STA LEDPORT ; Output to LED port
E7F9 30 00               LDA #0x00
E7FB 35 00               XORA #0x00
E7FD 2D 00               CMPA #0x00
E7FF 2B F8 00            JNE FAIL
E802 30 00               LDA #0x00
E804 35 FF               XORA #0xFF
E806 2D FF               CMPA #0xFF
E808 2B F8 00            JNE FAIL
E80B 30 FF               LDA #0xFF
E80D 35 FF               XORA #0xFF
E80F 2D 00               CMPA #0x00
E811 2B F8 00            JNE FAIL
E814 30 FF               LDA #0xFF
E816 35 55               XORA #0x55
E818 2D AA               CMPA #0xAA
E81A 2B F8 00            JNE FAIL
E81D 30 CE               LDA #0xCE
E81F 35 5A               XORA #0x5A
E821 2D 94               CMPA #0x94
E823 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.36 NOTA  LOGIC NOT ON REG A
                         ; --------------------------------------------------------------------
E826 30 36      TSTOP36  LDA #0x36
E828 36                  NOTA
E829 31 C0 00            STA LEDPORT ; Output to LED port
E82C 30 00               LDA #0x00
E82E 36                  NOTA
E82F 2D FF               CMPA #0xFF
E831 2B F8 00            JNE FAIL
E834 36                  NOTA
E835 2D 00               CMPA #0x00
E837 2B F8 00            JNE FAIL
E83A 30 55               LDA #0x55
E83C 36                  NOTA
E83D 2D AA               CMPA #0xAA
E83F 2B F8 00            JNE FAIL
E842 36                  NOTA
E843 2D 55               CMPA #0x55
E845 2B F8 00            JNE FAIL
E848 36                  NOTA
E849 2D AA               CMPA #0xAA
E84B 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.37 INCA  A = A + 1  INCREMENT REGISTRE A
                         ; E UPDATE, C unchanged
                         ; --------------------------------------------------------------------
E84E 30 37      TSTOP37  LDA #0x37
E850 36                  NOTA
E851 31 C0 00            STA LEDPORT ; Output to LED port
E854 30 00               LDA #0x00
E856 37                  INCA
E857 2D 01               CMPA #0x01
E859 2B F8 00            JNE FAIL
E85C 30 01               LDA #0x01
E85E 37                  INCA
E85F 2D 02               CMPA #0x02
E861 2B F8 00            JNE FAIL
E864 30 7C               LDA #0x7C
E866 37                  INCA
E867 37                  INCA
E868 37                  INCA
E869 37                  INCA
E86A 37                  INCA
E86B 37                  INCA
E86C 37                  INCA
E86D 37                  INCA
E86E 37                  INCA
E86F 37                  INCA
E870 2D 86               CMPA #0x86
E872 2B F8 00            JNE FAIL
E875 30 FE               LDA #0xFE
E877 37                  INCA
E878 2D FF               CMPA #0xFF
E87A 2B F8 00            JNE FAIL
E87D 30 FF               LDA #0xFF
E87F 37                  INCA
E880 2D 00               CMPA #0x00
E882 2B F8 00            JNE FAIL
E885 30 FF               LDA #0xFF
E887 37                  INCA
E888 37                  INCA
E889 2D 01               CMPA #0x01
E88B 2B F8 00            JNE FAIL
E88E 37                  INCA
E88F 37                  INCA
E890 37                  INCA
E891 37                  INCA
E892 2D 05               CMPA #0x05
E894 2B F8 00            JNE FAIL
E897 37                  INCA
E898 37                  INCA
E899 37                  INCA
E89A 37                  INCA
E89B 37                  INCA
E89C 37                  INCA
E89D 37                  INCA
E89E 37                  INCA
E89F 2D 0D               CMPA #0x0D
E8A1 2B F8 00            JNE FAIL
E8A4 30 00               LDA #0x00   ; Test Carry unchanged
E8A6 31 1F FB            STA CARRY   ; Clear Carry 
E8A9 30 FF               LDA #0xFF
E8AB 37                  INCA
E8AC 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E8AF 2D 00               CMPA #0x00  ; Expecting C=0 and <7:1> = 0
E8B1 2B F8 00            JNE FAIL
E8B4 30 01               LDA #0x01   ; Set Carry 
E8B6 31 1F FB            STA CARRY   
E8B9 30 EB               LDA #0xEB
E8BB 37                  INCA
E8BC 2A 1F FB            LDA CARRY   ; Read Carry bit <0>
E8BF 2D 01               CMPA #0x01  ; Expecting C=1 and <7:1> = 0
E8C1 2B F8 00            JNE FAIL
E8C4 30 FE               LDA #0xFE   ; Test Equal (Set when result is 0)
E8C6 37                  INCA
E8C7 2A 1F FA            LDA EQUAL   ; Read Equal status
E8CA 2D 00               CMPA #0x00  ; Expecting E=0 and <7:1> = 0
E8CC 2B F8 00            JNE FAIL
E8CF 30 FF               LDA #0xFF
E8D1 37                  INCA
E8D2 2A 1F FA            LDA EQUAL   ; Read Equal status
E8D5 2D 01               CMPA #0x01  ; Expecting E=1 and <7:1> = 0
E8D7 2B F8 00            JNE FAIL
E8DA 30 00               LDA #0x00
E8DC 37                  INCA
E8DD 2A 1F FA            LDA EQUAL
E8E0 2D 00               CMPA #0x00  ; Expecting E=0 and <7:1> = 0
E8E2 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.38  LDX #0x****   Load X Register with 16 bits immediate value
                         ; --------------------------------------------------------------------
E8E5 30 38      TSTOP38  LDA #0x38
E8E7 36                  NOTA
E8E8 31 C0 00            STA LEDPORT ; Output to LED port
E8EB 38 12 34            LDX #0x1234
E8EE 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E8F1 2D 12               CMPA #0x12
E8F3 2B F8 00            JNE FAIL
E8F6 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E8F9 2D 34               CMPA #0x34
E8FB 2B F8 00            JNE FAIL
E8FE 38 AB CD            LDX #0xABCD
E901 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E904 2D AB               CMPA #0xAB
E906 2B F8 00            JNE FAIL
E909 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E90C 2D CD               CMPA #0xCD
E90E 2B F8 00            JNE FAIL
                         ; --------------------------------------------------------------------
                         ; OP.39  INCX   Increment Register X,  Carry Not Updated
                         ; --------------------------------------------------------------------
E911 30 39      TSTOP39  LDA #0x39
E913 36                  NOTA
E914 31 C0 00            STA LEDPORT ; Output to LED port
E917 38 00 00            LDX #0x0000 ; Clear X register
E91A 39                  INCX        ; Increment X
E91B 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E91E 2D 01               CMPA #0x01
E920 2B F8 00            JNE FAIL
E923 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E926 2D 00               CMPA #0x00
E928 2B F8 00            JNE FAIL
E92B 39                  INCX
E92C 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E92F 2D 02               CMPA #0x02
E931 2B F8 00            JNE FAIL
E934 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E937 2D 00               CMPA #0x00
E939 2B F8 00            JNE FAIL

E93C 38 00 FF            LDX #0x00FF ; Test a carry set
E93F 39                  INCX        ; Increment X
E940 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E943 2D 00               CMPA #0x00
E945 2B F8 00            JNE FAIL
E948 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E94B 2D 01               CMPA #0x01
E94D 2B F8 00            JNE FAIL
E950 39                  INCX        ; Increment X
E951 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E954 2D 01               CMPA #0x01
E956 2B F8 00            JNE FAIL
E959 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E95C 2D 01               CMPA #0x01
E95E 2B F8 00            JNE FAIL

E961 38 1E FF            LDX #0x1EFF
E964 39                  INCX        ; Increment X
E965 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E968 2D 00               CMPA #0x00
E96A 2B F8 00            JNE FAIL
E96D 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E970 2D 1F               CMPA #0x1F
E972 2B F8 00            JNE FAIL

E975 38 FF FF            LDX #0xFFFF
E978 39                  INCX        ; Increment X
E979 2A 1F F4            LDA XL      ; Read Reg X LSB into A
E97C 2D 00               CMPA #0x00
E97E 2B F8 00            JNE FAIL
E981 2A 1F F3            LDA XH      ; Read Reg X MSB into A
E984 2D 00               CMPA #0x00
E986 2B F8 00            JNE FAIL

                         ; --------------------------------------------------------------------
                         ; FIBONACCI TEST
                         ; --------------------------------------------------------------------         
E989 30 80      TSTFIBON LDA #0x80
E98B 36                  NOTA
E98C 31 C0 00            STA LEDPORT ; Output to LED port
                                     ;
E98F 30 00               LDA #0x00   ; Init first number with 00H
E991 31 10 00            STA 0x1000
E994 30 01               LDA #0x01   ; Init second number with 01H
E996 31 10 01            STA 0x1001
E999 2A 10 00            LDA 0x1000  ; Load first number in A
E99C 29 10 01            ADDA 0x1001 ; Add second number to A
E99F 31 10 02            STA 0x1002  ; Store the summ
E9A2 2D 01               CMPA #0x01  ; HEX   Decimal  Real Value (in 8 bit storage only)
E9A4 2B F8 00            JNE FAIL    ; x01   1        1

E9A7 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9AA 31 10 00            STA 0x1000
E9AD 2A 10 02            LDA 0x1002  ; Move summ to the second number
E9B0 31 10 01            STA 0x1001
E9B3 2A 10 00            LDA 0x1000  ; Load first number in A
E9B6 29 10 01            ADDA 0x1001 ; Add second number to A
E9B9 31 10 02            STA 0x1002  ; Store the summ
E9BC 2D 02               CMPA #0x02  ; HEX   Decimal  Real Value
E9BE 2B F8 00            JNE FAIL    ; x02   2        2

E9C1 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9C4 31 10 00            STA 0x1000
E9C7 2A 10 02            LDA 0x1002   ; Move summ to the second number
E9CA 31 10 01            STA 0x1001
E9CD 2A 10 00            LDA 0x1000  ; Load first number in A
E9D0 29 10 01            ADDA 0x1001 ; Add second number to A
E9D3 31 10 02            STA 0x1002  ; Store the summ
E9D6 2D 03               CMPA #0x03  ; HEX   Decimal  Real Value
E9D8 2B F8 00            JNE FAIL    ; x03   3        3

E9DB 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9DE 31 10 00            STA 0x1000
E9E1 2A 10 02            LDA 0x1002  ; Move summ to the second number
E9E4 31 10 01            STA 0x1001
E9E7 2A 10 00            LDA 0x1000  ; Load first number in A
E9EA 29 10 01            ADDA 0x1001 ; Add second number to A
E9ED 31 10 02            STA 0x1002  ; Store the summ
E9F0 2D 05               CMPA #0x05  ; HEX   Decimal  Real Value
E9F2 2B F8 00            JNE FAIL    ; x05   5        5

E9F5 2A 10 01            LDA 0x1001  ; Move second number to the first number
E9F8 31 10 00            STA 0x1000
E9FB 2A 10 02            LDA 0x1002  ; Move summ to the second number
E9FE 31 10 01            STA 0x1001
EA01 2A 10 00            LDA 0x1000  ; Load first number in A
EA04 29 10 01            ADDA 0x1001 ; Add second number to A
EA07 31 10 02            STA 0x1002  ; Store the summ
EA0A 2D 08               CMPA #0x08  ; HEX   Decimal  Real Value
EA0C 2B F8 00            JNE FAIL    ; x08   8        8

EA0F 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA12 31 10 00            STA 0x1000
EA15 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA18 31 10 01            STA 0x1001
EA1B 2A 10 00            LDA 0x1000  ; Load first number in A
EA1E 29 10 01            ADDA 0x1001 ; Add second number to A
EA21 31 10 02            STA 0x1002  ; Store the summ
EA24 2D 0D               CMPA #0x0D  ; HEX   Decimal  Real Value
EA26 2B F8 00            JNE FAIL    ; x0D   13       13

EA29 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA2C 31 10 00            STA 0x1000
EA2F 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA32 31 10 01            STA 0x1001
EA35 2A 10 00            LDA 0x1000  ; Load first number in A
EA38 29 10 01            ADDA 0x1001 ; Add second number to A
EA3B 31 10 02            STA 0x1002  ; Store the summ
EA3E 2D 15               CMPA #0x15  ; HEX   Decimal  Real Value
EA40 2B F8 00            JNE FAIL    ; x15   21       21

EA43 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA46 31 10 00            STA 0x1000
EA49 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA4C 31 10 01            STA 0x1001
EA4F 2A 10 00            LDA 0x1000  ; Load first number in A
EA52 29 10 01            ADDA 0x1001 ; Add second number to A
EA55 31 10 02            STA 0x1002  ; Store the summ
EA58 2D 22               CMPA #0x22  ; HEX   Decimal  Real Value
EA5A 2B F8 00            JNE FAIL    ; x22   34       34

EA5D 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA60 31 10 00            STA 0x1000
EA63 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA66 31 10 01            STA 0x1001
EA69 2A 10 00            LDA 0x1000  ; Load first number in A
EA6C 29 10 01            ADDA 0x1001 ; Add second number to A
EA6F 31 10 02            STA 0x1002  ; Store the summ
EA72 2D 37               CMPA #0x37  ; HEX   Decimal  Real Value
EA74 2B F8 00            JNE FAIL    ; x37   55       55

EA77 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA7A 31 10 00            STA 0x1000
EA7D 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA80 31 10 01            STA 0x1001
EA83 2A 10 00            LDA 0x1000  ; Load first number in A
EA86 29 10 01            ADDA 0x1001 ; Add second number to A
EA89 31 10 02            STA 0x1002  ; Store the summ
EA8C 2D 59               CMPA #0x59  ; HEX   Decimal  Real Value
EA8E 2B F8 00            JNE FAIL    ; x59   89       89

EA91 2A 10 01            LDA 0x1001  ; Move second number to the first number
EA94 31 10 00            STA 0x1000
EA97 2A 10 02            LDA 0x1002  ; Move summ to the second number
EA9A 31 10 01            STA 0x1001
EA9D 2A 10 00            LDA 0x1000  ; Load first number in A
EAA0 29 10 01            ADDA 0x1001 ; Add second number to A
EAA3 31 10 02            STA 0x1002  ; Store the summ
EAA6 2D 90               CMPA #0x90  ; HEX   Decimal  Real Value
EAA8 2B F8 00            JNE FAIL    ; x90   144      144

EAAB 2A 10 01            LDA 0x1001  ; Move second number to the first number
EAAE 31 10 00            STA 0x1000
EAB1 2A 10 02            LDA 0x1002  ; Move summ to the second number
EAB4 31 10 01            STA 0x1001
EAB7 2A 10 00            LDA 0x1000  ; Load first number in A
EABA 29 10 01            ADDA 0x1001 ; Add second number to A
EABD 31 10 02            STA 0x1002  ; Store the summ
EAC0 2D E9               CMPA #0xE9  ; HEX   Decimal  Real Value
EAC2 2B F8 00            JNE FAIL    ; xE9   233      233

EAC5 2A 10 01            LDA 0x1001  ; Move second number to the first number
EAC8 31 10 00            STA 0x1000
EACB 2A 10 02            LDA 0x1002  ; Move summ to the second number
EACE 31 10 01            STA 0x1001
EAD1 2A 10 00            LDA 0x1000  ; Load first number in A
EAD4 29 10 01            ADDA 0x1001 ; Add second number to A
EAD7 31 10 02            STA 0x1002  ; Store the summ
EADA 2D 79               CMPA #0x79  ; HEX   Decimal  Real Value
EADC 2B F8 00            JNE FAIL    ; x79   121      377 - (256*1) = 121

EADF 2A 10 01            LDA 0x1001  ; Move second number to the first number
EAE2 31 10 00            STA 0x1000
EAE5 2A 10 02            LDA 0x1002  ; Move summ to the second number
EAE8 31 10 01            STA 0x1001
EAEB 2A 10 00            LDA 0x1000  ; Load first number in A
EAEE 29 10 01            ADDA 0x1001 ; Add second number to A
EAF1 31 10 02            STA 0x1002  ; Store the summ
EAF4 2D 62               CMPA #0x62  ; HEX   Decimal  Real Value
EAF6 2B F8 00            JNE FAIL    ; x62   98       610 - (256*2) = 98

EAF9 2A 10 01            LDA 0x1001  ; Move second number to the first number
EAFC 31 10 00            STA 0x1000
EAFF 2A 10 02            LDA 0x1002  ; Move summ to the second number
EB02 31 10 01            STA 0x1001
EB05 2A 10 00            LDA 0x1000  ; Load first number in A
EB08 29 10 01            ADDA 0x1001 ; Add second number to A
EB0B 31 10 02            STA 0x1002  ; Store the summ
EB0E 2D DB               CMPA #0xDB  ; HEX   Decimal  Real Value
EB10 2B F8 00            JNE FAIL    ; xDB   219      987 - (256*3) = 219         

                         ; --------------------------------------------------------------------      
                         ; END OF FIBONACCI TEST
                         ; --------------------------------------------------------------------      

                         ; ---------
                         ; Loop test
                         ; ---------
EB13 30 81      LOOPTST  LDA #0x81
EB15 36                  NOTA
EB16 31 C0 00            STA LEDPORT    ; Output to LED port
EB19 30 05               LDA #0x05      ; Init a counter of iterations
EB1B 31 10 0F            STA ?b0
EB1E 2A 10 0F   LOOPTST1 LDA ?b0        ; Read counter
EB21 2D 00               CMPA #0x00     ; Is it 0?
EB23 2C EB 2D            JEQ LOOPTST2   ; Yes then it's the end fo the test
EB26 2F FF               ADDA #0xFF     ; Add -1 in complement 2 (equivalent to decrement)
EB28 31 10 0F            STA ?b0        ; Save decremented count
EB2B 0C F1               JRA LOOPTST1
EB2D 09         LOOPTST2 NOP            ; End of decrement loop         

                         ; -----------------
                         ; Math Library Test
                         ; -----------------
                         ; Test add16_w0_w0_w1  w0 <= w0 + w1
EB2E 30 82               LDA #0x82
EB30 36                  NOTA
EB31 31 C0 00            STA LEDPORT ; Output to LED port
EB34 30 BE               LDA #0xBE   ; w0 = 0xBEEF
EB36 31 10 0E            STA ?b1
EB39 30 EF               LDA #0xEF
EB3B 31 10 0F            STA ?b0
EB3E 30 DE               LDA #0xDE   ; w1 = 0xDEAD
EB40 31 10 0C            STA ?b3
EB43 30 AD               LDA #0xAD
EB45 31 10 0D            STA ?b2
EB48 06 EC 72            JSR ?add16_w0_w0_w1  ; w0 <= w0 + w1
EB4B 2A 10 0E            LDA ?b1              ; Expected w0 = 9D9C + C set
EB4E 2D 9D               CMPA #0x9D
EB50 2B F8 00            JNE FAIL
EB53 2A 10 0F            LDA ?b0
EB56 2D 9C               CMPA #0x9C
EB58 2B F8 00            JNE FAIL
EB5B 2A 1F FB            LDA CARRY
EB5E 2D 01               CMPA #0x01
EB60 2B F8 00            JNE FAIL

                         ; Test add32_l0_l0_l1  l0 <= l0 + l1
EB63 30 83               LDA #0x83
EB65 36                  NOTA
EB66 31 C0 00            STA LEDPORT ; Output to LED port
EB69 30 89               LDA #0x89   ; l0 = 0x89ABCDEF
EB6B 31 10 0C            STA ?b3
EB6E 30 AB               LDA #0xAB
EB70 31 10 0D            STA ?b2
EB73 30 CD               LDA #0xCD
EB75 31 10 0E            STA ?b1
EB78 30 EF               LDA #0xEF
EB7A 31 10 0F            STA ?b0
EB7D 30 DE               LDA #0xDE   ; l1 = DEADBEEF
EB7F 31 10 08            STA ?b7
EB82 30 AD               LDA #0xAD
EB84 31 10 09            STA ?b6
EB87 30 BE               LDA #0xBE
EB89 31 10 0A            STA ?b5
EB8C 30 EF               LDA #0xEF
EB8E 31 10 0B            STA ?b4
EB91 06 EC 85            JSR ?add32_l0_l0_l1  ; l0 <= l0 + l1
EB94 2A 10 0C            LDA ?b3              ; Expected l0 = 0x68598CDE + C set
EB97 2D 68               CMPA #0x68
EB99 2B F8 00            JNE FAIL
EB9C 2A 10 0D            LDA ?b2
EB9F 2D 59               CMPA #0x59
EBA1 2B F8 00            JNE FAIL
EBA4 2A 10 0E            LDA ?b1
EBA7 2D 8C               CMPA #0x8C
EBA9 2B F8 00            JNE FAIL
EBAC 2A 10 0F            LDA ?b0
EBAF 2D DE               CMPA #0xDE
EBB1 2B F8 00            JNE FAIL
EBB4 2A 1F FB            LDA CARRY
EBB7 2D 01               CMPA #0x01
EBB9 2B F8 00            JNE FAIL

                         ; Test ?inc32_l0_l0   l0 <= l0 + 1
EBBC 30 84               LDA #0x84
EBBE 36                  NOTA
EBBF 31 C0 00            STA LEDPORT ; Output to LED port
EBC2 30 FF               LDA #0xFF   ; l0 = 0xFFFFFFFF
EBC4 31 10 0C            STA ?b3
EBC7 30 FF               LDA #0xFF
EBC9 31 10 0D            STA ?b2
EBCC 30 FF               LDA #0xFF
EBCE 31 10 0E            STA ?b1
EBD1 30 FF               LDA #0xFF
EBD3 31 10 0F            STA ?b0
EBD6 06 EC AA            JSR ?inc32_l0_l0  ; l0 <= l0 + 1
                         ; Expected l0 = 0x00000000
EBD9 2A 10 0C            LDA ?b3     ; Expected l0 = 0x00000000
EBDC 2D 00               CMPA #0x00
EBDE 2B F8 00            JNE FAIL
EBE1 2A 10 0D            LDA ?b2
EBE4 2D 00               CMPA #0x00
EBE6 2B F8 00            JNE FAIL
EBE9 2A 10 0E            LDA ?b1
EBEC 2D 00               CMPA #0x00
EBEE 2B F8 00            JNE FAIL
EBF1 2A 10 0F            LDA ?b0
EBF4 2D 00               CMPA #0x00
EBF6 2B F8 00            JNE FAIL
EBF9 06 EC AA            JSR ?inc32_l0_l0  ; l0 <= l0 + 1
EBFC 2A 10 0C            LDA ?b3
EBFF 2D 00               CMPA #0x00
EC01 2B F8 00            JNE FAIL
EC04 2A 10 0D            LDA ?b2
EC07 2D 00               CMPA #0x00
EC09 2B F8 00            JNE FAIL
EC0C 2A 10 0E            LDA ?b1
EC0F 2D 00               CMPA #0x00
EC11 2B F8 00            JNE FAIL
EC14 2A 10 0F            LDA ?b0
EC17 2D 01               CMPA #0x01
EC19 2B F8 00            JNE FAIL
EC1C 06 EC AA            JSR ?inc32_l0_l0
EC1F 06 EC AA            JSR ?inc32_l0_l0
EC22 06 EC AA            JSR ?inc32_l0_l0
EC25 06 EC AA            JSR ?inc32_l0_l0
EC28 06 EC AA            JSR ?inc32_l0_l0
EC2B 06 EC AA            JSR ?inc32_l0_l0
EC2E 06 EC AA            JSR ?inc32_l0_l0
EC31 06 EC AA            JSR ?inc32_l0_l0
EC34 06 EC AA            JSR ?inc32_l0_l0
EC37 06 EC AA            JSR ?inc32_l0_l0
EC3A 06 EC AA            JSR ?inc32_l0_l0
EC3D 06 EC AA            JSR ?inc32_l0_l0
EC40 06 EC AA            JSR ?inc32_l0_l0
EC43 06 EC AA            JSR ?inc32_l0_l0
EC46 06 EC AA            JSR ?inc32_l0_l0
EC49 06 EC AA            JSR ?inc32_l0_l0
EC4C 06 EC AA            JSR ?inc32_l0_l0
EC4F 2A 10 0C            LDA ?b3
EC52 2D 00               CMPA #0x00
EC54 2B F8 00            JNE FAIL
EC57 2A 10 0D            LDA ?b2
EC5A 2D 00               CMPA #0x00
EC5C 2B F8 00            JNE FAIL
EC5F 2A 10 0E            LDA ?b1
EC62 2D 00               CMPA #0x00
EC64 2B F8 00            JNE FAIL
EC67 2A 10 0F            LDA ?b0
EC6A 2D 12               CMPA #0x12
EC6C 2B F8 00            JNE FAIL

                         ; ---------------------
                         ; END Math Library Test
                         ; ---------------------

EC6F 32 E0 00            JMP 0xE000  ; Loop from start of diag test

                         ; ---------------------
                         ; Math library routines
                         ; ---------------------
                         ; virtual registers
                ;-----------------------------------------------------------------------------
                ; ?b15 ?b14 ?b13 ?b12 | ?b11 ?b10 ?b9 ?b8 | ?b7 ?b6 ?b5 ?b4 | ?b3 ?b2 ?b1 ?b0 |  8 bits
                ;    ?w7       ?w6    |    ?w5      ?w4   |   ?w3     ?w2   |   ?w1     ?w0   | 16 bits
                ;         ?l3         |         ?l2       |       ?l1       |       ?l0       | 32 bits
                ;-----------------------------------------------------------------------------
                                  ; Addition on 16 bits  
                                  ; w0 <= w0 + w1
EC72 2A 10 0F   ?add16_w0_w0_w1   LDA ?b0  
EC75 29 10 0D                     ADDA ?b2
EC78 31 10 0F                     STA ?b0
EC7B 2A 10 0E                     LDA ?b1
EC7E 28 10 0C                     ADCA ?b3
EC81 31 10 0E                     STA ?b1
EC84 07                           RTS

                                  ; Addition on 32 bits
                                  ; l0 <= l0 + l1
EC85 2A 10 0F   ?add32_l0_l0_l1   LDA ?b0  
EC88 29 10 0B                     ADDA ?b4
EC8B 31 10 0F                     STA ?b0
EC8E 2A 10 0E                     LDA ?b1
EC91 28 10 0A                     ADCA ?b5
EC94 31 10 0E                     STA ?b1
EC97 2A 10 0D                     LDA ?b2
EC9A 28 10 09                     ADCA ?b6
EC9D 31 10 0D                     STA ?b2
ECA0 2A 10 0C                     LDA ?b3
ECA3 28 10 08                     ADCA ?b7
ECA6 31 10 0C                     STA ?b3
ECA9 07                           RTS

                                  ; INC 32 bit
                                  ; l0 <= l0 + 1
ECAA 2A 10 0F   ?inc32_l0_l0      LDA ?b0
ECAD 37                           INCA
ECAE 31 10 0F                     STA ?b0
ECB1 2B EC CF                     JNE ?inc32_0x_0x_JP
ECB4 2A 10 0E                     LDA ?b1
ECB7 37                           INCA
ECB8 31 10 0E                     STA ?b1
ECBB 2B EC CF                     JNE ?inc32_0x_0x_JP
ECBE 2A 10 0D                     LDA ?b2
ECC1 37                           INCA
ECC2 31 10 0D                     STA ?b2
ECC5 2B EC CF                     JNE ?inc32_0x_0x_JP
ECC8 2A 10 0C                     LDA ?b3
ECCB 37                           INCA
ECCC 31 10 0C                     STA ?b3
ECCF 07         ?inc32_0x_0x_JP   RTS

                                  ; MUL 8-bit
                                  ; w1 (b3,b2) <= b1 * b0
ECD0 30 00      ?mul8_w1_b1_b0    LDA #0x00   ; Clear ?w1
ECD2 31 10 0D                     STA ?b2
ECD5 31 10 0C                     STA ?b3
ECD8 38 00 08                     LDX #0x0008 ; Loop counter (8 bits)
ECDB 2A 10 0F   ?mul8_w1_loop     LDA ?b0     ; Shift right ?b0 (check LSB)
ECDE 0D                           SRLA
ECDF 31 10 0F                     STA ?b0
ECE2 0F 00                        JRNC ?skip_add  ; Conditional relative jump if not Carry
                ;    BCC skip_add ; If LSB was 0, skip addition

                ;    LDA ?w1     ; Load lower half of result
                ;    ADDA ?b1    ; Add multiplicand
                ;    STA ?w1     ; Store back

                ;    LDA ?w1+1   ; Load upper half of result
                ;    ADCA #0x00  ; Add carry if necessary
                ;    STA ?w1+1   ; Store back

ECE4 2A 10 0C   ?skip_add         LDA ?b3 ; Shift right ?b3 ?b2
ECE7 0D                           SRLA     ; 0 -> b7 b6 b5 b4 b3 b2 b1 b0 -> C
ECE8 31 10 0C                     STA ?b3
ECEB 2A 10 0D                     LDA ?b2

                ;    DEX         ; Decrement loop counter
                ;    BNE mul_loop

                    ; Copy result from ?w1 to ?w0
                ;    LDA ?w1
                ;    STA ?w0
                ;    LDA ?w1+1
                ;    STA ?w0+1

ECEE 07             RTS         ; Return (Result in ?w0)


                         ; --------------------------------------------------------------------
                         ; Error routine
                         ; --------------------------------------------------------------------
                         ORG/0xF800  ; Diagnostic Error routine   
                         ;STOP        ; Stop execution
F800 32 F8 00   FAIL     JMP FAIL    ; Infinite Loop on error

                         ; --------------------------------------------------------------------
                         ; JSR and RTS Test subroutine
                         ; --------------------------------------------------------------------
                         ORG/0xFFC0
FFC0 30 11      TJSR1    LDA #0x11
FFC2 07                  RTS
                         ORG/0xFFC3
FFC3 30 22      TJSR2    LDA #0x22
FFC5 06 FF C0            JSR TJSR1
FFC8 07                  RTS
                         ORG/0xFFC9
FFC9 30 33      TJSR3    LDA #0x33
FFCB 06 FF C3            JSR TJSR2
FFCE 07                  RTS
                         ORG/0xFFCF
FFCF 30 44      TJSR4    LDA #0x44
FFD1 06 FF C9            JSR TJSR3
FFD4 07                  RTS
                         ORG/0xFFD5
FFD5 30 44      TJSR5    LDA #0x44
FFD7 06 FF CF            JSR TJSR4
FFDA 07                  RTS
                         ORG/0xFFDB
FFDB 30 55      TJSR6    LDA #0x55
FFDD 06 FF D5            JSR TJSR5
FFE0 07                  RTS
                         ORG/0xFFE1
FFE1 30 66      TJSR7    LDA #0x66
FFE3 06 FF DB            JSR TJSR6
FFE6 07                  RTS
                         ORG/0xFFE7
FFE7 30 77      TJSR8    LDA #0x77
FFE9 06 FF E1            JSR TJSR7
FFEC 07                  RTS
                         ORG/0xFFED
FFED 30 88      TJSR9    LDA #0x88
FFEF 06 FF E7            JSR TJSR8
FFF2 07                  RTS
                         ORG/0xFFF3
FFF3 30 99      TJSR10   LDA #0x99
FFF5 06 FF ED            JSR TJSR9
FFF8 07                  RTS
                         ; --------------------------------------------------------------------
                         ; Reset Vector
                         ; --------------------------------------------------------------------
                         ORG/0xFFFE  ; Set the Reset vector
FFFE E0                  DB 0xE0     ; MSB Reset Vector
FFFF 00                  DB 0x00     ; LSB Reset Vector


Symbol Table:
?b15                1000
?b14                1001
?b13                1002
?b12                1003
?b11                1004
?b10                1005
?b9                 1006
?b8                 1007
?b7                 1008
?b6                 1009
?b5                 100A
?b4                 100B
?b3                 100C
?b2                 100D
?b1                 100E
?b0                 100F
?w7                 1000
?w6                 1002
?w5                 1004
?w4                 1006
?w3                 1008
?w2                 100A
?w1                 100C
?w0                 100E
?l3                 1000
?l2                 1004
?l1                 1008
?l0                 100C
SP                  1FF0
JSH                 1FF1
JSL                 1FF2
XH                  1FF3
XL                  1FF4
EQUAL               1FFA
CARRY               1FFB
REG_A               1FFC
IPH                 1FFE
IPL                 1FFF
LEDPORT             C000
START               E000
TST01               E006
TST02               E033
TSTOP06             E060
TSTOP09             E084
TSTOP0A             E08D
TSTOP0B             E0CB
TST0B_0             E127
TST0B_1             E12A
TST0B_2             E12E
TST0B_3             E133
TST0B_4             E13A
TST0B_5             E14C
TST0B_6             E151
TST0B_7             E167
TST0B_8             E16E
TST0B_9             E170
TST0B_10            E172
TST0B_11            E187
TST0B_12            E204
TST0B_13            E207
TSTOP0D             E208
TSTOP0E             E2C2
TSTOP0F             E37C
TST0F_0             E38C
TST0F_1             E396
TST0F_2             E399
TSTOP10             E39A
TSTOP11             E41D
TSTOP12             E442
TSTOP29             E467
TSTOP2A             E49B
TSTOP2B             E4EE
TST2C               E509
TST2C_1             E52E
TST2C_2             E538
TST2C_3             E542
TST2C_4             E54C
TST2C_5             E556
TST2C_6             E560
TST2C_7             E56A
TST2C_8             E574
TST2C_9             E57E
TST2C_10            E588
TSTOP2D             E589
TSTOP2E             E5A7
TSTOP2F             E605
TSTOP30             E64F
TSTOP31             E6A9
TSTOP33             E772
TSTOP34             E7AE
TSTOP35             E7F3
TSTOP36             E826
TSTOP37             E84E
TSTOP38             E8E5
TSTOP39             E911
TSTFIBON            E989
LOOPTST             EB13
LOOPTST1            EB1E
LOOPTST2            EB2D
?add16_w0_w0_w1     EC72
?add32_l0_l0_l1     EC85
?inc32_l0_l0        ECAA
?inc32_0x_0x_JP     ECCF
?mul8_w1_b1_b0      ECD0
?mul8_w1_loop       ECDB
?skip_add           ECE4
FAIL                F800
TJSR1               FFC0
TJSR2               FFC3
TJSR3               FFC9
TJSR4               FFCF
TJSR5               FFD5
TJSR6               FFDB
TJSR7               FFE1
TJSR8               FFE7
TJSR9               FFED
TJSR10              FFF3
Assembly complete
