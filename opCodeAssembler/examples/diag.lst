; -----------------------------------------------------------------
; Homebrew MyCPU diagnostic program
; Author: Sylvain Fortin
; Date : 28 december 2023
; Documentation : diag.asm is used to test the assembler
;                 instructions of MyCPU.
; Memory map of the computer
; 0000H - 17FFH Total RAM space
; 0000H - 00FFH Stack
; 0100H - 17EF  Free for application
; 1FF0H         SP Stack Pointer 8 bit
; 1FF1H temp SP1
; 1FF2H temp SP2
; 1FFAH bit<0>	Equal
; 1FFBH bit<0>	Carry
; 1FFCH A Register
; 1FFEH IPH	Instruction Pointer MSB
; 1FFFH IPL Instruction Pointer LSB
; C000H           LED port
; E000H - F000H   EEPROM 2864 for program storage
; -----------------------------------------------------------------
                                     ; 
                         ORG/E000H   ; EEPROM Start

E000 30 00               LDA #00H    ; Clear LED
E002 36                  NOTA
E003 31 C0 00            STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; Test Carry Status bit integrity
                         ; --------------------------------------------------------------------
E006 30 01               LDA #01H
E008 36                  NOTA
E009 31 C0 00            STA C000H   ; Output to LED port
E00C 30 00               LDA #00H
E00E 31 1F FB            STA 1FFBH   ; Write 0 to carry bit <0>
E011 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E014 2D 00               CMPA #00H
E016 2B F8 00            JNE F800H
E019 30 01               LDA #01H
E01B 31 1F FB            STA 1FFBH   ; Write 1 to carry bit <0>
E01E 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E021 2D 01               CMPA #01H
E023 2B F8 00            JNE F800H
E026 30 00               LDA #00H
E028 31 1F FB            STA 1FFBH   ; Write 0 to carry bit <0>
E02B 2A 1F FB            LDA 1FFBH   ; Read Carry Status
E02E 2D 00               CMPA #00H
E030 2B F8 00            JNE F800H

                         ; --------------------------------------------------------------------
                         ; Test Equal Status bit integrity
                         ; --------------------------------------------------------------------
E033 30 02               LDA #02H
E035 36                  NOTA
E036 31 C0 00            STA C000H   ; Output to LED port
E039 30 00               LDA #00H
E03B 31 1F FA            STA 1FFAH   ; Write 0 to Equal Status bit <0>
E03E 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E041 2D 00               CMPA #00H
E043 2B F8 00            JNE F800H
E046 30 01               LDA #01H
E048 31 1F FA            STA 1FFAH   ; Write 1 to Equal Status bit <0>
E04B 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E04E 2D 01               CMPA #01H
E050 2B F8 00            JNE F800H
E053 30 00               LDA #00H
E055 31 1F FA            STA 1FFAH   ; Write 0 to Equal Status bit <0>
E058 2A 1F FA            LDA 1FFAH   ; Read Equal Status
E05B 2D 00               CMPA #00H
E05D 2B F8 00            JNE F800H

                         ; --------------------------------------------------------------------
                         ; OP.08 STOP
                         ; STOP EXECUTING
                         ; Cannot test here it will stop execution...
                         ; --------------------------------------------------------------------
                         ;LDA #08H
                         ;NOTA
                         ;STA C000H   ; Output to LED port
                         ;STOP

                         ; --------------------------------------------------------------------
                         ; OP.29 ADDA ****H  
                         ; ADD A WITH BYTE AT ADDRESS, C UPDATE
                         ; --------------------------------------------------------------------
                         ;LDA #29H
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2A LDA ****H  
                         ; LOAD A WITH BYTE AT ADDRESS Test LDA #**H instruction 
                         ; --------------------------------------------------------------------
E060 30 2A               LDA #2AH
E062 36                  NOTA
E063 31 C0 00            STA C000H   ; Output to LED port
E066 30 AA               LDA #AAH    ; Load immediate in register A
E068 2D AA               CMPA #AAH
E06A 2B F8 00            JNE F800H
E06D 30 01               LDA #01H
E06F 2D 01               CMPA #01H
E071 2B F8 00            JNE F800H
E074 30 02               LDA #02H
E076 2D 02               CMPA #02H
E078 2B F8 00            JNE F800H
E07B 30 04               LDA #04H
E07D 2D 04               CMPA #04H
E07F 2B F8 00            JNE F800H
E082 30 08               LDA #08H
E084 2D 08               CMPA #08H
E086 2B F8 00            JNE F800H
E089 30 10               LDA #10H
E08B 2D 10               CMPA #10H
E08D 2B F8 00            JNE F800H
E090 30 20               LDA #20H
E092 2D 20               CMPA #20H
E094 2B F8 00            JNE F800H
E097 30 40               LDA #40H
E099 2D 40               CMPA #40H
E09B 2B F8 00            JNE F800H
E09E 30 80               LDA #80H
E0A0 2D 80               CMPA #80H
E0A2 2B F8 00            JNE F800H
E0A5 30 55               LDA #55H
E0A7 2D 55               CMPA #55H
E0A9 2B F8 00            JNE F800H
E0AC 30 FF               LDA #FFH
E0AE 2D FF               CMPA #FFH
E0B0 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.2B JNEQ ****H  
                         ; JUMP IF E=0
                         ; --------------------------------------------------------------------
                         ;LDA #2BH
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2C JEQ ****H
                         ; JUMP IF E=1
                         ; --------------------------------------------------------------------
                         ;LDA #2CH
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2D CMPA #**H
                         ; COMPARE A WITH IMMEDIATE VALUE 
                         ; --------------------------------------------------------------------
                         ;LDA #2DH
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2E ADCA #**H
                         ; ACCA+M+C>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
                         ;LDA #2EH
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.2F ADDA #**H
                         ; ACCA+M>ACCA     C UPDATED
                         ; --------------------------------------------------------------------
E0B3 30 2F               LDA #2FH
E0B5 36                  NOTA
E0B6 31 C0 00            STA C000H   ; Output to LED port
E0B9 30 23               LDA #23H
E0BB 2F 45               ADDA #45H
E0BD 2D 68               CMPA #68H
E0BF 2B F8 00            JNE F800H
E0C2 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E0C5 2D 00               CMPA #00H   ; Expecting C=0
E0C7 2B F8 00            JNE F800H
E0CA 30 8A               LDA #8AH
E0CC 2F BD               ADDA #BDH
E0CE 2D 47               CMPA #47H   
E0D0 2B F8 00            JNE F800H
E0D3 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E0D6 2D 01               CMPA #01H   ; Expecting C=1
E0D8 2B F8 00            JNE F800H
E0DB 30 01               LDA #01H
E0DD 2F 02               ADDA #02H
E0DF 2D 03               CMPA #03H
E0E1 2B F8 00            JNE F800H
E0E4 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E0E7 2D 00               CMPA #00H   ; Expecting C=0
E0E9 2B F8 00            JNE F800H
E0EC 30 FF               LDA #FFH
E0EE 2F FF               ADDA #FFH
E0F0 2D FE               CMPA #FEH
E0F2 2B F8 00            JNE F800H
E0F5 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E0F8 2D 01               CMPA #01H   ; Expecting C=1
E0FA 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.30 LDA #**H  
                         ; LOAD IMMEDIATE VALUE IN REGISTER A
                         ; --------------------------------------------------------------------
E0FD 30 30               LDA #30H
E0FF 36                  NOTA
E100 31 C0 00            STA C000H   ; Output to LED port
E103 30 00               LDA #00H
E105 2D 00               CMPA #00H
E107 2B F8 00            JNE F800H
E10A 30 01               LDA #01H
E10C 2D 01               CMPA #01H
E10E 2B F8 00            JNE F800H
E111 30 02               LDA #02H
E113 2D 02               CMPA #02H
E115 2B F8 00            JNE F800H
E118 30 04               LDA #04H
E11A 2D 04               CMPA #04H
E11C 2B F8 00            JNE F800H
E11F 30 08               LDA #08H
E121 2D 08               CMPA #08H
E123 2B F8 00            JNE F800H
E126 30 10               LDA #10H
E128 2D 10               CMPA #10H
E12A 2B F8 00            JNE F800H
E12D 30 20               LDA #20H
E12F 2D 20               CMPA #20H
E131 2B F8 00            JNE F800H
E134 30 40               LDA #40H
E136 2D 40               CMPA #40H
E138 2B F8 00            JNE F800H
E13B 30 80               LDA #80H
E13D 2D 80               CMPA #80H
E13F 2B F8 00            JNE F800H
E142 30 55               LDA #55H
E144 2D 55               CMPA #55H
E146 2B F8 00            JNE F800H
E149 30 AA               LDA #AAH
E14B 2D AA               CMPA #AAH
E14D 2B F8 00            JNE F800H
E150 30 FF               LDA #FFH
E152 2D FF               CMPA #FFH
E154 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.31 STA ****H 
                         ; STORE REG.A TO ADDRESSE
                         ; --------------------------------------------------------------------
E157 30 31               LDA #31H
E159 36                  NOTA
E15A 31 C0 00            STA C000H   ; Output to LED port
E15D 30 12               LDA #12H    ; Write to RAM
E15F 31 00 00            STA 0000H
E162 30 23               LDA #23H
E164 31 00 01            STA 0001H
E167 30 34               LDA #34H
E169 31 00 02            STA 0002H
E16C 30 45               LDA #45H
E16E 31 00 04            STA 0004H
E171 30 56               LDA #56H
E173 31 00 08            STA 0008H
E176 30 67               LDA #67H
E178 31 00 10            STA 0010H
E17B 30 78               LDA #78H
E17D 31 00 20            STA 0020H
E180 30 89               LDA #89H
E182 31 00 40            STA 0040H
E185 30 AB               LDA #ABH
E187 31 00 80            STA 0080H
E18A 30 BC               LDA #BCH
E18C 31 01 00            STA 0100H
E18F 30 CD               LDA #CDH
E191 31 02 00            STA 0200H
E194 30 DE               LDA #DEH
E196 31 04 00            STA 0400H
E199 30 22               LDA #22H
E19B 31 08 00            STA 0800H
E19E 30 33               LDA #33H
E1A0 31 10 00            STA 1000H
E1A3 30 44               LDA #44H
E1A5 31 17 00            STA 1700H
E1A8 2A 00 00            LDA 0000H   ; Read from RAM and compare
E1AB 2D 12               CMPA #12H
E1AD 2B F8 00            JNE F800H
E1B0 2A 00 01            LDA 0001H
E1B3 2D 23               CMPA #23H
E1B5 2B F8 00            JNE F800H
E1B8 2A 00 02            LDA 0002H
E1BB 2D 34               CMPA #34H
E1BD 2B F8 00            JNE F800H
E1C0 2A 00 04            LDA 0004H
E1C3 2D 45               CMPA #45H
E1C5 2B F8 00            JNE F800H
E1C8 2A 00 08            LDA 0008H
E1CB 2D 56               CMPA #56H
E1CD 2B F8 00            JNE F800H
E1D0 2A 00 10            LDA 0010H
E1D3 2D 67               CMPA #67H
E1D5 2B F8 00            JNE F800H
E1D8 2A 00 20            LDA 0020H
E1DB 2D 78               CMPA #78H
E1DD 2B F8 00            JNE F800H
E1E0 2A 00 40            LDA 0040H
E1E3 2D 89               CMPA #89H
E1E5 2B F8 00            JNE F800H
E1E8 2A 00 80            LDA 0080H
E1EB 2D AB               CMPA #ABH
E1ED 2B F8 00            JNE F800H
E1F0 2A 01 00            LDA 0100H
E1F3 2D BC               CMPA #BCH
E1F5 2B F8 00            JNE F800H
E1F8 2A 02 00            LDA 0200H
E1FB 2D CD               CMPA #CDH
E1FD 2B F8 00            JNE F800H
E200 2A 04 00            LDA 0400H
E203 2D DE               CMPA #DEH
E205 2B F8 00            JNE F800H
E208 2A 08 00            LDA 0800H
E20B 2D 22               CMPA #22H
E20D 2B F8 00            JNE F800H
E210 2A 10 00            LDA 1000H
E213 2D 33               CMPA #33H
E215 2B F8 00            JNE F800H
E218 2A 17 00            LDA 1700H
E21B 2D 44               CMPA #44H
E21D 2B F8 00            JNE F800H
                         ; --------------------------------------------------------------------
                         ; OP.32 JMP ****H 
                         ; JUMP INCONDITIONAL TO ADDRESS
                         ; --------------------------------------------------------------------
                         ;LDA #32H
                         ;NOTA
                         ;STA C000H   ; Output to LED port

                         ; --------------------------------------------------------------------
                         ; OP.33 ANDA #**H  REGISTER A AND LOGICAL IMMEDIATE 
                         ; --------------------------------------------------------------------
E220 30 33               LDA #33H
E222 36                  NOTA
E223 31 C0 00            STA C000H   ; Output to LED port
E226 30 FF               LDA #FFH
E228 33 52               ANDA #52H
E22A 2D 52               CMPA #52H
E22C 2B F8 00            JNE F800H
E22F 30 E7               LDA #E7H
E231 33 3C               ANDA #3CH
E233 2D 24               CMPA #24H
E235 2B F8 00            JNE F800H
E238 30 00               LDA #00H
E23A 33 00               ANDA #00H
E23C 2D 00               CMPA #00H
E23E 2B F8 00            JNE F800H
E241 30 FF               LDA #FFH
E243 33 FF               ANDA #FFH
E245 2D FF               CMPA #FFH
E247 2B F8 00            JNE F800H
E24A 30 FF               LDA #FFH
E24C 33 55               ANDA #55H
E24E 2D 55               CMPA #55H
E250 2B F8 00            JNE F800H
E253 30 FF               LDA #FFH
E255 33 00               ANDA #00H
E257 2D 00               CMPA #00H
E259 2B F8 00            JNE F800H

                         ; --------------------------------------------------------------------
                         ; OP.37 INCA  INCREMENT REGISTRE A UPDATE C (CARRY)
                         ; --------------------------------------------------------------------
E25C 30 37               LDA #37H
E25E 36                  NOTA
E25F 31 C0 00            STA C000H   ; Output to LED port
E262 30 00               LDA #00H
E264 37                  INCA
E265 2D 01               CMPA #01H
E267 2B F8 00            JNE F800H
E26A 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E26D 2D 00               CMPA #00H   ; Expecting C=0
E26F 2B F8 00            JNE F800H
E272 30 01               LDA #01H
E274 37                  INCA
E275 2D 02               CMPA #02H
E277 2B F8 00            JNE F800H
E27A 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E27D 2D 00               CMPA #00H   ; Expecting C=0
E27F 2B F8 00            JNE F800H
E282 30 7C               LDA #7CH
E284 37                  INCA
E285 37                  INCA
E286 37                  INCA
E287 37                  INCA
E288 37                  INCA
E289 37                  INCA
E28A 37                  INCA
E28B 37                  INCA
E28C 37                  INCA
E28D 37                  INCA
E28E 2D 86               CMPA #86H
E290 2B F8 00            JNE F800H
E293 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E296 2D 00               CMPA #00H   ; Expecting C=0
E298 2B F8 00            JNE F800H
E29B 30 FE               LDA #FEH
E29D 37                  INCA
E29E 2D FF               CMPA #FFH
E2A0 2B F8 00            JNE F800H
E2A3 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>
E2A6 2D 00               CMPA #00H   ; Expecting C=0
E2A8 2B F8 00            JNE F800H
E2AB 30 FF               LDA #FFH
E2AD 37                  INCA
E2AE 2D 00               CMPA #00H
E2B0 2B F8 00            JNE F800H
E2B3 09                  NOP
E2B4 2A 1F FB            LDA 1FFBH   ; Read Carry bit <0>  Appear to have a corrupted carry register,
                                     ;                     other bit than bit <0> may have been changed
E2B7 2D 01               CMPA #01H   ; Expecting C=1
E2B9 2B F8 00            JNE F800H

                         ; --------------------------------------------------------------------
                         ; FIBONACCI TEST
                         ; --------------------------------------------------------------------         
E2BC 30 FF               LDA #FFH
E2BE 36                  NOTA
E2BF 31 C0 00            STA C000H   ; Output to LED port
                                     ;
E2C2 30 00               LDA #00H    ; Init first number with 00H
E2C4 31 10 00            STA 1000H
E2C7 30 01               LDA #01H    ; Init second number with 01H
E2C9 31 10 01            STA 1001H
E2CC 2A 10 00            LDA 1000H   ; Load first number in A
E2CF 29 10 01            ADDA 1001H  ; Add second number to A
E2D2 31 10 02            STA 1002H   ; Store the summ
E2D5 2D 01               CMPA #01H   ; HEX   Decimal  Real Value (in 8 bit storage only)
E2D7 2B F8 00            JNE F800H   ; 01H   1        1

E2DA 2A 10 01            LDA 1001H   ; Move second number to the first number
E2DD 31 10 00            STA 1000H
E2E0 2A 10 02            LDA 1002H   ; Move summ to the second number
E2E3 31 10 01            STA 1001H
E2E6 2A 10 00            LDA 1000H   ; Load first number in A
E2E9 29 10 01            ADDA 1001H  ; Add second number to A
E2EC 31 10 02            STA 1002H   ; Store the summ
E2EF 2D 02               CMPA #02H   ; HEX   Decimal  Real Value
E2F1 2B F8 00            JNE F800H   ; 02H   2        2

E2F4 2A 10 01            LDA 1001H   ; Move second number to the first number
E2F7 31 10 00            STA 1000H
E2FA 2A 10 02            LDA 1002H   ; Move summ to the second number
E2FD 31 10 01            STA 1001H
E300 2A 10 00            LDA 1000H   ; Load first number in A
E303 29 10 01            ADDA 1001H  ; Add second number to A
E306 31 10 02            STA 1002H   ; Store the summ
E309 2D 03               CMPA #03H   ; HEX   Decimal  Real Value
E30B 2B F8 00            JNE F800H   ; 03H   3        3

E30E 2A 10 01            LDA 1001H   ; Move second number to the first number
E311 31 10 00            STA 1000H
E314 2A 10 02            LDA 1002H   ; Move summ to the second number
E317 31 10 01            STA 1001H
E31A 2A 10 00            LDA 1000H   ; Load first number in A
E31D 29 10 01            ADDA 1001H  ; Add second number to A
E320 31 10 02            STA 1002H   ; Store the summ
E323 2D 05               CMPA #05H   ; HEX   Decimal  Real Value
E325 2B F8 00            JNE F800H   ; 05H   5        5

E328 2A 10 01            LDA 1001H   ; Move second number to the first number
E32B 31 10 00            STA 1000H
E32E 2A 10 02            LDA 1002H   ; Move summ to the second number
E331 31 10 01            STA 1001H
E334 2A 10 00            LDA 1000H   ; Load first number in A
E337 29 10 01            ADDA 1001H  ; Add second number to A
E33A 31 10 02            STA 1002H   ; Store the summ
E33D 2D 08               CMPA #08H   ; HEX   Decimal  Real Value
E33F 2B F8 00            JNE F800H   ; 08H   8        8

E342 2A 10 01            LDA 1001H   ; Move second number to the first number
E345 31 10 00            STA 1000H
E348 2A 10 02            LDA 1002H   ; Move summ to the second number
E34B 31 10 01            STA 1001H
E34E 2A 10 00            LDA 1000H   ; Load first number in A
E351 29 10 01            ADDA 1001H  ; Add second number to A
E354 31 10 02            STA 1002H   ; Store the summ
E357 2D 0D               CMPA #0DH   ; HEX   Decimal  Real Value
E359 2B F8 00            JNE F800H   ; 0DH   13       13

E35C 2A 10 01            LDA 1001H   ; Move second number to the first number
E35F 31 10 00            STA 1000H
E362 2A 10 02            LDA 1002H   ; Move summ to the second number
E365 31 10 01            STA 1001H
E368 2A 10 00            LDA 1000H   ; Load first number in A
E36B 29 10 01            ADDA 1001H  ; Add second number to A
E36E 31 10 02            STA 1002H   ; Store the summ
E371 2D 15               CMPA #15H   ; HEX   Decimal  Real Value
E373 2B F8 00            JNE F800H   ; 15H   21       21

E376 2A 10 01            LDA 1001H   ; Move second number to the first number
E379 31 10 00            STA 1000H
E37C 2A 10 02            LDA 1002H   ; Move summ to the second number
E37F 31 10 01            STA 1001H
E382 2A 10 00            LDA 1000H   ; Load first number in A
E385 29 10 01            ADDA 1001H  ; Add second number to A
E388 31 10 02            STA 1002H   ; Store the summ
E38B 2D 22               CMPA #22H   ; HEX   Decimal  Real Value
E38D 2B F8 00            JNE F800H   ; 22H   34       34

E390 2A 10 01            LDA 1001H   ; Move second number to the first number
E393 31 10 00            STA 1000H
E396 2A 10 02            LDA 1002H   ; Move summ to the second number
E399 31 10 01            STA 1001H
E39C 2A 10 00            LDA 1000H   ; Load first number in A
E39F 29 10 01            ADDA 1001H  ; Add second number to A
E3A2 31 10 02            STA 1002H   ; Store the summ
E3A5 2D 37               CMPA #37H   ; HEX   Decimal  Real Value
E3A7 2B F8 00            JNE F800H   ; 37H   55       55

E3AA 2A 10 01            LDA 1001H   ; Move second number to the first number
E3AD 31 10 00            STA 1000H
E3B0 2A 10 02            LDA 1002H   ; Move summ to the second number
E3B3 31 10 01            STA 1001H
E3B6 2A 10 00            LDA 1000H   ; Load first number in A
E3B9 29 10 01            ADDA 1001H  ; Add second number to A
E3BC 31 10 02            STA 1002H   ; Store the summ
E3BF 2D 59               CMPA #59H   ; HEX   Decimal  Real Value
E3C1 2B F8 00            JNE F800H   ; 59H   89       89

E3C4 2A 10 01            LDA 1001H   ; Move second number to the first number
E3C7 31 10 00            STA 1000H
E3CA 2A 10 02            LDA 1002H   ; Move summ to the second number
E3CD 31 10 01            STA 1001H
E3D0 2A 10 00            LDA 1000H   ; Load first number in A
E3D3 29 10 01            ADDA 1001H  ; Add second number to A
E3D6 31 10 02            STA 1002H   ; Store the summ
E3D9 2D 90               CMPA #90H   ; HEX   Decimal  Real Value
E3DB 2B F8 00            JNE F800H   ; 90H   144      144

E3DE 2A 10 01            LDA 1001H   ; Move second number to the first number
E3E1 31 10 00            STA 1000H
E3E4 2A 10 02            LDA 1002H   ; Move summ to the second number
E3E7 31 10 01            STA 1001H
E3EA 2A 10 00            LDA 1000H   ; Load first number in A
E3ED 29 10 01            ADDA 1001H  ; Add second number to A
E3F0 31 10 02            STA 1002H   ; Store the summ
E3F3 2D E9               CMPA #E9H   ; HEX   Decimal  Real Value
E3F5 2B F8 00            JNE F800H   ; E9H   233      233

E3F8 2A 10 01            LDA 1001H   ; Move second number to the first number
E3FB 31 10 00            STA 1000H
E3FE 2A 10 02            LDA 1002H   ; Move summ to the second number
E401 31 10 01            STA 1001H
E404 2A 10 00            LDA 1000H   ; Load first number in A
E407 29 10 01            ADDA 1001H  ; Add second number to A
E40A 31 10 02            STA 1002H   ; Store the summ
E40D 2D 79               CMPA #79H   ; HEX   Decimal  Real Value
E40F 2B F8 00            JNE F800H   ; 79H   121      377 - (256*1) = 121

E412 2A 10 01            LDA 1001H   ; Move second number to the first number
E415 31 10 00            STA 1000H
E418 2A 10 02            LDA 1002H   ; Move summ to the second number
E41B 31 10 01            STA 1001H
E41E 2A 10 00            LDA 1000H   ; Load first number in A
E421 29 10 01            ADDA 1001H  ; Add second number to A
E424 31 10 02            STA 1002H   ; Store the summ
E427 2D 62               CMPA #62H   ; HEX   Decimal  Real Value
E429 2B F8 00            JNE F800H   ; 62H   98       610 - (256*2) = 98

E42C 2A 10 01            LDA 1001H   ; Move second number to the first number
E42F 31 10 00            STA 1000H
E432 2A 10 02            LDA 1002H   ; Move summ to the second number
E435 31 10 01            STA 1001H
E438 2A 10 00            LDA 1000H   ; Load first number in A
E43B 29 10 01            ADDA 1001H  ; Add second number to A
E43E 31 10 02            STA 1002H   ; Store the summ
E441 2D DB               CMPA #DBH   ; HEX   Decimal  Real Value
E443 2B F8 00            JNE F800H   ; DBH   219      987 - (256*3) = 219         

                         ; --------------------------------------------------------------------      
                         ; END OF FIBONACCI TEST
                         ; --------------------------------------------------------------------      

E446 32 E0 00            JMP E000H   ; Loop from start of diag test

                         ; --------------------------------------------------------------------
                         ; Error routine
                         ; --------------------------------------------------------------------
                         ORG/F800H   ; Diagnostic Error routine   
F800 08                  STOP        ; Stop execution
                         ;JMP F800H   ; Infinite Loop on error

                         ; --------------------------------------------------------------------
                         ; Reset Vector
                         ; --------------------------------------------------------------------
                         ORG/FFFEH   ; Set the Reset vector
FFFE E0                  DB E0H      ; MSB Reset Vector
FFFF 00                  DB 00H      ; LSB Reset Vector


Assembly complete
Number of errors = 0
